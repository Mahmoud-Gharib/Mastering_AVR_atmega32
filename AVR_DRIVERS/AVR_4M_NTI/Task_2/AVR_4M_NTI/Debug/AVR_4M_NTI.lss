
AVR_4M_NTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003032  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00003032  000030c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800068  00800068  000030ce  2**0
                  ALLOC
  3 .stab         00002ce8  00000000  00000000  000030d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001105  00000000  00000000  00005db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00006ebd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00006ffd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000716d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00008db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00009ca1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000aa50  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000abb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000ae3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000b60b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ab 36       	cpi	r26, 0x6B	; 107
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e2 e3       	ldi	r30, 0x32	; 50
      78:	f0 e3       	ldi	r31, 0x30	; 48
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <main>
      8a:	0c 94 17 18 	jmp	0x302e	; 0x302e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 e0 17 	jmp	0x2fc0	; 0x2fc0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 fc 17 	jmp	0x2ff8	; 0x2ff8 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 ec 17 	jmp	0x2fd8	; 0x2fd8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 08 18 	jmp	0x3010	; 0x3010 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 ec 17 	jmp	0x2fd8	; 0x2fd8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 08 18 	jmp	0x3010	; 0x3010 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 e0 17 	jmp	0x2fc0	; 0x2fc0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 fc 17 	jmp	0x2ff8	; 0x2ff8 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 ec 17 	jmp	0x2fd8	; 0x2fd8 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 08 18 	jmp	0x3010	; 0x3010 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 ec 17 	jmp	0x2fd8	; 0x2fd8 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 08 18 	jmp	0x3010	; 0x3010 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 ec 17 	jmp	0x2fd8	; 0x2fd8 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 08 18 	jmp	0x3010	; 0x3010 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 f0 17 	jmp	0x2fe0	; 0x2fe0 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 0c 18 	jmp	0x3018	; 0x3018 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <MDIO_voidSetPinDirection>:
#include "DIO_PRIVATE.h"
#include "DIO_INTERFACE.h"


void MDIO_voidSetPinDirection (u8 Copy_u8PortId, u8 Copy_u8PinId ,u8 Copy_u8PinDirection)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	00 d0       	rcall	.+0      	; 0xb4c <MDIO_voidSetPinDirection+0x6>
     b4c:	00 d0       	rcall	.+0      	; 0xb4e <MDIO_voidSetPinDirection+0x8>
     b4e:	0f 92       	push	r0
     b50:	cd b7       	in	r28, 0x3d	; 61
     b52:	de b7       	in	r29, 0x3e	; 62
     b54:	89 83       	std	Y+1, r24	; 0x01
     b56:	6a 83       	std	Y+2, r22	; 0x02
     b58:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortId)
     b5a:	89 81       	ldd	r24, Y+1	; 0x01
     b5c:	28 2f       	mov	r18, r24
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	3d 83       	std	Y+5, r19	; 0x05
     b62:	2c 83       	std	Y+4, r18	; 0x04
     b64:	8c 81       	ldd	r24, Y+4	; 0x04
     b66:	9d 81       	ldd	r25, Y+5	; 0x05
     b68:	81 30       	cpi	r24, 0x01	; 1
     b6a:	91 05       	cpc	r25, r1
     b6c:	09 f4       	brne	.+2      	; 0xb70 <MDIO_voidSetPinDirection+0x2a>
     b6e:	47 c0       	rjmp	.+142    	; 0xbfe <MDIO_voidSetPinDirection+0xb8>
     b70:	2c 81       	ldd	r18, Y+4	; 0x04
     b72:	3d 81       	ldd	r19, Y+5	; 0x05
     b74:	22 30       	cpi	r18, 0x02	; 2
     b76:	31 05       	cpc	r19, r1
     b78:	2c f4       	brge	.+10     	; 0xb84 <MDIO_voidSetPinDirection+0x3e>
     b7a:	8c 81       	ldd	r24, Y+4	; 0x04
     b7c:	9d 81       	ldd	r25, Y+5	; 0x05
     b7e:	00 97       	sbiw	r24, 0x00	; 0
     b80:	71 f0       	breq	.+28     	; 0xb9e <MDIO_voidSetPinDirection+0x58>
     b82:	cb c0       	rjmp	.+406    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
     b84:	2c 81       	ldd	r18, Y+4	; 0x04
     b86:	3d 81       	ldd	r19, Y+5	; 0x05
     b88:	22 30       	cpi	r18, 0x02	; 2
     b8a:	31 05       	cpc	r19, r1
     b8c:	09 f4       	brne	.+2      	; 0xb90 <MDIO_voidSetPinDirection+0x4a>
     b8e:	67 c0       	rjmp	.+206    	; 0xc5e <MDIO_voidSetPinDirection+0x118>
     b90:	8c 81       	ldd	r24, Y+4	; 0x04
     b92:	9d 81       	ldd	r25, Y+5	; 0x05
     b94:	83 30       	cpi	r24, 0x03	; 3
     b96:	91 05       	cpc	r25, r1
     b98:	09 f4       	brne	.+2      	; 0xb9c <MDIO_voidSetPinDirection+0x56>
     b9a:	91 c0       	rjmp	.+290    	; 0xcbe <MDIO_voidSetPinDirection+0x178>
     b9c:	be c0       	rjmp	.+380    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
	{
	case DIO_u8_PORTA:
		if(Copy_u8PinDirection == DIO_u8_OUTPUT )
     b9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ba0:	81 30       	cpi	r24, 0x01	; 1
     ba2:	a1 f4       	brne	.+40     	; 0xbcc <MDIO_voidSetPinDirection+0x86>
		{
			SET_BIT(DIO_u8_DDRA_REG,Copy_u8PinId);
     ba4:	aa e3       	ldi	r26, 0x3A	; 58
     ba6:	b0 e0       	ldi	r27, 0x00	; 0
     ba8:	ea e3       	ldi	r30, 0x3A	; 58
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	80 81       	ld	r24, Z
     bae:	48 2f       	mov	r20, r24
     bb0:	8a 81       	ldd	r24, Y+2	; 0x02
     bb2:	28 2f       	mov	r18, r24
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	02 2e       	mov	r0, r18
     bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <MDIO_voidSetPinDirection+0x7c>
     bbe:	88 0f       	add	r24, r24
     bc0:	99 1f       	adc	r25, r25
     bc2:	0a 94       	dec	r0
     bc4:	e2 f7       	brpl	.-8      	; 0xbbe <MDIO_voidSetPinDirection+0x78>
     bc6:	84 2b       	or	r24, r20
     bc8:	8c 93       	st	X, r24
     bca:	a7 c0       	rjmp	.+334    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8PinDirection == DIO_u8_INPUT)
     bcc:	8b 81       	ldd	r24, Y+3	; 0x03
     bce:	88 23       	and	r24, r24
     bd0:	09 f0       	breq	.+2      	; 0xbd4 <MDIO_voidSetPinDirection+0x8e>
     bd2:	a3 c0       	rjmp	.+326    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DIO_u8_DDRA_REG,Copy_u8PinId);
     bd4:	aa e3       	ldi	r26, 0x3A	; 58
     bd6:	b0 e0       	ldi	r27, 0x00	; 0
     bd8:	ea e3       	ldi	r30, 0x3A	; 58
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	80 81       	ld	r24, Z
     bde:	48 2f       	mov	r20, r24
     be0:	8a 81       	ldd	r24, Y+2	; 0x02
     be2:	28 2f       	mov	r18, r24
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	02 2e       	mov	r0, r18
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <MDIO_voidSetPinDirection+0xac>
     bee:	88 0f       	add	r24, r24
     bf0:	99 1f       	adc	r25, r25
     bf2:	0a 94       	dec	r0
     bf4:	e2 f7       	brpl	.-8      	; 0xbee <MDIO_voidSetPinDirection+0xa8>
     bf6:	80 95       	com	r24
     bf8:	84 23       	and	r24, r20
     bfa:	8c 93       	st	X, r24
     bfc:	8e c0       	rjmp	.+284    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		break;
	case DIO_u8_PORTB:
		if(Copy_u8PinDirection == DIO_u8_OUTPUT )
     bfe:	8b 81       	ldd	r24, Y+3	; 0x03
     c00:	81 30       	cpi	r24, 0x01	; 1
     c02:	a1 f4       	brne	.+40     	; 0xc2c <MDIO_voidSetPinDirection+0xe6>
		{
			SET_BIT(DIO_u8_DDRB_REG,Copy_u8PinId);
     c04:	a7 e3       	ldi	r26, 0x37	; 55
     c06:	b0 e0       	ldi	r27, 0x00	; 0
     c08:	e7 e3       	ldi	r30, 0x37	; 55
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	80 81       	ld	r24, Z
     c0e:	48 2f       	mov	r20, r24
     c10:	8a 81       	ldd	r24, Y+2	; 0x02
     c12:	28 2f       	mov	r18, r24
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	02 2e       	mov	r0, r18
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <MDIO_voidSetPinDirection+0xdc>
     c1e:	88 0f       	add	r24, r24
     c20:	99 1f       	adc	r25, r25
     c22:	0a 94       	dec	r0
     c24:	e2 f7       	brpl	.-8      	; 0xc1e <MDIO_voidSetPinDirection+0xd8>
     c26:	84 2b       	or	r24, r20
     c28:	8c 93       	st	X, r24
     c2a:	77 c0       	rjmp	.+238    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8PinDirection == DIO_u8_INPUT)
     c2c:	8b 81       	ldd	r24, Y+3	; 0x03
     c2e:	88 23       	and	r24, r24
     c30:	09 f0       	breq	.+2      	; 0xc34 <MDIO_voidSetPinDirection+0xee>
     c32:	73 c0       	rjmp	.+230    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DIO_u8_DDRB_REG,Copy_u8PinId);
     c34:	a7 e3       	ldi	r26, 0x37	; 55
     c36:	b0 e0       	ldi	r27, 0x00	; 0
     c38:	e7 e3       	ldi	r30, 0x37	; 55
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	80 81       	ld	r24, Z
     c3e:	48 2f       	mov	r20, r24
     c40:	8a 81       	ldd	r24, Y+2	; 0x02
     c42:	28 2f       	mov	r18, r24
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	02 2e       	mov	r0, r18
     c4c:	02 c0       	rjmp	.+4      	; 0xc52 <MDIO_voidSetPinDirection+0x10c>
     c4e:	88 0f       	add	r24, r24
     c50:	99 1f       	adc	r25, r25
     c52:	0a 94       	dec	r0
     c54:	e2 f7       	brpl	.-8      	; 0xc4e <MDIO_voidSetPinDirection+0x108>
     c56:	80 95       	com	r24
     c58:	84 23       	and	r24, r20
     c5a:	8c 93       	st	X, r24
     c5c:	5e c0       	rjmp	.+188    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		break;
	case DIO_u8_PORTC:
		if(Copy_u8PinDirection == DIO_u8_OUTPUT )
     c5e:	8b 81       	ldd	r24, Y+3	; 0x03
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	a1 f4       	brne	.+40     	; 0xc8c <MDIO_voidSetPinDirection+0x146>
		{
			SET_BIT(DIO_u8_DDRC_REG,Copy_u8PinId);
     c64:	a4 e3       	ldi	r26, 0x34	; 52
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	e4 e3       	ldi	r30, 0x34	; 52
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	48 2f       	mov	r20, r24
     c70:	8a 81       	ldd	r24, Y+2	; 0x02
     c72:	28 2f       	mov	r18, r24
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 2e       	mov	r0, r18
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <MDIO_voidSetPinDirection+0x13c>
     c7e:	88 0f       	add	r24, r24
     c80:	99 1f       	adc	r25, r25
     c82:	0a 94       	dec	r0
     c84:	e2 f7       	brpl	.-8      	; 0xc7e <MDIO_voidSetPinDirection+0x138>
     c86:	84 2b       	or	r24, r20
     c88:	8c 93       	st	X, r24
     c8a:	47 c0       	rjmp	.+142    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8PinDirection == DIO_u8_INPUT)
     c8c:	8b 81       	ldd	r24, Y+3	; 0x03
     c8e:	88 23       	and	r24, r24
     c90:	09 f0       	breq	.+2      	; 0xc94 <MDIO_voidSetPinDirection+0x14e>
     c92:	43 c0       	rjmp	.+134    	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DIO_u8_DDRC_REG,Copy_u8PinId);
     c94:	a4 e3       	ldi	r26, 0x34	; 52
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	e4 e3       	ldi	r30, 0x34	; 52
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	80 81       	ld	r24, Z
     c9e:	48 2f       	mov	r20, r24
     ca0:	8a 81       	ldd	r24, Y+2	; 0x02
     ca2:	28 2f       	mov	r18, r24
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	02 2e       	mov	r0, r18
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <MDIO_voidSetPinDirection+0x16c>
     cae:	88 0f       	add	r24, r24
     cb0:	99 1f       	adc	r25, r25
     cb2:	0a 94       	dec	r0
     cb4:	e2 f7       	brpl	.-8      	; 0xcae <MDIO_voidSetPinDirection+0x168>
     cb6:	80 95       	com	r24
     cb8:	84 23       	and	r24, r20
     cba:	8c 93       	st	X, r24
     cbc:	2e c0       	rjmp	.+92     	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		break;
	case DIO_u8_PORTD:
		if(Copy_u8PinDirection == DIO_u8_OUTPUT )
     cbe:	8b 81       	ldd	r24, Y+3	; 0x03
     cc0:	81 30       	cpi	r24, 0x01	; 1
     cc2:	a1 f4       	brne	.+40     	; 0xcec <MDIO_voidSetPinDirection+0x1a6>
		{
			SET_BIT(DIO_u8_DDRD_REG,Copy_u8PinId);
     cc4:	a1 e3       	ldi	r26, 0x31	; 49
     cc6:	b0 e0       	ldi	r27, 0x00	; 0
     cc8:	e1 e3       	ldi	r30, 0x31	; 49
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	80 81       	ld	r24, Z
     cce:	48 2f       	mov	r20, r24
     cd0:	8a 81       	ldd	r24, Y+2	; 0x02
     cd2:	28 2f       	mov	r18, r24
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	81 e0       	ldi	r24, 0x01	; 1
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	02 2e       	mov	r0, r18
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <MDIO_voidSetPinDirection+0x19c>
     cde:	88 0f       	add	r24, r24
     ce0:	99 1f       	adc	r25, r25
     ce2:	0a 94       	dec	r0
     ce4:	e2 f7       	brpl	.-8      	; 0xcde <MDIO_voidSetPinDirection+0x198>
     ce6:	84 2b       	or	r24, r20
     ce8:	8c 93       	st	X, r24
     cea:	17 c0       	rjmp	.+46     	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8PinDirection == DIO_u8_INPUT)
     cec:	8b 81       	ldd	r24, Y+3	; 0x03
     cee:	88 23       	and	r24, r24
     cf0:	a1 f4       	brne	.+40     	; 0xd1a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DIO_u8_DDRD_REG,Copy_u8PinId);
     cf2:	a1 e3       	ldi	r26, 0x31	; 49
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	e1 e3       	ldi	r30, 0x31	; 49
     cf8:	f0 e0       	ldi	r31, 0x00	; 0
     cfa:	80 81       	ld	r24, Z
     cfc:	48 2f       	mov	r20, r24
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	28 2f       	mov	r18, r24
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	02 2e       	mov	r0, r18
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <MDIO_voidSetPinDirection+0x1ca>
     d0c:	88 0f       	add	r24, r24
     d0e:	99 1f       	adc	r25, r25
     d10:	0a 94       	dec	r0
     d12:	e2 f7       	brpl	.-8      	; 0xd0c <MDIO_voidSetPinDirection+0x1c6>
     d14:	80 95       	com	r24
     d16:	84 23       	and	r24, r20
     d18:	8c 93       	st	X, r24
		break;
	default:

		break;
	}
}
     d1a:	0f 90       	pop	r0
     d1c:	0f 90       	pop	r0
     d1e:	0f 90       	pop	r0
     d20:	0f 90       	pop	r0
     d22:	0f 90       	pop	r0
     d24:	cf 91       	pop	r28
     d26:	df 91       	pop	r29
     d28:	08 95       	ret

00000d2a <MDIO_voidSetPinValue>:


void MDIO_voidSetPinValue     (u8 Copy_u8PortId, u8 Copy_u8PinId ,u8 Copy_u8PinValue)
{
     d2a:	df 93       	push	r29
     d2c:	cf 93       	push	r28
     d2e:	00 d0       	rcall	.+0      	; 0xd30 <MDIO_voidSetPinValue+0x6>
     d30:	00 d0       	rcall	.+0      	; 0xd32 <MDIO_voidSetPinValue+0x8>
     d32:	0f 92       	push	r0
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
     d38:	89 83       	std	Y+1, r24	; 0x01
     d3a:	6a 83       	std	Y+2, r22	; 0x02
     d3c:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortId)
     d3e:	89 81       	ldd	r24, Y+1	; 0x01
     d40:	28 2f       	mov	r18, r24
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	3d 83       	std	Y+5, r19	; 0x05
     d46:	2c 83       	std	Y+4, r18	; 0x04
     d48:	8c 81       	ldd	r24, Y+4	; 0x04
     d4a:	9d 81       	ldd	r25, Y+5	; 0x05
     d4c:	81 30       	cpi	r24, 0x01	; 1
     d4e:	91 05       	cpc	r25, r1
     d50:	09 f4       	brne	.+2      	; 0xd54 <MDIO_voidSetPinValue+0x2a>
     d52:	47 c0       	rjmp	.+142    	; 0xde2 <MDIO_voidSetPinValue+0xb8>
     d54:	2c 81       	ldd	r18, Y+4	; 0x04
     d56:	3d 81       	ldd	r19, Y+5	; 0x05
     d58:	22 30       	cpi	r18, 0x02	; 2
     d5a:	31 05       	cpc	r19, r1
     d5c:	2c f4       	brge	.+10     	; 0xd68 <MDIO_voidSetPinValue+0x3e>
     d5e:	8c 81       	ldd	r24, Y+4	; 0x04
     d60:	9d 81       	ldd	r25, Y+5	; 0x05
     d62:	00 97       	sbiw	r24, 0x00	; 0
     d64:	71 f0       	breq	.+28     	; 0xd82 <MDIO_voidSetPinValue+0x58>
     d66:	cb c0       	rjmp	.+406    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
     d68:	2c 81       	ldd	r18, Y+4	; 0x04
     d6a:	3d 81       	ldd	r19, Y+5	; 0x05
     d6c:	22 30       	cpi	r18, 0x02	; 2
     d6e:	31 05       	cpc	r19, r1
     d70:	09 f4       	brne	.+2      	; 0xd74 <MDIO_voidSetPinValue+0x4a>
     d72:	67 c0       	rjmp	.+206    	; 0xe42 <MDIO_voidSetPinValue+0x118>
     d74:	8c 81       	ldd	r24, Y+4	; 0x04
     d76:	9d 81       	ldd	r25, Y+5	; 0x05
     d78:	83 30       	cpi	r24, 0x03	; 3
     d7a:	91 05       	cpc	r25, r1
     d7c:	09 f4       	brne	.+2      	; 0xd80 <MDIO_voidSetPinValue+0x56>
     d7e:	91 c0       	rjmp	.+290    	; 0xea2 <MDIO_voidSetPinValue+0x178>
     d80:	be c0       	rjmp	.+380    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
	{
	case DIO_u8_PORTA:
		if(Copy_u8PinValue == DIO_u8_HIGH )
     d82:	8b 81       	ldd	r24, Y+3	; 0x03
     d84:	81 30       	cpi	r24, 0x01	; 1
     d86:	a1 f4       	brne	.+40     	; 0xdb0 <MDIO_voidSetPinValue+0x86>
		{
			SET_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);
     d88:	ab e3       	ldi	r26, 0x3B	; 59
     d8a:	b0 e0       	ldi	r27, 0x00	; 0
     d8c:	eb e3       	ldi	r30, 0x3B	; 59
     d8e:	f0 e0       	ldi	r31, 0x00	; 0
     d90:	80 81       	ld	r24, Z
     d92:	48 2f       	mov	r20, r24
     d94:	8a 81       	ldd	r24, Y+2	; 0x02
     d96:	28 2f       	mov	r18, r24
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	02 2e       	mov	r0, r18
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <MDIO_voidSetPinValue+0x7c>
     da2:	88 0f       	add	r24, r24
     da4:	99 1f       	adc	r25, r25
     da6:	0a 94       	dec	r0
     da8:	e2 f7       	brpl	.-8      	; 0xda2 <MDIO_voidSetPinValue+0x78>
     daa:	84 2b       	or	r24, r20
     dac:	8c 93       	st	X, r24
     dae:	a7 c0       	rjmp	.+334    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		else if(Copy_u8PinValue == DIO_u8_LOW)
     db0:	8b 81       	ldd	r24, Y+3	; 0x03
     db2:	88 23       	and	r24, r24
     db4:	09 f0       	breq	.+2      	; 0xdb8 <MDIO_voidSetPinValue+0x8e>
     db6:	a3 c0       	rjmp	.+326    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		{
			CLR_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);
     db8:	ab e3       	ldi	r26, 0x3B	; 59
     dba:	b0 e0       	ldi	r27, 0x00	; 0
     dbc:	eb e3       	ldi	r30, 0x3B	; 59
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	80 81       	ld	r24, Z
     dc2:	48 2f       	mov	r20, r24
     dc4:	8a 81       	ldd	r24, Y+2	; 0x02
     dc6:	28 2f       	mov	r18, r24
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	81 e0       	ldi	r24, 0x01	; 1
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	02 2e       	mov	r0, r18
     dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <MDIO_voidSetPinValue+0xac>
     dd2:	88 0f       	add	r24, r24
     dd4:	99 1f       	adc	r25, r25
     dd6:	0a 94       	dec	r0
     dd8:	e2 f7       	brpl	.-8      	; 0xdd2 <MDIO_voidSetPinValue+0xa8>
     dda:	80 95       	com	r24
     ddc:	84 23       	and	r24, r20
     dde:	8c 93       	st	X, r24
     de0:	8e c0       	rjmp	.+284    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		break;
	case DIO_u8_PORTB:
		if(Copy_u8PinValue == DIO_u8_HIGH )
     de2:	8b 81       	ldd	r24, Y+3	; 0x03
     de4:	81 30       	cpi	r24, 0x01	; 1
     de6:	a1 f4       	brne	.+40     	; 0xe10 <MDIO_voidSetPinValue+0xe6>
		{
			SET_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);
     de8:	a8 e3       	ldi	r26, 0x38	; 56
     dea:	b0 e0       	ldi	r27, 0x00	; 0
     dec:	e8 e3       	ldi	r30, 0x38	; 56
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	80 81       	ld	r24, Z
     df2:	48 2f       	mov	r20, r24
     df4:	8a 81       	ldd	r24, Y+2	; 0x02
     df6:	28 2f       	mov	r18, r24
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	02 2e       	mov	r0, r18
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <MDIO_voidSetPinValue+0xdc>
     e02:	88 0f       	add	r24, r24
     e04:	99 1f       	adc	r25, r25
     e06:	0a 94       	dec	r0
     e08:	e2 f7       	brpl	.-8      	; 0xe02 <MDIO_voidSetPinValue+0xd8>
     e0a:	84 2b       	or	r24, r20
     e0c:	8c 93       	st	X, r24
     e0e:	77 c0       	rjmp	.+238    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		else if(Copy_u8PinValue == DIO_u8_LOW)
     e10:	8b 81       	ldd	r24, Y+3	; 0x03
     e12:	88 23       	and	r24, r24
     e14:	09 f0       	breq	.+2      	; 0xe18 <MDIO_voidSetPinValue+0xee>
     e16:	73 c0       	rjmp	.+230    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		{
			CLR_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);
     e18:	a8 e3       	ldi	r26, 0x38	; 56
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e8 e3       	ldi	r30, 0x38	; 56
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	8a 81       	ldd	r24, Y+2	; 0x02
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 2e       	mov	r0, r18
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <MDIO_voidSetPinValue+0x10c>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 94       	dec	r0
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <MDIO_voidSetPinValue+0x108>
     e3a:	80 95       	com	r24
     e3c:	84 23       	and	r24, r20
     e3e:	8c 93       	st	X, r24
     e40:	5e c0       	rjmp	.+188    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		break;
	case DIO_u8_PORTC:
		if(Copy_u8PinValue == DIO_u8_HIGH )
     e42:	8b 81       	ldd	r24, Y+3	; 0x03
     e44:	81 30       	cpi	r24, 0x01	; 1
     e46:	a1 f4       	brne	.+40     	; 0xe70 <MDIO_voidSetPinValue+0x146>
		{
			SET_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);
     e48:	a5 e3       	ldi	r26, 0x35	; 53
     e4a:	b0 e0       	ldi	r27, 0x00	; 0
     e4c:	e5 e3       	ldi	r30, 0x35	; 53
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	80 81       	ld	r24, Z
     e52:	48 2f       	mov	r20, r24
     e54:	8a 81       	ldd	r24, Y+2	; 0x02
     e56:	28 2f       	mov	r18, r24
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	02 2e       	mov	r0, r18
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <MDIO_voidSetPinValue+0x13c>
     e62:	88 0f       	add	r24, r24
     e64:	99 1f       	adc	r25, r25
     e66:	0a 94       	dec	r0
     e68:	e2 f7       	brpl	.-8      	; 0xe62 <MDIO_voidSetPinValue+0x138>
     e6a:	84 2b       	or	r24, r20
     e6c:	8c 93       	st	X, r24
     e6e:	47 c0       	rjmp	.+142    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		else if(Copy_u8PinValue == DIO_u8_LOW)
     e70:	8b 81       	ldd	r24, Y+3	; 0x03
     e72:	88 23       	and	r24, r24
     e74:	09 f0       	breq	.+2      	; 0xe78 <MDIO_voidSetPinValue+0x14e>
     e76:	43 c0       	rjmp	.+134    	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		{
			CLR_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);
     e78:	a5 e3       	ldi	r26, 0x35	; 53
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	e5 e3       	ldi	r30, 0x35	; 53
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	48 2f       	mov	r20, r24
     e84:	8a 81       	ldd	r24, Y+2	; 0x02
     e86:	28 2f       	mov	r18, r24
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	02 2e       	mov	r0, r18
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <MDIO_voidSetPinValue+0x16c>
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	0a 94       	dec	r0
     e98:	e2 f7       	brpl	.-8      	; 0xe92 <MDIO_voidSetPinValue+0x168>
     e9a:	80 95       	com	r24
     e9c:	84 23       	and	r24, r20
     e9e:	8c 93       	st	X, r24
     ea0:	2e c0       	rjmp	.+92     	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		break;
	case DIO_u8_PORTD:
		if(Copy_u8PinValue == DIO_u8_HIGH )
     ea2:	8b 81       	ldd	r24, Y+3	; 0x03
     ea4:	81 30       	cpi	r24, 0x01	; 1
     ea6:	a1 f4       	brne	.+40     	; 0xed0 <MDIO_voidSetPinValue+0x1a6>
		{
			SET_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);
     ea8:	a2 e3       	ldi	r26, 0x32	; 50
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	e2 e3       	ldi	r30, 0x32	; 50
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	80 81       	ld	r24, Z
     eb2:	48 2f       	mov	r20, r24
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	28 2f       	mov	r18, r24
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	02 2e       	mov	r0, r18
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <MDIO_voidSetPinValue+0x19c>
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	0a 94       	dec	r0
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <MDIO_voidSetPinValue+0x198>
     eca:	84 2b       	or	r24, r20
     ecc:	8c 93       	st	X, r24
     ece:	17 c0       	rjmp	.+46     	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		}
		else if(Copy_u8PinValue == DIO_u8_LOW)
     ed0:	8b 81       	ldd	r24, Y+3	; 0x03
     ed2:	88 23       	and	r24, r24
     ed4:	a1 f4       	brne	.+40     	; 0xefe <MDIO_voidSetPinValue+0x1d4>
		{
			CLR_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);
     ed6:	a2 e3       	ldi	r26, 0x32	; 50
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	e2 e3       	ldi	r30, 0x32	; 50
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	80 81       	ld	r24, Z
     ee0:	48 2f       	mov	r20, r24
     ee2:	8a 81       	ldd	r24, Y+2	; 0x02
     ee4:	28 2f       	mov	r18, r24
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	02 2e       	mov	r0, r18
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <MDIO_voidSetPinValue+0x1ca>
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	0a 94       	dec	r0
     ef6:	e2 f7       	brpl	.-8      	; 0xef0 <MDIO_voidSetPinValue+0x1c6>
     ef8:	80 95       	com	r24
     efa:	84 23       	and	r24, r20
     efc:	8c 93       	st	X, r24
		break;
	default:

		break;
	}
}
     efe:	0f 90       	pop	r0
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	0f 90       	pop	r0
     f06:	0f 90       	pop	r0
     f08:	cf 91       	pop	r28
     f0a:	df 91       	pop	r29
     f0c:	08 95       	ret

00000f0e <MDIO_voidSetPortDirection>:


void MDIO_voidSetPortDirection(u8 Copy_u8PortId, u8 Copy_u8PortDirection)
{
     f0e:	df 93       	push	r29
     f10:	cf 93       	push	r28
     f12:	00 d0       	rcall	.+0      	; 0xf14 <MDIO_voidSetPortDirection+0x6>
     f14:	00 d0       	rcall	.+0      	; 0xf16 <MDIO_voidSetPortDirection+0x8>
     f16:	cd b7       	in	r28, 0x3d	; 61
     f18:	de b7       	in	r29, 0x3e	; 62
     f1a:	89 83       	std	Y+1, r24	; 0x01
     f1c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortId)
     f1e:	89 81       	ldd	r24, Y+1	; 0x01
     f20:	28 2f       	mov	r18, r24
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	3c 83       	std	Y+4, r19	; 0x04
     f26:	2b 83       	std	Y+3, r18	; 0x03
     f28:	8b 81       	ldd	r24, Y+3	; 0x03
     f2a:	9c 81       	ldd	r25, Y+4	; 0x04
     f2c:	81 30       	cpi	r24, 0x01	; 1
     f2e:	91 05       	cpc	r25, r1
     f30:	d1 f0       	breq	.+52     	; 0xf66 <MDIO_voidSetPortDirection+0x58>
     f32:	2b 81       	ldd	r18, Y+3	; 0x03
     f34:	3c 81       	ldd	r19, Y+4	; 0x04
     f36:	22 30       	cpi	r18, 0x02	; 2
     f38:	31 05       	cpc	r19, r1
     f3a:	2c f4       	brge	.+10     	; 0xf46 <MDIO_voidSetPortDirection+0x38>
     f3c:	8b 81       	ldd	r24, Y+3	; 0x03
     f3e:	9c 81       	ldd	r25, Y+4	; 0x04
     f40:	00 97       	sbiw	r24, 0x00	; 0
     f42:	61 f0       	breq	.+24     	; 0xf5c <MDIO_voidSetPortDirection+0x4e>
     f44:	1e c0       	rjmp	.+60     	; 0xf82 <MDIO_voidSetPortDirection+0x74>
     f46:	2b 81       	ldd	r18, Y+3	; 0x03
     f48:	3c 81       	ldd	r19, Y+4	; 0x04
     f4a:	22 30       	cpi	r18, 0x02	; 2
     f4c:	31 05       	cpc	r19, r1
     f4e:	81 f0       	breq	.+32     	; 0xf70 <MDIO_voidSetPortDirection+0x62>
     f50:	8b 81       	ldd	r24, Y+3	; 0x03
     f52:	9c 81       	ldd	r25, Y+4	; 0x04
     f54:	83 30       	cpi	r24, 0x03	; 3
     f56:	91 05       	cpc	r25, r1
     f58:	81 f0       	breq	.+32     	; 0xf7a <MDIO_voidSetPortDirection+0x6c>
     f5a:	13 c0       	rjmp	.+38     	; 0xf82 <MDIO_voidSetPortDirection+0x74>
	{
	case DIO_u8_PORTA:
		DIO_u8_DDRA_REG = Copy_u8PortDirection;
     f5c:	ea e3       	ldi	r30, 0x3A	; 58
     f5e:	f0 e0       	ldi	r31, 0x00	; 0
     f60:	8a 81       	ldd	r24, Y+2	; 0x02
     f62:	80 83       	st	Z, r24
     f64:	0e c0       	rjmp	.+28     	; 0xf82 <MDIO_voidSetPortDirection+0x74>
		break;
	case DIO_u8_PORTB:
		DIO_u8_DDRB_REG = Copy_u8PortDirection;
     f66:	e7 e3       	ldi	r30, 0x37	; 55
     f68:	f0 e0       	ldi	r31, 0x00	; 0
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	80 83       	st	Z, r24
     f6e:	09 c0       	rjmp	.+18     	; 0xf82 <MDIO_voidSetPortDirection+0x74>
		break;
	case DIO_u8_PORTC:
		DIO_u8_DDRC_REG = Copy_u8PortDirection;
     f70:	e4 e3       	ldi	r30, 0x34	; 52
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	8a 81       	ldd	r24, Y+2	; 0x02
     f76:	80 83       	st	Z, r24
     f78:	04 c0       	rjmp	.+8      	; 0xf82 <MDIO_voidSetPortDirection+0x74>
		break;
	case DIO_u8_PORTD:
		DIO_u8_DDRD_REG = Copy_u8PortDirection;
     f7a:	e1 e3       	ldi	r30, 0x31	; 49
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	8a 81       	ldd	r24, Y+2	; 0x02
     f80:	80 83       	st	Z, r24
		break;
	default:

		break;
	}
}
     f82:	0f 90       	pop	r0
     f84:	0f 90       	pop	r0
     f86:	0f 90       	pop	r0
     f88:	0f 90       	pop	r0
     f8a:	cf 91       	pop	r28
     f8c:	df 91       	pop	r29
     f8e:	08 95       	ret

00000f90 <MDIO_voidSetPortValue>:


void MDIO_voidSetPortValue    (u8 Copy_u8PortId, u8 Copy_u8PortValue)
{
     f90:	df 93       	push	r29
     f92:	cf 93       	push	r28
     f94:	00 d0       	rcall	.+0      	; 0xf96 <MDIO_voidSetPortValue+0x6>
     f96:	00 d0       	rcall	.+0      	; 0xf98 <MDIO_voidSetPortValue+0x8>
     f98:	cd b7       	in	r28, 0x3d	; 61
     f9a:	de b7       	in	r29, 0x3e	; 62
     f9c:	89 83       	std	Y+1, r24	; 0x01
     f9e:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortId)
     fa0:	89 81       	ldd	r24, Y+1	; 0x01
     fa2:	28 2f       	mov	r18, r24
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	3c 83       	std	Y+4, r19	; 0x04
     fa8:	2b 83       	std	Y+3, r18	; 0x03
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	9c 81       	ldd	r25, Y+4	; 0x04
     fae:	81 30       	cpi	r24, 0x01	; 1
     fb0:	91 05       	cpc	r25, r1
     fb2:	d1 f0       	breq	.+52     	; 0xfe8 <MDIO_voidSetPortValue+0x58>
     fb4:	2b 81       	ldd	r18, Y+3	; 0x03
     fb6:	3c 81       	ldd	r19, Y+4	; 0x04
     fb8:	22 30       	cpi	r18, 0x02	; 2
     fba:	31 05       	cpc	r19, r1
     fbc:	2c f4       	brge	.+10     	; 0xfc8 <MDIO_voidSetPortValue+0x38>
     fbe:	8b 81       	ldd	r24, Y+3	; 0x03
     fc0:	9c 81       	ldd	r25, Y+4	; 0x04
     fc2:	00 97       	sbiw	r24, 0x00	; 0
     fc4:	61 f0       	breq	.+24     	; 0xfde <MDIO_voidSetPortValue+0x4e>
     fc6:	1e c0       	rjmp	.+60     	; 0x1004 <MDIO_voidSetPortValue+0x74>
     fc8:	2b 81       	ldd	r18, Y+3	; 0x03
     fca:	3c 81       	ldd	r19, Y+4	; 0x04
     fcc:	22 30       	cpi	r18, 0x02	; 2
     fce:	31 05       	cpc	r19, r1
     fd0:	81 f0       	breq	.+32     	; 0xff2 <MDIO_voidSetPortValue+0x62>
     fd2:	8b 81       	ldd	r24, Y+3	; 0x03
     fd4:	9c 81       	ldd	r25, Y+4	; 0x04
     fd6:	83 30       	cpi	r24, 0x03	; 3
     fd8:	91 05       	cpc	r25, r1
     fda:	81 f0       	breq	.+32     	; 0xffc <MDIO_voidSetPortValue+0x6c>
     fdc:	13 c0       	rjmp	.+38     	; 0x1004 <MDIO_voidSetPortValue+0x74>
	{
	case DIO_u8_PORTA:
		DIO_u8_PORTA_REG = Copy_u8PortValue;
     fde:	eb e3       	ldi	r30, 0x3B	; 59
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	8a 81       	ldd	r24, Y+2	; 0x02
     fe4:	80 83       	st	Z, r24
     fe6:	0e c0       	rjmp	.+28     	; 0x1004 <MDIO_voidSetPortValue+0x74>
		break;
	case DIO_u8_PORTB:
		DIO_u8_PORTB_REG = Copy_u8PortValue;
     fe8:	e8 e3       	ldi	r30, 0x38	; 56
     fea:	f0 e0       	ldi	r31, 0x00	; 0
     fec:	8a 81       	ldd	r24, Y+2	; 0x02
     fee:	80 83       	st	Z, r24
     ff0:	09 c0       	rjmp	.+18     	; 0x1004 <MDIO_voidSetPortValue+0x74>
		break;
	case DIO_u8_PORTC:
		DIO_u8_PORTC_REG = Copy_u8PortValue;
     ff2:	e5 e3       	ldi	r30, 0x35	; 53
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	8a 81       	ldd	r24, Y+2	; 0x02
     ff8:	80 83       	st	Z, r24
     ffa:	04 c0       	rjmp	.+8      	; 0x1004 <MDIO_voidSetPortValue+0x74>
		break;
	case DIO_u8_PORTD:
		DIO_u8_PORTD_REG = Copy_u8PortValue;
     ffc:	e2 e3       	ldi	r30, 0x32	; 50
     ffe:	f0 e0       	ldi	r31, 0x00	; 0
    1000:	8a 81       	ldd	r24, Y+2	; 0x02
    1002:	80 83       	st	Z, r24
		break;
	default:

		break;
	}
}
    1004:	0f 90       	pop	r0
    1006:	0f 90       	pop	r0
    1008:	0f 90       	pop	r0
    100a:	0f 90       	pop	r0
    100c:	cf 91       	pop	r28
    100e:	df 91       	pop	r29
    1010:	08 95       	ret

00001012 <MDIO_u8GetPinValue>:


u8 MDIO_u8GetPinValue         (u8 Copy_u8PortId, u8 Copy_u8PinId)
{
    1012:	df 93       	push	r29
    1014:	cf 93       	push	r28
    1016:	00 d0       	rcall	.+0      	; 0x1018 <MDIO_u8GetPinValue+0x6>
    1018:	00 d0       	rcall	.+0      	; 0x101a <MDIO_u8GetPinValue+0x8>
    101a:	0f 92       	push	r0
    101c:	cd b7       	in	r28, 0x3d	; 61
    101e:	de b7       	in	r29, 0x3e	; 62
    1020:	8a 83       	std	Y+2, r24	; 0x02
    1022:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8VALUE;
	switch(Copy_u8PortId)
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	3d 83       	std	Y+5, r19	; 0x05
    102c:	2c 83       	std	Y+4, r18	; 0x04
    102e:	4c 81       	ldd	r20, Y+4	; 0x04
    1030:	5d 81       	ldd	r21, Y+5	; 0x05
    1032:	41 30       	cpi	r20, 0x01	; 1
    1034:	51 05       	cpc	r21, r1
    1036:	41 f1       	breq	.+80     	; 0x1088 <MDIO_u8GetPinValue+0x76>
    1038:	8c 81       	ldd	r24, Y+4	; 0x04
    103a:	9d 81       	ldd	r25, Y+5	; 0x05
    103c:	82 30       	cpi	r24, 0x02	; 2
    103e:	91 05       	cpc	r25, r1
    1040:	34 f4       	brge	.+12     	; 0x104e <MDIO_u8GetPinValue+0x3c>
    1042:	2c 81       	ldd	r18, Y+4	; 0x04
    1044:	3d 81       	ldd	r19, Y+5	; 0x05
    1046:	21 15       	cp	r18, r1
    1048:	31 05       	cpc	r19, r1
    104a:	61 f0       	breq	.+24     	; 0x1064 <MDIO_u8GetPinValue+0x52>
    104c:	52 c0       	rjmp	.+164    	; 0x10f2 <MDIO_u8GetPinValue+0xe0>
    104e:	4c 81       	ldd	r20, Y+4	; 0x04
    1050:	5d 81       	ldd	r21, Y+5	; 0x05
    1052:	42 30       	cpi	r20, 0x02	; 2
    1054:	51 05       	cpc	r21, r1
    1056:	51 f1       	breq	.+84     	; 0x10ac <MDIO_u8GetPinValue+0x9a>
    1058:	8c 81       	ldd	r24, Y+4	; 0x04
    105a:	9d 81       	ldd	r25, Y+5	; 0x05
    105c:	83 30       	cpi	r24, 0x03	; 3
    105e:	91 05       	cpc	r25, r1
    1060:	b9 f1       	breq	.+110    	; 0x10d0 <MDIO_u8GetPinValue+0xbe>
    1062:	47 c0       	rjmp	.+142    	; 0x10f2 <MDIO_u8GetPinValue+0xe0>
	{
	case DIO_u8_PORTA:
		Local_u8VALUE = GET_BIT(DIO_u8_PINA_REG,Copy_u8PinId);
    1064:	e9 e3       	ldi	r30, 0x39	; 57
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	80 81       	ld	r24, Z
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	8b 81       	ldd	r24, Y+3	; 0x03
    1070:	88 2f       	mov	r24, r24
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	a9 01       	movw	r20, r18
    1076:	02 c0       	rjmp	.+4      	; 0x107c <MDIO_u8GetPinValue+0x6a>
    1078:	55 95       	asr	r21
    107a:	47 95       	ror	r20
    107c:	8a 95       	dec	r24
    107e:	e2 f7       	brpl	.-8      	; 0x1078 <MDIO_u8GetPinValue+0x66>
    1080:	ca 01       	movw	r24, r20
    1082:	81 70       	andi	r24, 0x01	; 1
    1084:	89 83       	std	Y+1, r24	; 0x01
    1086:	35 c0       	rjmp	.+106    	; 0x10f2 <MDIO_u8GetPinValue+0xe0>
		break;
	case DIO_u8_PORTB:
		Local_u8VALUE = GET_BIT(DIO_u8_PINB_REG,Copy_u8PinId);
    1088:	e6 e3       	ldi	r30, 0x36	; 54
    108a:	f0 e0       	ldi	r31, 0x00	; 0
    108c:	80 81       	ld	r24, Z
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	8b 81       	ldd	r24, Y+3	; 0x03
    1094:	88 2f       	mov	r24, r24
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	a9 01       	movw	r20, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <MDIO_u8GetPinValue+0x8e>
    109c:	55 95       	asr	r21
    109e:	47 95       	ror	r20
    10a0:	8a 95       	dec	r24
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <MDIO_u8GetPinValue+0x8a>
    10a4:	ca 01       	movw	r24, r20
    10a6:	81 70       	andi	r24, 0x01	; 1
    10a8:	89 83       	std	Y+1, r24	; 0x01
    10aa:	23 c0       	rjmp	.+70     	; 0x10f2 <MDIO_u8GetPinValue+0xe0>
		break;
	case DIO_u8_PORTC:
		Local_u8VALUE = GET_BIT(DIO_u8_PINC_REG,Copy_u8PinId);
    10ac:	e3 e3       	ldi	r30, 0x33	; 51
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
    10b0:	80 81       	ld	r24, Z
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	8b 81       	ldd	r24, Y+3	; 0x03
    10b8:	88 2f       	mov	r24, r24
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	a9 01       	movw	r20, r18
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <MDIO_u8GetPinValue+0xb2>
    10c0:	55 95       	asr	r21
    10c2:	47 95       	ror	r20
    10c4:	8a 95       	dec	r24
    10c6:	e2 f7       	brpl	.-8      	; 0x10c0 <MDIO_u8GetPinValue+0xae>
    10c8:	ca 01       	movw	r24, r20
    10ca:	81 70       	andi	r24, 0x01	; 1
    10cc:	89 83       	std	Y+1, r24	; 0x01
    10ce:	11 c0       	rjmp	.+34     	; 0x10f2 <MDIO_u8GetPinValue+0xe0>
		break;
	case DIO_u8_PORTD:
		Local_u8VALUE = GET_BIT(DIO_u8_PIND_REG,Copy_u8PinId);
    10d0:	e0 e3       	ldi	r30, 0x30	; 48
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	28 2f       	mov	r18, r24
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	8b 81       	ldd	r24, Y+3	; 0x03
    10dc:	88 2f       	mov	r24, r24
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	a9 01       	movw	r20, r18
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <MDIO_u8GetPinValue+0xd6>
    10e4:	55 95       	asr	r21
    10e6:	47 95       	ror	r20
    10e8:	8a 95       	dec	r24
    10ea:	e2 f7       	brpl	.-8      	; 0x10e4 <MDIO_u8GetPinValue+0xd2>
    10ec:	ca 01       	movw	r24, r20
    10ee:	81 70       	andi	r24, 0x01	; 1
    10f0:	89 83       	std	Y+1, r24	; 0x01
		break;
	default:

		break;
	}
	return Local_u8VALUE;
    10f2:	89 81       	ldd	r24, Y+1	; 0x01
}
    10f4:	0f 90       	pop	r0
    10f6:	0f 90       	pop	r0
    10f8:	0f 90       	pop	r0
    10fa:	0f 90       	pop	r0
    10fc:	0f 90       	pop	r0
    10fe:	cf 91       	pop	r28
    1100:	df 91       	pop	r29
    1102:	08 95       	ret

00001104 <HLCD_voidInit>:
#include "LCD_CONFIG.h"
#include "LCD_PRIVATE.h"
#include "LCD_INTERFACE.h"

void HLCD_voidInit(void)
{
    1104:	df 93       	push	r29
    1106:	cf 93       	push	r28
    1108:	cd b7       	in	r28, 0x3d	; 61
    110a:	de b7       	in	r29, 0x3e	; 62
    110c:	2e 97       	sbiw	r28, 0x0e	; 14
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	f8 94       	cli
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	cd bf       	out	0x3d, r28	; 61
	MDIO_voidSetPinDirection(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_OUTPUT);
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	62 e0       	ldi	r22, 0x02	; 2
    111c:	41 e0       	ldi	r20, 0x01	; 1
    111e:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(LCD_CONTROL_PORT,LCD_RS_PIN,DIO_u8_OUTPUT);
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	63 e0       	ldi	r22, 0x03	; 3
    1126:	41 e0       	ldi	r20, 0x01	; 1
    1128:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	#if (LCD_MODE == _8_BIT_MODE)
	MDIO_voidSetPortDirection(LCD_DATA_PORT,0xFF);
	_delay_ms(100);
	HLCD_voidSendCommand(0x38);			/*select 8-bit Mode*/
	#elif (LCD_MODE == _4_BIT_MODE)
	MDIO_voidSetPinDirection(LCD_DATA_PORT,LCD_DATA_PIN_4,DIO_u8_OUTPUT);
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	60 e0       	ldi	r22, 0x00	; 0
    1130:	41 e0       	ldi	r20, 0x01	; 1
    1132:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(LCD_DATA_PORT,LCD_DATA_PIN_5,DIO_u8_OUTPUT);
    1136:	81 e0       	ldi	r24, 0x01	; 1
    1138:	61 e0       	ldi	r22, 0x01	; 1
    113a:	41 e0       	ldi	r20, 0x01	; 1
    113c:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(LCD_DATA_PORT,LCD_DATA_PIN_6,DIO_u8_OUTPUT);
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	62 e0       	ldi	r22, 0x02	; 2
    1144:	41 e0       	ldi	r20, 0x01	; 1
    1146:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(LCD_DATA_PORT,LCD_DATA_PIN_7,DIO_u8_OUTPUT);
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	64 e0       	ldi	r22, 0x04	; 4
    114e:	41 e0       	ldi	r20, 0x01	; 1
    1150:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
    1154:	80 e0       	ldi	r24, 0x00	; 0
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	a8 ec       	ldi	r26, 0xC8	; 200
    115a:	b2 e4       	ldi	r27, 0x42	; 66
    115c:	8b 87       	std	Y+11, r24	; 0x0b
    115e:	9c 87       	std	Y+12, r25	; 0x0c
    1160:	ad 87       	std	Y+13, r26	; 0x0d
    1162:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1164:	6b 85       	ldd	r22, Y+11	; 0x0b
    1166:	7c 85       	ldd	r23, Y+12	; 0x0c
    1168:	8d 85       	ldd	r24, Y+13	; 0x0d
    116a:	9e 85       	ldd	r25, Y+14	; 0x0e
    116c:	20 e0       	ldi	r18, 0x00	; 0
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	4a ef       	ldi	r20, 0xFA	; 250
    1172:	54 e4       	ldi	r21, 0x44	; 68
    1174:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1178:	dc 01       	movw	r26, r24
    117a:	cb 01       	movw	r24, r22
    117c:	8f 83       	std	Y+7, r24	; 0x07
    117e:	98 87       	std	Y+8, r25	; 0x08
    1180:	a9 87       	std	Y+9, r26	; 0x09
    1182:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1184:	6f 81       	ldd	r22, Y+7	; 0x07
    1186:	78 85       	ldd	r23, Y+8	; 0x08
    1188:	89 85       	ldd	r24, Y+9	; 0x09
    118a:	9a 85       	ldd	r25, Y+10	; 0x0a
    118c:	20 e0       	ldi	r18, 0x00	; 0
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	40 e8       	ldi	r20, 0x80	; 128
    1192:	5f e3       	ldi	r21, 0x3F	; 63
    1194:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1198:	88 23       	and	r24, r24
    119a:	2c f4       	brge	.+10     	; 0x11a6 <HLCD_voidInit+0xa2>
		__ticks = 1;
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	9e 83       	std	Y+6, r25	; 0x06
    11a2:	8d 83       	std	Y+5, r24	; 0x05
    11a4:	3f c0       	rjmp	.+126    	; 0x1224 <HLCD_voidInit+0x120>
	else if (__tmp > 65535)
    11a6:	6f 81       	ldd	r22, Y+7	; 0x07
    11a8:	78 85       	ldd	r23, Y+8	; 0x08
    11aa:	89 85       	ldd	r24, Y+9	; 0x09
    11ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ae:	20 e0       	ldi	r18, 0x00	; 0
    11b0:	3f ef       	ldi	r19, 0xFF	; 255
    11b2:	4f e7       	ldi	r20, 0x7F	; 127
    11b4:	57 e4       	ldi	r21, 0x47	; 71
    11b6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    11ba:	18 16       	cp	r1, r24
    11bc:	4c f5       	brge	.+82     	; 0x1210 <HLCD_voidInit+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11be:	6b 85       	ldd	r22, Y+11	; 0x0b
    11c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    11c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    11c6:	20 e0       	ldi	r18, 0x00	; 0
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	40 e2       	ldi	r20, 0x20	; 32
    11cc:	51 e4       	ldi	r21, 0x41	; 65
    11ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11d2:	dc 01       	movw	r26, r24
    11d4:	cb 01       	movw	r24, r22
    11d6:	bc 01       	movw	r22, r24
    11d8:	cd 01       	movw	r24, r26
    11da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11de:	dc 01       	movw	r26, r24
    11e0:	cb 01       	movw	r24, r22
    11e2:	9e 83       	std	Y+6, r25	; 0x06
    11e4:	8d 83       	std	Y+5, r24	; 0x05
    11e6:	0f c0       	rjmp	.+30     	; 0x1206 <HLCD_voidInit+0x102>
    11e8:	88 ec       	ldi	r24, 0xC8	; 200
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	9c 83       	std	Y+4, r25	; 0x04
    11ee:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11f0:	8b 81       	ldd	r24, Y+3	; 0x03
    11f2:	9c 81       	ldd	r25, Y+4	; 0x04
    11f4:	01 97       	sbiw	r24, 0x01	; 1
    11f6:	f1 f7       	brne	.-4      	; 0x11f4 <HLCD_voidInit+0xf0>
    11f8:	9c 83       	std	Y+4, r25	; 0x04
    11fa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11fc:	8d 81       	ldd	r24, Y+5	; 0x05
    11fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1200:	01 97       	sbiw	r24, 0x01	; 1
    1202:	9e 83       	std	Y+6, r25	; 0x06
    1204:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1206:	8d 81       	ldd	r24, Y+5	; 0x05
    1208:	9e 81       	ldd	r25, Y+6	; 0x06
    120a:	00 97       	sbiw	r24, 0x00	; 0
    120c:	69 f7       	brne	.-38     	; 0x11e8 <HLCD_voidInit+0xe4>
    120e:	14 c0       	rjmp	.+40     	; 0x1238 <HLCD_voidInit+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1210:	6f 81       	ldd	r22, Y+7	; 0x07
    1212:	78 85       	ldd	r23, Y+8	; 0x08
    1214:	89 85       	ldd	r24, Y+9	; 0x09
    1216:	9a 85       	ldd	r25, Y+10	; 0x0a
    1218:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    121c:	dc 01       	movw	r26, r24
    121e:	cb 01       	movw	r24, r22
    1220:	9e 83       	std	Y+6, r25	; 0x06
    1222:	8d 83       	std	Y+5, r24	; 0x05
    1224:	8d 81       	ldd	r24, Y+5	; 0x05
    1226:	9e 81       	ldd	r25, Y+6	; 0x06
    1228:	9a 83       	std	Y+2, r25	; 0x02
    122a:	89 83       	std	Y+1, r24	; 0x01
    122c:	89 81       	ldd	r24, Y+1	; 0x01
    122e:	9a 81       	ldd	r25, Y+2	; 0x02
    1230:	01 97       	sbiw	r24, 0x01	; 1
    1232:	f1 f7       	brne	.-4      	; 0x1230 <HLCD_voidInit+0x12c>
    1234:	9a 83       	std	Y+2, r25	; 0x02
    1236:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(100);
	HLCD_voidSendCommand(0x33);		   /*select 4-bit Mode*/
    1238:	83 e3       	ldi	r24, 0x33	; 51
    123a:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
	HLCD_voidSendCommand(0x32);
    123e:	82 e3       	ldi	r24, 0x32	; 50
    1240:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
	HLCD_voidSendCommand(0x28);
    1244:	88 e2       	ldi	r24, 0x28	; 40
    1246:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
	#endif
	
	HLCD_voidSendCommand(0x0C);		/*TURN LCD DISPLAY		  */	
    124a:	8c e0       	ldi	r24, 0x0C	; 12
    124c:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
	HLCD_voidSendCommand(0x02);		/*RETURN HOME			  */
    1250:	82 e0       	ldi	r24, 0x02	; 2
    1252:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
	HLCD_voidSendCommand(0x01);		/*CLEAR	LCD DISPLAY		  */
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
	HLCD_voidSendCommand(0x06);		/*MOVE FROM LEFT TO RIGHT */
    125c:	86 e0       	ldi	r24, 0x06	; 6
    125e:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
}
    1262:	2e 96       	adiw	r28, 0x0e	; 14
    1264:	0f b6       	in	r0, 0x3f	; 63
    1266:	f8 94       	cli
    1268:	de bf       	out	0x3e, r29	; 62
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	cd bf       	out	0x3d, r28	; 61
    126e:	cf 91       	pop	r28
    1270:	df 91       	pop	r29
    1272:	08 95       	ret

00001274 <HLCD_voidSendCommand>:

void HLCD_voidSendCommand(u8 Copy_u8Cmd)
{
    1274:	df 93       	push	r29
    1276:	cf 93       	push	r28
    1278:	cd b7       	in	r28, 0x3d	; 61
    127a:	de b7       	in	r29, 0x3e	; 62
    127c:	ab 97       	sbiw	r28, 0x2b	; 43
    127e:	0f b6       	in	r0, 0x3f	; 63
    1280:	f8 94       	cli
    1282:	de bf       	out	0x3e, r29	; 62
    1284:	0f be       	out	0x3f, r0	; 63
    1286:	cd bf       	out	0x3d, r28	; 61
    1288:	8b a7       	std	Y+43, r24	; 0x2b
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_LOW);
	_delay_ms(5);
	
	#elif (LCD_MODE == _4_BIT_MODE)
	//to select command register
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_RS_PIN,DIO_u8_LOW);
    128a:	80 e0       	ldi	r24, 0x00	; 0
    128c:	63 e0       	ldi	r22, 0x03	; 3
    128e:	40 e0       	ldi	r20, 0x00	; 0
    1290:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_4, GET_BIT(Copy_u8Cmd,4));
    1294:	8b a5       	ldd	r24, Y+43	; 0x2b
    1296:	82 95       	swap	r24
    1298:	8f 70       	andi	r24, 0x0F	; 15
    129a:	98 2f       	mov	r25, r24
    129c:	91 70       	andi	r25, 0x01	; 1
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	60 e0       	ldi	r22, 0x00	; 0
    12a2:	49 2f       	mov	r20, r25
    12a4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_5, GET_BIT(Copy_u8Cmd,5));
    12a8:	8b a5       	ldd	r24, Y+43	; 0x2b
    12aa:	82 95       	swap	r24
    12ac:	86 95       	lsr	r24
    12ae:	87 70       	andi	r24, 0x07	; 7
    12b0:	98 2f       	mov	r25, r24
    12b2:	91 70       	andi	r25, 0x01	; 1
    12b4:	81 e0       	ldi	r24, 0x01	; 1
    12b6:	61 e0       	ldi	r22, 0x01	; 1
    12b8:	49 2f       	mov	r20, r25
    12ba:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_6, GET_BIT(Copy_u8Cmd,6));
    12be:	8b a5       	ldd	r24, Y+43	; 0x2b
    12c0:	82 95       	swap	r24
    12c2:	86 95       	lsr	r24
    12c4:	86 95       	lsr	r24
    12c6:	83 70       	andi	r24, 0x03	; 3
    12c8:	98 2f       	mov	r25, r24
    12ca:	91 70       	andi	r25, 0x01	; 1
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	62 e0       	ldi	r22, 0x02	; 2
    12d0:	49 2f       	mov	r20, r25
    12d2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_7, GET_BIT(Copy_u8Cmd,7));
    12d6:	8b a5       	ldd	r24, Y+43	; 0x2b
    12d8:	98 2f       	mov	r25, r24
    12da:	99 1f       	adc	r25, r25
    12dc:	99 27       	eor	r25, r25
    12de:	99 1f       	adc	r25, r25
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	64 e0       	ldi	r22, 0x04	; 4
    12e4:	49 2f       	mov	r20, r25
    12e6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>

	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_HIGH); //EN
    12ea:	80 e0       	ldi	r24, 0x00	; 0
    12ec:	62 e0       	ldi	r22, 0x02	; 2
    12ee:	41 e0       	ldi	r20, 0x01	; 1
    12f0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    12f4:	80 e0       	ldi	r24, 0x00	; 0
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	a0 e8       	ldi	r26, 0x80	; 128
    12fa:	bf e3       	ldi	r27, 0x3F	; 63
    12fc:	8f a3       	std	Y+39, r24	; 0x27
    12fe:	98 a7       	std	Y+40, r25	; 0x28
    1300:	a9 a7       	std	Y+41, r26	; 0x29
    1302:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1304:	6f a1       	ldd	r22, Y+39	; 0x27
    1306:	78 a5       	ldd	r23, Y+40	; 0x28
    1308:	89 a5       	ldd	r24, Y+41	; 0x29
    130a:	9a a5       	ldd	r25, Y+42	; 0x2a
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	4a ef       	ldi	r20, 0xFA	; 250
    1312:	54 e4       	ldi	r21, 0x44	; 68
    1314:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1318:	dc 01       	movw	r26, r24
    131a:	cb 01       	movw	r24, r22
    131c:	8b a3       	std	Y+35, r24	; 0x23
    131e:	9c a3       	std	Y+36, r25	; 0x24
    1320:	ad a3       	std	Y+37, r26	; 0x25
    1322:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1324:	6b a1       	ldd	r22, Y+35	; 0x23
    1326:	7c a1       	ldd	r23, Y+36	; 0x24
    1328:	8d a1       	ldd	r24, Y+37	; 0x25
    132a:	9e a1       	ldd	r25, Y+38	; 0x26
    132c:	20 e0       	ldi	r18, 0x00	; 0
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	40 e8       	ldi	r20, 0x80	; 128
    1332:	5f e3       	ldi	r21, 0x3F	; 63
    1334:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1338:	88 23       	and	r24, r24
    133a:	2c f4       	brge	.+10     	; 0x1346 <HLCD_voidSendCommand+0xd2>
		__ticks = 1;
    133c:	81 e0       	ldi	r24, 0x01	; 1
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	9a a3       	std	Y+34, r25	; 0x22
    1342:	89 a3       	std	Y+33, r24	; 0x21
    1344:	3f c0       	rjmp	.+126    	; 0x13c4 <HLCD_voidSendCommand+0x150>
	else if (__tmp > 65535)
    1346:	6b a1       	ldd	r22, Y+35	; 0x23
    1348:	7c a1       	ldd	r23, Y+36	; 0x24
    134a:	8d a1       	ldd	r24, Y+37	; 0x25
    134c:	9e a1       	ldd	r25, Y+38	; 0x26
    134e:	20 e0       	ldi	r18, 0x00	; 0
    1350:	3f ef       	ldi	r19, 0xFF	; 255
    1352:	4f e7       	ldi	r20, 0x7F	; 127
    1354:	57 e4       	ldi	r21, 0x47	; 71
    1356:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    135a:	18 16       	cp	r1, r24
    135c:	4c f5       	brge	.+82     	; 0x13b0 <HLCD_voidSendCommand+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    135e:	6f a1       	ldd	r22, Y+39	; 0x27
    1360:	78 a5       	ldd	r23, Y+40	; 0x28
    1362:	89 a5       	ldd	r24, Y+41	; 0x29
    1364:	9a a5       	ldd	r25, Y+42	; 0x2a
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	40 e2       	ldi	r20, 0x20	; 32
    136c:	51 e4       	ldi	r21, 0x41	; 65
    136e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1372:	dc 01       	movw	r26, r24
    1374:	cb 01       	movw	r24, r22
    1376:	bc 01       	movw	r22, r24
    1378:	cd 01       	movw	r24, r26
    137a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    137e:	dc 01       	movw	r26, r24
    1380:	cb 01       	movw	r24, r22
    1382:	9a a3       	std	Y+34, r25	; 0x22
    1384:	89 a3       	std	Y+33, r24	; 0x21
    1386:	0f c0       	rjmp	.+30     	; 0x13a6 <HLCD_voidSendCommand+0x132>
    1388:	88 ec       	ldi	r24, 0xC8	; 200
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	98 a3       	std	Y+32, r25	; 0x20
    138e:	8f 8f       	std	Y+31, r24	; 0x1f
    1390:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1392:	98 a1       	ldd	r25, Y+32	; 0x20
    1394:	01 97       	sbiw	r24, 0x01	; 1
    1396:	f1 f7       	brne	.-4      	; 0x1394 <HLCD_voidSendCommand+0x120>
    1398:	98 a3       	std	Y+32, r25	; 0x20
    139a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    139c:	89 a1       	ldd	r24, Y+33	; 0x21
    139e:	9a a1       	ldd	r25, Y+34	; 0x22
    13a0:	01 97       	sbiw	r24, 0x01	; 1
    13a2:	9a a3       	std	Y+34, r25	; 0x22
    13a4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a6:	89 a1       	ldd	r24, Y+33	; 0x21
    13a8:	9a a1       	ldd	r25, Y+34	; 0x22
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	69 f7       	brne	.-38     	; 0x1388 <HLCD_voidSendCommand+0x114>
    13ae:	14 c0       	rjmp	.+40     	; 0x13d8 <HLCD_voidSendCommand+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13b0:	6b a1       	ldd	r22, Y+35	; 0x23
    13b2:	7c a1       	ldd	r23, Y+36	; 0x24
    13b4:	8d a1       	ldd	r24, Y+37	; 0x25
    13b6:	9e a1       	ldd	r25, Y+38	; 0x26
    13b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13bc:	dc 01       	movw	r26, r24
    13be:	cb 01       	movw	r24, r22
    13c0:	9a a3       	std	Y+34, r25	; 0x22
    13c2:	89 a3       	std	Y+33, r24	; 0x21
    13c4:	89 a1       	ldd	r24, Y+33	; 0x21
    13c6:	9a a1       	ldd	r25, Y+34	; 0x22
    13c8:	9e 8f       	std	Y+30, r25	; 0x1e
    13ca:	8d 8f       	std	Y+29, r24	; 0x1d
    13cc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    13ce:	9e 8d       	ldd	r25, Y+30	; 0x1e
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	f1 f7       	brne	.-4      	; 0x13d0 <HLCD_voidSendCommand+0x15c>
    13d4:	9e 8f       	std	Y+30, r25	; 0x1e
    13d6:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_LOW);
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	62 e0       	ldi	r22, 0x02	; 2
    13dc:	40 e0       	ldi	r20, 0x00	; 0
    13de:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_4, GET_BIT(Copy_u8Cmd,0));
    13e2:	8b a5       	ldd	r24, Y+43	; 0x2b
    13e4:	98 2f       	mov	r25, r24
    13e6:	91 70       	andi	r25, 0x01	; 1
    13e8:	81 e0       	ldi	r24, 0x01	; 1
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	49 2f       	mov	r20, r25
    13ee:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_5, GET_BIT(Copy_u8Cmd,1));
    13f2:	8b a5       	ldd	r24, Y+43	; 0x2b
    13f4:	86 95       	lsr	r24
    13f6:	98 2f       	mov	r25, r24
    13f8:	91 70       	andi	r25, 0x01	; 1
    13fa:	81 e0       	ldi	r24, 0x01	; 1
    13fc:	61 e0       	ldi	r22, 0x01	; 1
    13fe:	49 2f       	mov	r20, r25
    1400:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_6, GET_BIT(Copy_u8Cmd,2));
    1404:	8b a5       	ldd	r24, Y+43	; 0x2b
    1406:	86 95       	lsr	r24
    1408:	86 95       	lsr	r24
    140a:	98 2f       	mov	r25, r24
    140c:	91 70       	andi	r25, 0x01	; 1
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	62 e0       	ldi	r22, 0x02	; 2
    1412:	49 2f       	mov	r20, r25
    1414:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_7, GET_BIT(Copy_u8Cmd,3));
    1418:	8b a5       	ldd	r24, Y+43	; 0x2b
    141a:	86 95       	lsr	r24
    141c:	86 95       	lsr	r24
    141e:	86 95       	lsr	r24
    1420:	98 2f       	mov	r25, r24
    1422:	91 70       	andi	r25, 0x01	; 1
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	64 e0       	ldi	r22, 0x04	; 4
    1428:	49 2f       	mov	r20, r25
    142a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_HIGH); //EN
    142e:	80 e0       	ldi	r24, 0x00	; 0
    1430:	62 e0       	ldi	r22, 0x02	; 2
    1432:	41 e0       	ldi	r20, 0x01	; 1
    1434:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1438:	80 e0       	ldi	r24, 0x00	; 0
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	a0 e8       	ldi	r26, 0x80	; 128
    143e:	bf e3       	ldi	r27, 0x3F	; 63
    1440:	89 8f       	std	Y+25, r24	; 0x19
    1442:	9a 8f       	std	Y+26, r25	; 0x1a
    1444:	ab 8f       	std	Y+27, r26	; 0x1b
    1446:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1448:	69 8d       	ldd	r22, Y+25	; 0x19
    144a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    144c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    144e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	4a ef       	ldi	r20, 0xFA	; 250
    1456:	54 e4       	ldi	r21, 0x44	; 68
    1458:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	8d 8b       	std	Y+21, r24	; 0x15
    1462:	9e 8b       	std	Y+22, r25	; 0x16
    1464:	af 8b       	std	Y+23, r26	; 0x17
    1466:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1468:	6d 89       	ldd	r22, Y+21	; 0x15
    146a:	7e 89       	ldd	r23, Y+22	; 0x16
    146c:	8f 89       	ldd	r24, Y+23	; 0x17
    146e:	98 8d       	ldd	r25, Y+24	; 0x18
    1470:	20 e0       	ldi	r18, 0x00	; 0
    1472:	30 e0       	ldi	r19, 0x00	; 0
    1474:	40 e8       	ldi	r20, 0x80	; 128
    1476:	5f e3       	ldi	r21, 0x3F	; 63
    1478:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    147c:	88 23       	and	r24, r24
    147e:	2c f4       	brge	.+10     	; 0x148a <HLCD_voidSendCommand+0x216>
		__ticks = 1;
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	9c 8b       	std	Y+20, r25	; 0x14
    1486:	8b 8b       	std	Y+19, r24	; 0x13
    1488:	3f c0       	rjmp	.+126    	; 0x1508 <HLCD_voidSendCommand+0x294>
	else if (__tmp > 65535)
    148a:	6d 89       	ldd	r22, Y+21	; 0x15
    148c:	7e 89       	ldd	r23, Y+22	; 0x16
    148e:	8f 89       	ldd	r24, Y+23	; 0x17
    1490:	98 8d       	ldd	r25, Y+24	; 0x18
    1492:	20 e0       	ldi	r18, 0x00	; 0
    1494:	3f ef       	ldi	r19, 0xFF	; 255
    1496:	4f e7       	ldi	r20, 0x7F	; 127
    1498:	57 e4       	ldi	r21, 0x47	; 71
    149a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    149e:	18 16       	cp	r1, r24
    14a0:	4c f5       	brge	.+82     	; 0x14f4 <HLCD_voidSendCommand+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14a2:	69 8d       	ldd	r22, Y+25	; 0x19
    14a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	40 e2       	ldi	r20, 0x20	; 32
    14b0:	51 e4       	ldi	r21, 0x41	; 65
    14b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14b6:	dc 01       	movw	r26, r24
    14b8:	cb 01       	movw	r24, r22
    14ba:	bc 01       	movw	r22, r24
    14bc:	cd 01       	movw	r24, r26
    14be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	9c 8b       	std	Y+20, r25	; 0x14
    14c8:	8b 8b       	std	Y+19, r24	; 0x13
    14ca:	0f c0       	rjmp	.+30     	; 0x14ea <HLCD_voidSendCommand+0x276>
    14cc:	88 ec       	ldi	r24, 0xC8	; 200
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	9a 8b       	std	Y+18, r25	; 0x12
    14d2:	89 8b       	std	Y+17, r24	; 0x11
    14d4:	89 89       	ldd	r24, Y+17	; 0x11
    14d6:	9a 89       	ldd	r25, Y+18	; 0x12
    14d8:	01 97       	sbiw	r24, 0x01	; 1
    14da:	f1 f7       	brne	.-4      	; 0x14d8 <HLCD_voidSendCommand+0x264>
    14dc:	9a 8b       	std	Y+18, r25	; 0x12
    14de:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14e0:	8b 89       	ldd	r24, Y+19	; 0x13
    14e2:	9c 89       	ldd	r25, Y+20	; 0x14
    14e4:	01 97       	sbiw	r24, 0x01	; 1
    14e6:	9c 8b       	std	Y+20, r25	; 0x14
    14e8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14ea:	8b 89       	ldd	r24, Y+19	; 0x13
    14ec:	9c 89       	ldd	r25, Y+20	; 0x14
    14ee:	00 97       	sbiw	r24, 0x00	; 0
    14f0:	69 f7       	brne	.-38     	; 0x14cc <HLCD_voidSendCommand+0x258>
    14f2:	14 c0       	rjmp	.+40     	; 0x151c <HLCD_voidSendCommand+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14f4:	6d 89       	ldd	r22, Y+21	; 0x15
    14f6:	7e 89       	ldd	r23, Y+22	; 0x16
    14f8:	8f 89       	ldd	r24, Y+23	; 0x17
    14fa:	98 8d       	ldd	r25, Y+24	; 0x18
    14fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1500:	dc 01       	movw	r26, r24
    1502:	cb 01       	movw	r24, r22
    1504:	9c 8b       	std	Y+20, r25	; 0x14
    1506:	8b 8b       	std	Y+19, r24	; 0x13
    1508:	8b 89       	ldd	r24, Y+19	; 0x13
    150a:	9c 89       	ldd	r25, Y+20	; 0x14
    150c:	98 8b       	std	Y+16, r25	; 0x10
    150e:	8f 87       	std	Y+15, r24	; 0x0f
    1510:	8f 85       	ldd	r24, Y+15	; 0x0f
    1512:	98 89       	ldd	r25, Y+16	; 0x10
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	f1 f7       	brne	.-4      	; 0x1514 <HLCD_voidSendCommand+0x2a0>
    1518:	98 8b       	std	Y+16, r25	; 0x10
    151a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_LOW);
    151c:	80 e0       	ldi	r24, 0x00	; 0
    151e:	62 e0       	ldi	r22, 0x02	; 2
    1520:	40 e0       	ldi	r20, 0x00	; 0
    1522:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	a0 ea       	ldi	r26, 0xA0	; 160
    152c:	b0 e4       	ldi	r27, 0x40	; 64
    152e:	8b 87       	std	Y+11, r24	; 0x0b
    1530:	9c 87       	std	Y+12, r25	; 0x0c
    1532:	ad 87       	std	Y+13, r26	; 0x0d
    1534:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1536:	6b 85       	ldd	r22, Y+11	; 0x0b
    1538:	7c 85       	ldd	r23, Y+12	; 0x0c
    153a:	8d 85       	ldd	r24, Y+13	; 0x0d
    153c:	9e 85       	ldd	r25, Y+14	; 0x0e
    153e:	20 e0       	ldi	r18, 0x00	; 0
    1540:	30 e0       	ldi	r19, 0x00	; 0
    1542:	4a ef       	ldi	r20, 0xFA	; 250
    1544:	54 e4       	ldi	r21, 0x44	; 68
    1546:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    154a:	dc 01       	movw	r26, r24
    154c:	cb 01       	movw	r24, r22
    154e:	8f 83       	std	Y+7, r24	; 0x07
    1550:	98 87       	std	Y+8, r25	; 0x08
    1552:	a9 87       	std	Y+9, r26	; 0x09
    1554:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1556:	6f 81       	ldd	r22, Y+7	; 0x07
    1558:	78 85       	ldd	r23, Y+8	; 0x08
    155a:	89 85       	ldd	r24, Y+9	; 0x09
    155c:	9a 85       	ldd	r25, Y+10	; 0x0a
    155e:	20 e0       	ldi	r18, 0x00	; 0
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	40 e8       	ldi	r20, 0x80	; 128
    1564:	5f e3       	ldi	r21, 0x3F	; 63
    1566:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    156a:	88 23       	and	r24, r24
    156c:	2c f4       	brge	.+10     	; 0x1578 <HLCD_voidSendCommand+0x304>
		__ticks = 1;
    156e:	81 e0       	ldi	r24, 0x01	; 1
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	9e 83       	std	Y+6, r25	; 0x06
    1574:	8d 83       	std	Y+5, r24	; 0x05
    1576:	3f c0       	rjmp	.+126    	; 0x15f6 <HLCD_voidSendCommand+0x382>
	else if (__tmp > 65535)
    1578:	6f 81       	ldd	r22, Y+7	; 0x07
    157a:	78 85       	ldd	r23, Y+8	; 0x08
    157c:	89 85       	ldd	r24, Y+9	; 0x09
    157e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1580:	20 e0       	ldi	r18, 0x00	; 0
    1582:	3f ef       	ldi	r19, 0xFF	; 255
    1584:	4f e7       	ldi	r20, 0x7F	; 127
    1586:	57 e4       	ldi	r21, 0x47	; 71
    1588:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    158c:	18 16       	cp	r1, r24
    158e:	4c f5       	brge	.+82     	; 0x15e2 <HLCD_voidSendCommand+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1590:	6b 85       	ldd	r22, Y+11	; 0x0b
    1592:	7c 85       	ldd	r23, Y+12	; 0x0c
    1594:	8d 85       	ldd	r24, Y+13	; 0x0d
    1596:	9e 85       	ldd	r25, Y+14	; 0x0e
    1598:	20 e0       	ldi	r18, 0x00	; 0
    159a:	30 e0       	ldi	r19, 0x00	; 0
    159c:	40 e2       	ldi	r20, 0x20	; 32
    159e:	51 e4       	ldi	r21, 0x41	; 65
    15a0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15a4:	dc 01       	movw	r26, r24
    15a6:	cb 01       	movw	r24, r22
    15a8:	bc 01       	movw	r22, r24
    15aa:	cd 01       	movw	r24, r26
    15ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15b0:	dc 01       	movw	r26, r24
    15b2:	cb 01       	movw	r24, r22
    15b4:	9e 83       	std	Y+6, r25	; 0x06
    15b6:	8d 83       	std	Y+5, r24	; 0x05
    15b8:	0f c0       	rjmp	.+30     	; 0x15d8 <HLCD_voidSendCommand+0x364>
    15ba:	88 ec       	ldi	r24, 0xC8	; 200
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	9c 83       	std	Y+4, r25	; 0x04
    15c0:	8b 83       	std	Y+3, r24	; 0x03
    15c2:	8b 81       	ldd	r24, Y+3	; 0x03
    15c4:	9c 81       	ldd	r25, Y+4	; 0x04
    15c6:	01 97       	sbiw	r24, 0x01	; 1
    15c8:	f1 f7       	brne	.-4      	; 0x15c6 <HLCD_voidSendCommand+0x352>
    15ca:	9c 83       	std	Y+4, r25	; 0x04
    15cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ce:	8d 81       	ldd	r24, Y+5	; 0x05
    15d0:	9e 81       	ldd	r25, Y+6	; 0x06
    15d2:	01 97       	sbiw	r24, 0x01	; 1
    15d4:	9e 83       	std	Y+6, r25	; 0x06
    15d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d8:	8d 81       	ldd	r24, Y+5	; 0x05
    15da:	9e 81       	ldd	r25, Y+6	; 0x06
    15dc:	00 97       	sbiw	r24, 0x00	; 0
    15de:	69 f7       	brne	.-38     	; 0x15ba <HLCD_voidSendCommand+0x346>
    15e0:	14 c0       	rjmp	.+40     	; 0x160a <HLCD_voidSendCommand+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15e2:	6f 81       	ldd	r22, Y+7	; 0x07
    15e4:	78 85       	ldd	r23, Y+8	; 0x08
    15e6:	89 85       	ldd	r24, Y+9	; 0x09
    15e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    15ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15ee:	dc 01       	movw	r26, r24
    15f0:	cb 01       	movw	r24, r22
    15f2:	9e 83       	std	Y+6, r25	; 0x06
    15f4:	8d 83       	std	Y+5, r24	; 0x05
    15f6:	8d 81       	ldd	r24, Y+5	; 0x05
    15f8:	9e 81       	ldd	r25, Y+6	; 0x06
    15fa:	9a 83       	std	Y+2, r25	; 0x02
    15fc:	89 83       	std	Y+1, r24	; 0x01
    15fe:	89 81       	ldd	r24, Y+1	; 0x01
    1600:	9a 81       	ldd	r25, Y+2	; 0x02
    1602:	01 97       	sbiw	r24, 0x01	; 1
    1604:	f1 f7       	brne	.-4      	; 0x1602 <HLCD_voidSendCommand+0x38e>
    1606:	9a 83       	std	Y+2, r25	; 0x02
    1608:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
	#endif
}
    160a:	ab 96       	adiw	r28, 0x2b	; 43
    160c:	0f b6       	in	r0, 0x3f	; 63
    160e:	f8 94       	cli
    1610:	de bf       	out	0x3e, r29	; 62
    1612:	0f be       	out	0x3f, r0	; 63
    1614:	cd bf       	out	0x3d, r28	; 61
    1616:	cf 91       	pop	r28
    1618:	df 91       	pop	r29
    161a:	08 95       	ret

0000161c <HLCD_voidSendData>:

void HLCD_voidSendData(u8 Copy_u8Data)
{
    161c:	df 93       	push	r29
    161e:	cf 93       	push	r28
    1620:	cd b7       	in	r28, 0x3d	; 61
    1622:	de b7       	in	r29, 0x3e	; 62
    1624:	ab 97       	sbiw	r28, 0x2b	; 43
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	f8 94       	cli
    162a:	de bf       	out	0x3e, r29	; 62
    162c:	0f be       	out	0x3f, r0	; 63
    162e:	cd bf       	out	0x3d, r28	; 61
    1630:	8b a7       	std	Y+43, r24	; 0x2b
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_LOW);
	_delay_ms(5);
	
	#elif (LCD_MODE == _4_BIT_MODE)
	//to select command register
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_RS_PIN,DIO_u8_HIGH);
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	63 e0       	ldi	r22, 0x03	; 3
    1636:	41 e0       	ldi	r20, 0x01	; 1
    1638:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_4, GET_BIT(Copy_u8Data,4));
    163c:	8b a5       	ldd	r24, Y+43	; 0x2b
    163e:	82 95       	swap	r24
    1640:	8f 70       	andi	r24, 0x0F	; 15
    1642:	98 2f       	mov	r25, r24
    1644:	91 70       	andi	r25, 0x01	; 1
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	49 2f       	mov	r20, r25
    164c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_5, GET_BIT(Copy_u8Data,5));
    1650:	8b a5       	ldd	r24, Y+43	; 0x2b
    1652:	82 95       	swap	r24
    1654:	86 95       	lsr	r24
    1656:	87 70       	andi	r24, 0x07	; 7
    1658:	98 2f       	mov	r25, r24
    165a:	91 70       	andi	r25, 0x01	; 1
    165c:	81 e0       	ldi	r24, 0x01	; 1
    165e:	61 e0       	ldi	r22, 0x01	; 1
    1660:	49 2f       	mov	r20, r25
    1662:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_6, GET_BIT(Copy_u8Data,6));
    1666:	8b a5       	ldd	r24, Y+43	; 0x2b
    1668:	82 95       	swap	r24
    166a:	86 95       	lsr	r24
    166c:	86 95       	lsr	r24
    166e:	83 70       	andi	r24, 0x03	; 3
    1670:	98 2f       	mov	r25, r24
    1672:	91 70       	andi	r25, 0x01	; 1
    1674:	81 e0       	ldi	r24, 0x01	; 1
    1676:	62 e0       	ldi	r22, 0x02	; 2
    1678:	49 2f       	mov	r20, r25
    167a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_7, GET_BIT(Copy_u8Data,7));
    167e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1680:	98 2f       	mov	r25, r24
    1682:	99 1f       	adc	r25, r25
    1684:	99 27       	eor	r25, r25
    1686:	99 1f       	adc	r25, r25
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	64 e0       	ldi	r22, 0x04	; 4
    168c:	49 2f       	mov	r20, r25
    168e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>

	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_HIGH); //EN
    1692:	80 e0       	ldi	r24, 0x00	; 0
    1694:	62 e0       	ldi	r22, 0x02	; 2
    1696:	41 e0       	ldi	r20, 0x01	; 1
    1698:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	a0 e8       	ldi	r26, 0x80	; 128
    16a2:	bf e3       	ldi	r27, 0x3F	; 63
    16a4:	8f a3       	std	Y+39, r24	; 0x27
    16a6:	98 a7       	std	Y+40, r25	; 0x28
    16a8:	a9 a7       	std	Y+41, r26	; 0x29
    16aa:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16ac:	6f a1       	ldd	r22, Y+39	; 0x27
    16ae:	78 a5       	ldd	r23, Y+40	; 0x28
    16b0:	89 a5       	ldd	r24, Y+41	; 0x29
    16b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	4a ef       	ldi	r20, 0xFA	; 250
    16ba:	54 e4       	ldi	r21, 0x44	; 68
    16bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	8b a3       	std	Y+35, r24	; 0x23
    16c6:	9c a3       	std	Y+36, r25	; 0x24
    16c8:	ad a3       	std	Y+37, r26	; 0x25
    16ca:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    16cc:	6b a1       	ldd	r22, Y+35	; 0x23
    16ce:	7c a1       	ldd	r23, Y+36	; 0x24
    16d0:	8d a1       	ldd	r24, Y+37	; 0x25
    16d2:	9e a1       	ldd	r25, Y+38	; 0x26
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	40 e8       	ldi	r20, 0x80	; 128
    16da:	5f e3       	ldi	r21, 0x3F	; 63
    16dc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    16e0:	88 23       	and	r24, r24
    16e2:	2c f4       	brge	.+10     	; 0x16ee <HLCD_voidSendData+0xd2>
		__ticks = 1;
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	9a a3       	std	Y+34, r25	; 0x22
    16ea:	89 a3       	std	Y+33, r24	; 0x21
    16ec:	3f c0       	rjmp	.+126    	; 0x176c <HLCD_voidSendData+0x150>
	else if (__tmp > 65535)
    16ee:	6b a1       	ldd	r22, Y+35	; 0x23
    16f0:	7c a1       	ldd	r23, Y+36	; 0x24
    16f2:	8d a1       	ldd	r24, Y+37	; 0x25
    16f4:	9e a1       	ldd	r25, Y+38	; 0x26
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	3f ef       	ldi	r19, 0xFF	; 255
    16fa:	4f e7       	ldi	r20, 0x7F	; 127
    16fc:	57 e4       	ldi	r21, 0x47	; 71
    16fe:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1702:	18 16       	cp	r1, r24
    1704:	4c f5       	brge	.+82     	; 0x1758 <HLCD_voidSendData+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1706:	6f a1       	ldd	r22, Y+39	; 0x27
    1708:	78 a5       	ldd	r23, Y+40	; 0x28
    170a:	89 a5       	ldd	r24, Y+41	; 0x29
    170c:	9a a5       	ldd	r25, Y+42	; 0x2a
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	40 e2       	ldi	r20, 0x20	; 32
    1714:	51 e4       	ldi	r21, 0x41	; 65
    1716:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    171a:	dc 01       	movw	r26, r24
    171c:	cb 01       	movw	r24, r22
    171e:	bc 01       	movw	r22, r24
    1720:	cd 01       	movw	r24, r26
    1722:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1726:	dc 01       	movw	r26, r24
    1728:	cb 01       	movw	r24, r22
    172a:	9a a3       	std	Y+34, r25	; 0x22
    172c:	89 a3       	std	Y+33, r24	; 0x21
    172e:	0f c0       	rjmp	.+30     	; 0x174e <HLCD_voidSendData+0x132>
    1730:	88 ec       	ldi	r24, 0xC8	; 200
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	98 a3       	std	Y+32, r25	; 0x20
    1736:	8f 8f       	std	Y+31, r24	; 0x1f
    1738:	8f 8d       	ldd	r24, Y+31	; 0x1f
    173a:	98 a1       	ldd	r25, Y+32	; 0x20
    173c:	01 97       	sbiw	r24, 0x01	; 1
    173e:	f1 f7       	brne	.-4      	; 0x173c <HLCD_voidSendData+0x120>
    1740:	98 a3       	std	Y+32, r25	; 0x20
    1742:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1744:	89 a1       	ldd	r24, Y+33	; 0x21
    1746:	9a a1       	ldd	r25, Y+34	; 0x22
    1748:	01 97       	sbiw	r24, 0x01	; 1
    174a:	9a a3       	std	Y+34, r25	; 0x22
    174c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    174e:	89 a1       	ldd	r24, Y+33	; 0x21
    1750:	9a a1       	ldd	r25, Y+34	; 0x22
    1752:	00 97       	sbiw	r24, 0x00	; 0
    1754:	69 f7       	brne	.-38     	; 0x1730 <HLCD_voidSendData+0x114>
    1756:	14 c0       	rjmp	.+40     	; 0x1780 <HLCD_voidSendData+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1758:	6b a1       	ldd	r22, Y+35	; 0x23
    175a:	7c a1       	ldd	r23, Y+36	; 0x24
    175c:	8d a1       	ldd	r24, Y+37	; 0x25
    175e:	9e a1       	ldd	r25, Y+38	; 0x26
    1760:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	9a a3       	std	Y+34, r25	; 0x22
    176a:	89 a3       	std	Y+33, r24	; 0x21
    176c:	89 a1       	ldd	r24, Y+33	; 0x21
    176e:	9a a1       	ldd	r25, Y+34	; 0x22
    1770:	9e 8f       	std	Y+30, r25	; 0x1e
    1772:	8d 8f       	std	Y+29, r24	; 0x1d
    1774:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1776:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	f1 f7       	brne	.-4      	; 0x1778 <HLCD_voidSendData+0x15c>
    177c:	9e 8f       	std	Y+30, r25	; 0x1e
    177e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_LOW);
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	62 e0       	ldi	r22, 0x02	; 2
    1784:	40 e0       	ldi	r20, 0x00	; 0
    1786:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_4, GET_BIT(Copy_u8Data,0));
    178a:	8b a5       	ldd	r24, Y+43	; 0x2b
    178c:	98 2f       	mov	r25, r24
    178e:	91 70       	andi	r25, 0x01	; 1
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	60 e0       	ldi	r22, 0x00	; 0
    1794:	49 2f       	mov	r20, r25
    1796:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_5, GET_BIT(Copy_u8Data,1));
    179a:	8b a5       	ldd	r24, Y+43	; 0x2b
    179c:	86 95       	lsr	r24
    179e:	98 2f       	mov	r25, r24
    17a0:	91 70       	andi	r25, 0x01	; 1
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	61 e0       	ldi	r22, 0x01	; 1
    17a6:	49 2f       	mov	r20, r25
    17a8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_6, GET_BIT(Copy_u8Data,2));
    17ac:	8b a5       	ldd	r24, Y+43	; 0x2b
    17ae:	86 95       	lsr	r24
    17b0:	86 95       	lsr	r24
    17b2:	98 2f       	mov	r25, r24
    17b4:	91 70       	andi	r25, 0x01	; 1
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	62 e0       	ldi	r22, 0x02	; 2
    17ba:	49 2f       	mov	r20, r25
    17bc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_DATA_PORT,LCD_DATA_PIN_7, GET_BIT(Copy_u8Data,3));
    17c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    17c2:	86 95       	lsr	r24
    17c4:	86 95       	lsr	r24
    17c6:	86 95       	lsr	r24
    17c8:	98 2f       	mov	r25, r24
    17ca:	91 70       	andi	r25, 0x01	; 1
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	64 e0       	ldi	r22, 0x04	; 4
    17d0:	49 2f       	mov	r20, r25
    17d2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_HIGH); //EN
    17d6:	80 e0       	ldi	r24, 0x00	; 0
    17d8:	62 e0       	ldi	r22, 0x02	; 2
    17da:	41 e0       	ldi	r20, 0x01	; 1
    17dc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    17e0:	80 e0       	ldi	r24, 0x00	; 0
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	a0 e8       	ldi	r26, 0x80	; 128
    17e6:	bf e3       	ldi	r27, 0x3F	; 63
    17e8:	89 8f       	std	Y+25, r24	; 0x19
    17ea:	9a 8f       	std	Y+26, r25	; 0x1a
    17ec:	ab 8f       	std	Y+27, r26	; 0x1b
    17ee:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17f0:	69 8d       	ldd	r22, Y+25	; 0x19
    17f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	4a ef       	ldi	r20, 0xFA	; 250
    17fe:	54 e4       	ldi	r21, 0x44	; 68
    1800:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1804:	dc 01       	movw	r26, r24
    1806:	cb 01       	movw	r24, r22
    1808:	8d 8b       	std	Y+21, r24	; 0x15
    180a:	9e 8b       	std	Y+22, r25	; 0x16
    180c:	af 8b       	std	Y+23, r26	; 0x17
    180e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1810:	6d 89       	ldd	r22, Y+21	; 0x15
    1812:	7e 89       	ldd	r23, Y+22	; 0x16
    1814:	8f 89       	ldd	r24, Y+23	; 0x17
    1816:	98 8d       	ldd	r25, Y+24	; 0x18
    1818:	20 e0       	ldi	r18, 0x00	; 0
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	40 e8       	ldi	r20, 0x80	; 128
    181e:	5f e3       	ldi	r21, 0x3F	; 63
    1820:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1824:	88 23       	and	r24, r24
    1826:	2c f4       	brge	.+10     	; 0x1832 <HLCD_voidSendData+0x216>
		__ticks = 1;
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	9c 8b       	std	Y+20, r25	; 0x14
    182e:	8b 8b       	std	Y+19, r24	; 0x13
    1830:	3f c0       	rjmp	.+126    	; 0x18b0 <HLCD_voidSendData+0x294>
	else if (__tmp > 65535)
    1832:	6d 89       	ldd	r22, Y+21	; 0x15
    1834:	7e 89       	ldd	r23, Y+22	; 0x16
    1836:	8f 89       	ldd	r24, Y+23	; 0x17
    1838:	98 8d       	ldd	r25, Y+24	; 0x18
    183a:	20 e0       	ldi	r18, 0x00	; 0
    183c:	3f ef       	ldi	r19, 0xFF	; 255
    183e:	4f e7       	ldi	r20, 0x7F	; 127
    1840:	57 e4       	ldi	r21, 0x47	; 71
    1842:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1846:	18 16       	cp	r1, r24
    1848:	4c f5       	brge	.+82     	; 0x189c <HLCD_voidSendData+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    184a:	69 8d       	ldd	r22, Y+25	; 0x19
    184c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    184e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1850:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	40 e2       	ldi	r20, 0x20	; 32
    1858:	51 e4       	ldi	r21, 0x41	; 65
    185a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    185e:	dc 01       	movw	r26, r24
    1860:	cb 01       	movw	r24, r22
    1862:	bc 01       	movw	r22, r24
    1864:	cd 01       	movw	r24, r26
    1866:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    186a:	dc 01       	movw	r26, r24
    186c:	cb 01       	movw	r24, r22
    186e:	9c 8b       	std	Y+20, r25	; 0x14
    1870:	8b 8b       	std	Y+19, r24	; 0x13
    1872:	0f c0       	rjmp	.+30     	; 0x1892 <HLCD_voidSendData+0x276>
    1874:	88 ec       	ldi	r24, 0xC8	; 200
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	9a 8b       	std	Y+18, r25	; 0x12
    187a:	89 8b       	std	Y+17, r24	; 0x11
    187c:	89 89       	ldd	r24, Y+17	; 0x11
    187e:	9a 89       	ldd	r25, Y+18	; 0x12
    1880:	01 97       	sbiw	r24, 0x01	; 1
    1882:	f1 f7       	brne	.-4      	; 0x1880 <HLCD_voidSendData+0x264>
    1884:	9a 8b       	std	Y+18, r25	; 0x12
    1886:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1888:	8b 89       	ldd	r24, Y+19	; 0x13
    188a:	9c 89       	ldd	r25, Y+20	; 0x14
    188c:	01 97       	sbiw	r24, 0x01	; 1
    188e:	9c 8b       	std	Y+20, r25	; 0x14
    1890:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1892:	8b 89       	ldd	r24, Y+19	; 0x13
    1894:	9c 89       	ldd	r25, Y+20	; 0x14
    1896:	00 97       	sbiw	r24, 0x00	; 0
    1898:	69 f7       	brne	.-38     	; 0x1874 <HLCD_voidSendData+0x258>
    189a:	14 c0       	rjmp	.+40     	; 0x18c4 <HLCD_voidSendData+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    189c:	6d 89       	ldd	r22, Y+21	; 0x15
    189e:	7e 89       	ldd	r23, Y+22	; 0x16
    18a0:	8f 89       	ldd	r24, Y+23	; 0x17
    18a2:	98 8d       	ldd	r25, Y+24	; 0x18
    18a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18a8:	dc 01       	movw	r26, r24
    18aa:	cb 01       	movw	r24, r22
    18ac:	9c 8b       	std	Y+20, r25	; 0x14
    18ae:	8b 8b       	std	Y+19, r24	; 0x13
    18b0:	8b 89       	ldd	r24, Y+19	; 0x13
    18b2:	9c 89       	ldd	r25, Y+20	; 0x14
    18b4:	98 8b       	std	Y+16, r25	; 0x10
    18b6:	8f 87       	std	Y+15, r24	; 0x0f
    18b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    18ba:	98 89       	ldd	r25, Y+16	; 0x10
    18bc:	01 97       	sbiw	r24, 0x01	; 1
    18be:	f1 f7       	brne	.-4      	; 0x18bc <HLCD_voidSendData+0x2a0>
    18c0:	98 8b       	std	Y+16, r25	; 0x10
    18c2:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	MDIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN_PIN,DIO_u8_LOW);
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	62 e0       	ldi	r22, 0x02	; 2
    18c8:	40 e0       	ldi	r20, 0x00	; 0
    18ca:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    18ce:	80 e0       	ldi	r24, 0x00	; 0
    18d0:	90 e0       	ldi	r25, 0x00	; 0
    18d2:	a0 ea       	ldi	r26, 0xA0	; 160
    18d4:	b0 e4       	ldi	r27, 0x40	; 64
    18d6:	8b 87       	std	Y+11, r24	; 0x0b
    18d8:	9c 87       	std	Y+12, r25	; 0x0c
    18da:	ad 87       	std	Y+13, r26	; 0x0d
    18dc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18de:	6b 85       	ldd	r22, Y+11	; 0x0b
    18e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    18e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    18e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    18e6:	20 e0       	ldi	r18, 0x00	; 0
    18e8:	30 e0       	ldi	r19, 0x00	; 0
    18ea:	4a ef       	ldi	r20, 0xFA	; 250
    18ec:	54 e4       	ldi	r21, 0x44	; 68
    18ee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18f2:	dc 01       	movw	r26, r24
    18f4:	cb 01       	movw	r24, r22
    18f6:	8f 83       	std	Y+7, r24	; 0x07
    18f8:	98 87       	std	Y+8, r25	; 0x08
    18fa:	a9 87       	std	Y+9, r26	; 0x09
    18fc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    18fe:	6f 81       	ldd	r22, Y+7	; 0x07
    1900:	78 85       	ldd	r23, Y+8	; 0x08
    1902:	89 85       	ldd	r24, Y+9	; 0x09
    1904:	9a 85       	ldd	r25, Y+10	; 0x0a
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	40 e8       	ldi	r20, 0x80	; 128
    190c:	5f e3       	ldi	r21, 0x3F	; 63
    190e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1912:	88 23       	and	r24, r24
    1914:	2c f4       	brge	.+10     	; 0x1920 <HLCD_voidSendData+0x304>
		__ticks = 1;
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	9e 83       	std	Y+6, r25	; 0x06
    191c:	8d 83       	std	Y+5, r24	; 0x05
    191e:	3f c0       	rjmp	.+126    	; 0x199e <HLCD_voidSendData+0x382>
	else if (__tmp > 65535)
    1920:	6f 81       	ldd	r22, Y+7	; 0x07
    1922:	78 85       	ldd	r23, Y+8	; 0x08
    1924:	89 85       	ldd	r24, Y+9	; 0x09
    1926:	9a 85       	ldd	r25, Y+10	; 0x0a
    1928:	20 e0       	ldi	r18, 0x00	; 0
    192a:	3f ef       	ldi	r19, 0xFF	; 255
    192c:	4f e7       	ldi	r20, 0x7F	; 127
    192e:	57 e4       	ldi	r21, 0x47	; 71
    1930:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1934:	18 16       	cp	r1, r24
    1936:	4c f5       	brge	.+82     	; 0x198a <HLCD_voidSendData+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1938:	6b 85       	ldd	r22, Y+11	; 0x0b
    193a:	7c 85       	ldd	r23, Y+12	; 0x0c
    193c:	8d 85       	ldd	r24, Y+13	; 0x0d
    193e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1940:	20 e0       	ldi	r18, 0x00	; 0
    1942:	30 e0       	ldi	r19, 0x00	; 0
    1944:	40 e2       	ldi	r20, 0x20	; 32
    1946:	51 e4       	ldi	r21, 0x41	; 65
    1948:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    194c:	dc 01       	movw	r26, r24
    194e:	cb 01       	movw	r24, r22
    1950:	bc 01       	movw	r22, r24
    1952:	cd 01       	movw	r24, r26
    1954:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1958:	dc 01       	movw	r26, r24
    195a:	cb 01       	movw	r24, r22
    195c:	9e 83       	std	Y+6, r25	; 0x06
    195e:	8d 83       	std	Y+5, r24	; 0x05
    1960:	0f c0       	rjmp	.+30     	; 0x1980 <HLCD_voidSendData+0x364>
    1962:	88 ec       	ldi	r24, 0xC8	; 200
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	9c 83       	std	Y+4, r25	; 0x04
    1968:	8b 83       	std	Y+3, r24	; 0x03
    196a:	8b 81       	ldd	r24, Y+3	; 0x03
    196c:	9c 81       	ldd	r25, Y+4	; 0x04
    196e:	01 97       	sbiw	r24, 0x01	; 1
    1970:	f1 f7       	brne	.-4      	; 0x196e <HLCD_voidSendData+0x352>
    1972:	9c 83       	std	Y+4, r25	; 0x04
    1974:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1976:	8d 81       	ldd	r24, Y+5	; 0x05
    1978:	9e 81       	ldd	r25, Y+6	; 0x06
    197a:	01 97       	sbiw	r24, 0x01	; 1
    197c:	9e 83       	std	Y+6, r25	; 0x06
    197e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1980:	8d 81       	ldd	r24, Y+5	; 0x05
    1982:	9e 81       	ldd	r25, Y+6	; 0x06
    1984:	00 97       	sbiw	r24, 0x00	; 0
    1986:	69 f7       	brne	.-38     	; 0x1962 <HLCD_voidSendData+0x346>
    1988:	14 c0       	rjmp	.+40     	; 0x19b2 <HLCD_voidSendData+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    198a:	6f 81       	ldd	r22, Y+7	; 0x07
    198c:	78 85       	ldd	r23, Y+8	; 0x08
    198e:	89 85       	ldd	r24, Y+9	; 0x09
    1990:	9a 85       	ldd	r25, Y+10	; 0x0a
    1992:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1996:	dc 01       	movw	r26, r24
    1998:	cb 01       	movw	r24, r22
    199a:	9e 83       	std	Y+6, r25	; 0x06
    199c:	8d 83       	std	Y+5, r24	; 0x05
    199e:	8d 81       	ldd	r24, Y+5	; 0x05
    19a0:	9e 81       	ldd	r25, Y+6	; 0x06
    19a2:	9a 83       	std	Y+2, r25	; 0x02
    19a4:	89 83       	std	Y+1, r24	; 0x01
    19a6:	89 81       	ldd	r24, Y+1	; 0x01
    19a8:	9a 81       	ldd	r25, Y+2	; 0x02
    19aa:	01 97       	sbiw	r24, 0x01	; 1
    19ac:	f1 f7       	brne	.-4      	; 0x19aa <HLCD_voidSendData+0x38e>
    19ae:	9a 83       	std	Y+2, r25	; 0x02
    19b0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
	#endif
}
    19b2:	ab 96       	adiw	r28, 0x2b	; 43
    19b4:	0f b6       	in	r0, 0x3f	; 63
    19b6:	f8 94       	cli
    19b8:	de bf       	out	0x3e, r29	; 62
    19ba:	0f be       	out	0x3f, r0	; 63
    19bc:	cd bf       	out	0x3d, r28	; 61
    19be:	cf 91       	pop	r28
    19c0:	df 91       	pop	r29
    19c2:	08 95       	ret

000019c4 <HLCD_voidClearDisplay>:

void HLCD_voidClearDisplay(void)
{
    19c4:	df 93       	push	r29
    19c6:	cf 93       	push	r28
    19c8:	cd b7       	in	r28, 0x3d	; 61
    19ca:	de b7       	in	r29, 0x3e	; 62
	HLCD_voidSendCommand(0x01);
    19cc:	81 e0       	ldi	r24, 0x01	; 1
    19ce:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
}
    19d2:	cf 91       	pop	r28
    19d4:	df 91       	pop	r29
    19d6:	08 95       	ret

000019d8 <HLCD_voidSendString>:

void HLCD_voidSendString(const u8 *Ptr_u8PtrString)
{
    19d8:	df 93       	push	r29
    19da:	cf 93       	push	r28
    19dc:	00 d0       	rcall	.+0      	; 0x19de <HLCD_voidSendString+0x6>
    19de:	cd b7       	in	r28, 0x3d	; 61
    19e0:	de b7       	in	r29, 0x3e	; 62
    19e2:	9a 83       	std	Y+2, r25	; 0x02
    19e4:	89 83       	std	Y+1, r24	; 0x01
    19e6:	0a c0       	rjmp	.+20     	; 0x19fc <HLCD_voidSendString+0x24>
	while(*Ptr_u8PtrString != 0)
	{
		HLCD_voidSendData(*Ptr_u8PtrString);
    19e8:	e9 81       	ldd	r30, Y+1	; 0x01
    19ea:	fa 81       	ldd	r31, Y+2	; 0x02
    19ec:	80 81       	ld	r24, Z
    19ee:	0e 94 0e 0b 	call	0x161c	; 0x161c <HLCD_voidSendData>
		Ptr_u8PtrString++;
    19f2:	89 81       	ldd	r24, Y+1	; 0x01
    19f4:	9a 81       	ldd	r25, Y+2	; 0x02
    19f6:	01 96       	adiw	r24, 0x01	; 1
    19f8:	9a 83       	std	Y+2, r25	; 0x02
    19fa:	89 83       	std	Y+1, r24	; 0x01
	HLCD_voidSendCommand(0x01);
}

void HLCD_voidSendString(const u8 *Ptr_u8PtrString)
{
	while(*Ptr_u8PtrString != 0)
    19fc:	e9 81       	ldd	r30, Y+1	; 0x01
    19fe:	fa 81       	ldd	r31, Y+2	; 0x02
    1a00:	80 81       	ld	r24, Z
    1a02:	88 23       	and	r24, r24
    1a04:	89 f7       	brne	.-30     	; 0x19e8 <HLCD_voidSendString+0x10>
	{
		HLCD_voidSendData(*Ptr_u8PtrString);
		Ptr_u8PtrString++;
	}
}
    1a06:	0f 90       	pop	r0
    1a08:	0f 90       	pop	r0
    1a0a:	cf 91       	pop	r28
    1a0c:	df 91       	pop	r29
    1a0e:	08 95       	ret

00001a10 <HLCD_voidGoToPosition>:

void HLCD_voidGoToPosition(u8 Copy_u8RowNum,u8 Copy_u8ColNum)
{
    1a10:	df 93       	push	r29
    1a12:	cf 93       	push	r28
    1a14:	00 d0       	rcall	.+0      	; 0x1a16 <HLCD_voidGoToPosition+0x6>
    1a16:	00 d0       	rcall	.+0      	; 0x1a18 <HLCD_voidGoToPosition+0x8>
    1a18:	00 d0       	rcall	.+0      	; 0x1a1a <HLCD_voidGoToPosition+0xa>
    1a1a:	cd b7       	in	r28, 0x3d	; 61
    1a1c:	de b7       	in	r29, 0x3e	; 62
    1a1e:	8d 83       	std	Y+5, r24	; 0x05
    1a20:	6e 83       	std	Y+6, r22	; 0x06
	u8 arr[4] ={0x80,0xC0,0x94,0xD4};
    1a22:	80 e8       	ldi	r24, 0x80	; 128
    1a24:	89 83       	std	Y+1, r24	; 0x01
    1a26:	80 ec       	ldi	r24, 0xC0	; 192
    1a28:	8a 83       	std	Y+2, r24	; 0x02
    1a2a:	84 e9       	ldi	r24, 0x94	; 148
    1a2c:	8b 83       	std	Y+3, r24	; 0x03
    1a2e:	84 ed       	ldi	r24, 0xD4	; 212
    1a30:	8c 83       	std	Y+4, r24	; 0x04
	HLCD_voidSendCommand(arr[Copy_u8RowNum] + Copy_u8ColNum);
    1a32:	8d 81       	ldd	r24, Y+5	; 0x05
    1a34:	28 2f       	mov	r18, r24
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	ce 01       	movw	r24, r28
    1a3a:	01 96       	adiw	r24, 0x01	; 1
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	e2 0f       	add	r30, r18
    1a40:	f3 1f       	adc	r31, r19
    1a42:	90 81       	ld	r25, Z
    1a44:	8e 81       	ldd	r24, Y+6	; 0x06
    1a46:	89 0f       	add	r24, r25
    1a48:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
}
    1a4c:	26 96       	adiw	r28, 0x06	; 6
    1a4e:	0f b6       	in	r0, 0x3f	; 63
    1a50:	f8 94       	cli
    1a52:	de bf       	out	0x3e, r29	; 62
    1a54:	0f be       	out	0x3f, r0	; 63
    1a56:	cd bf       	out	0x3d, r28	; 61
    1a58:	cf 91       	pop	r28
    1a5a:	df 91       	pop	r29
    1a5c:	08 95       	ret

00001a5e <HLCD_voidDisplayNumber>:

void HLCD_voidDisplayNumber(s32 Copy_s32Number)
{
    1a5e:	df 93       	push	r29
    1a60:	cf 93       	push	r28
    1a62:	cd b7       	in	r28, 0x3d	; 61
    1a64:	de b7       	in	r29, 0x3e	; 62
    1a66:	60 97       	sbiw	r28, 0x10	; 16
    1a68:	0f b6       	in	r0, 0x3f	; 63
    1a6a:	f8 94       	cli
    1a6c:	de bf       	out	0x3e, r29	; 62
    1a6e:	0f be       	out	0x3f, r0	; 63
    1a70:	cd bf       	out	0x3d, r28	; 61
    1a72:	6d 87       	std	Y+13, r22	; 0x0d
    1a74:	7e 87       	std	Y+14, r23	; 0x0e
    1a76:	8f 87       	std	Y+15, r24	; 0x0f
    1a78:	98 8b       	std	Y+16, r25	; 0x10
	if(Copy_s32Number == 0)
    1a7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a7e:	af 85       	ldd	r26, Y+15	; 0x0f
    1a80:	b8 89       	ldd	r27, Y+16	; 0x10
    1a82:	00 97       	sbiw	r24, 0x00	; 0
    1a84:	a1 05       	cpc	r26, r1
    1a86:	b1 05       	cpc	r27, r1
    1a88:	21 f4       	brne	.+8      	; 0x1a92 <HLCD_voidDisplayNumber+0x34>
	{
		HLCD_voidSendData('0');
    1a8a:	80 e3       	ldi	r24, 0x30	; 48
    1a8c:	0e 94 0e 0b 	call	0x161c	; 0x161c <HLCD_voidSendData>
    1a90:	65 c0       	rjmp	.+202    	; 0x1b5c <HLCD_voidDisplayNumber+0xfe>
	}
	else if(Copy_s32Number > 0  )
    1a92:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a94:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a96:	af 85       	ldd	r26, Y+15	; 0x0f
    1a98:	b8 89       	ldd	r27, Y+16	; 0x10
    1a9a:	18 16       	cp	r1, r24
    1a9c:	19 06       	cpc	r1, r25
    1a9e:	1a 06       	cpc	r1, r26
    1aa0:	1b 06       	cpc	r1, r27
    1aa2:	0c f0       	brlt	.+2      	; 0x1aa6 <HLCD_voidDisplayNumber+0x48>
    1aa4:	5b c0       	rjmp	.+182    	; 0x1b5c <HLCD_voidDisplayNumber+0xfe>
	{
		s8 i=0;
    1aa6:	1a 82       	std	Y+2, r1	; 0x02
	    u8 Copy_u8Remander = 0;
    1aa8:	19 82       	std	Y+1, r1	; 0x01
	    u8 arr[10] = {0};
    1aaa:	8a e0       	ldi	r24, 0x0A	; 10
    1aac:	fe 01       	movw	r30, r28
    1aae:	33 96       	adiw	r30, 0x03	; 3
    1ab0:	df 01       	movw	r26, r30
    1ab2:	98 2f       	mov	r25, r24
    1ab4:	1d 92       	st	X+, r1
    1ab6:	9a 95       	dec	r25
    1ab8:	e9 f7       	brne	.-6      	; 0x1ab4 <HLCD_voidDisplayNumber+0x56>
    1aba:	30 c0       	rjmp	.+96     	; 0x1b1c <HLCD_voidDisplayNumber+0xbe>
	    while(Copy_s32Number != 0)
	    {
	    	Copy_u8Remander = Copy_s32Number % 10;
    1abc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1abe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ac0:	af 85       	ldd	r26, Y+15	; 0x0f
    1ac2:	b8 89       	ldd	r27, Y+16	; 0x10
    1ac4:	2a e0       	ldi	r18, 0x0A	; 10
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e0       	ldi	r20, 0x00	; 0
    1aca:	50 e0       	ldi	r21, 0x00	; 0
    1acc:	bc 01       	movw	r22, r24
    1ace:	cd 01       	movw	r24, r26
    1ad0:	0e 94 a3 17 	call	0x2f46	; 0x2f46 <__divmodsi4>
    1ad4:	dc 01       	movw	r26, r24
    1ad6:	cb 01       	movw	r24, r22
    1ad8:	89 83       	std	Y+1, r24	; 0x01
	    	arr[i] = Copy_u8Remander;
    1ada:	8a 81       	ldd	r24, Y+2	; 0x02
    1adc:	28 2f       	mov	r18, r24
    1ade:	33 27       	eor	r19, r19
    1ae0:	27 fd       	sbrc	r18, 7
    1ae2:	30 95       	com	r19
    1ae4:	ce 01       	movw	r24, r28
    1ae6:	03 96       	adiw	r24, 0x03	; 3
    1ae8:	fc 01       	movw	r30, r24
    1aea:	e2 0f       	add	r30, r18
    1aec:	f3 1f       	adc	r31, r19
    1aee:	89 81       	ldd	r24, Y+1	; 0x01
    1af0:	80 83       	st	Z, r24
	    	i++;
    1af2:	8a 81       	ldd	r24, Y+2	; 0x02
    1af4:	8f 5f       	subi	r24, 0xFF	; 255
    1af6:	8a 83       	std	Y+2, r24	; 0x02
	    	Copy_s32Number /= 10;
    1af8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1afa:	9e 85       	ldd	r25, Y+14	; 0x0e
    1afc:	af 85       	ldd	r26, Y+15	; 0x0f
    1afe:	b8 89       	ldd	r27, Y+16	; 0x10
    1b00:	2a e0       	ldi	r18, 0x0A	; 10
    1b02:	30 e0       	ldi	r19, 0x00	; 0
    1b04:	40 e0       	ldi	r20, 0x00	; 0
    1b06:	50 e0       	ldi	r21, 0x00	; 0
    1b08:	bc 01       	movw	r22, r24
    1b0a:	cd 01       	movw	r24, r26
    1b0c:	0e 94 a3 17 	call	0x2f46	; 0x2f46 <__divmodsi4>
    1b10:	da 01       	movw	r26, r20
    1b12:	c9 01       	movw	r24, r18
    1b14:	8d 87       	std	Y+13, r24	; 0x0d
    1b16:	9e 87       	std	Y+14, r25	; 0x0e
    1b18:	af 87       	std	Y+15, r26	; 0x0f
    1b1a:	b8 8b       	std	Y+16, r27	; 0x10
	else if(Copy_s32Number > 0  )
	{
		s8 i=0;
	    u8 Copy_u8Remander = 0;
	    u8 arr[10] = {0};
	    while(Copy_s32Number != 0)
    1b1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b20:	af 85       	ldd	r26, Y+15	; 0x0f
    1b22:	b8 89       	ldd	r27, Y+16	; 0x10
    1b24:	00 97       	sbiw	r24, 0x00	; 0
    1b26:	a1 05       	cpc	r26, r1
    1b28:	b1 05       	cpc	r27, r1
    1b2a:	41 f6       	brne	.-112    	; 0x1abc <HLCD_voidDisplayNumber+0x5e>
	    	Copy_u8Remander = Copy_s32Number % 10;
	    	arr[i] = Copy_u8Remander;
	    	i++;
	    	Copy_s32Number /= 10;
	    }
	    i--;
    1b2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b2e:	81 50       	subi	r24, 0x01	; 1
    1b30:	8a 83       	std	Y+2, r24	; 0x02
    1b32:	11 c0       	rjmp	.+34     	; 0x1b56 <HLCD_voidDisplayNumber+0xf8>
	    while(i >= 0)
	    {
	    	HLCD_voidSendData(arr[i] + 48);
    1b34:	8a 81       	ldd	r24, Y+2	; 0x02
    1b36:	28 2f       	mov	r18, r24
    1b38:	33 27       	eor	r19, r19
    1b3a:	27 fd       	sbrc	r18, 7
    1b3c:	30 95       	com	r19
    1b3e:	ce 01       	movw	r24, r28
    1b40:	03 96       	adiw	r24, 0x03	; 3
    1b42:	fc 01       	movw	r30, r24
    1b44:	e2 0f       	add	r30, r18
    1b46:	f3 1f       	adc	r31, r19
    1b48:	80 81       	ld	r24, Z
    1b4a:	80 5d       	subi	r24, 0xD0	; 208
    1b4c:	0e 94 0e 0b 	call	0x161c	; 0x161c <HLCD_voidSendData>
	    	i--;	
    1b50:	8a 81       	ldd	r24, Y+2	; 0x02
    1b52:	81 50       	subi	r24, 0x01	; 1
    1b54:	8a 83       	std	Y+2, r24	; 0x02
	    	arr[i] = Copy_u8Remander;
	    	i++;
	    	Copy_s32Number /= 10;
	    }
	    i--;
	    while(i >= 0)
    1b56:	8a 81       	ldd	r24, Y+2	; 0x02
    1b58:	88 23       	and	r24, r24
    1b5a:	64 f7       	brge	.-40     	; 0x1b34 <HLCD_voidDisplayNumber+0xd6>
	    	HLCD_voidSendData(arr[i] + 48);
	    	i--;	
	    }
	    
	}
}
    1b5c:	60 96       	adiw	r28, 0x10	; 16
    1b5e:	0f b6       	in	r0, 0x3f	; 63
    1b60:	f8 94       	cli
    1b62:	de bf       	out	0x3e, r29	; 62
    1b64:	0f be       	out	0x3f, r0	; 63
    1b66:	cd bf       	out	0x3d, r28	; 61
    1b68:	cf 91       	pop	r28
    1b6a:	df 91       	pop	r29
    1b6c:	08 95       	ret

00001b6e <HLCD_voidDisplaySpecialChar>:


void HLCD_voidDisplaySpecialChar(u8* Ptr_u8PtrChar,u8 CGRam_index,u8 Copy_u8RowNum,u8 Copy_u8ColNum)
{
    1b6e:	df 93       	push	r29
    1b70:	cf 93       	push	r28
    1b72:	cd b7       	in	r28, 0x3d	; 61
    1b74:	de b7       	in	r29, 0x3e	; 62
    1b76:	27 97       	sbiw	r28, 0x07	; 7
    1b78:	0f b6       	in	r0, 0x3f	; 63
    1b7a:	f8 94       	cli
    1b7c:	de bf       	out	0x3e, r29	; 62
    1b7e:	0f be       	out	0x3f, r0	; 63
    1b80:	cd bf       	out	0x3d, r28	; 61
    1b82:	9c 83       	std	Y+4, r25	; 0x04
    1b84:	8b 83       	std	Y+3, r24	; 0x03
    1b86:	6d 83       	std	Y+5, r22	; 0x05
    1b88:	4e 83       	std	Y+6, r20	; 0x06
    1b8a:	2f 83       	std	Y+7, r18	; 0x07
	HLCD_voidGoToPosition( Copy_u8RowNum, Copy_u8ColNum);
    1b8c:	8e 81       	ldd	r24, Y+6	; 0x06
    1b8e:	6f 81       	ldd	r22, Y+7	; 0x07
    1b90:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <HLCD_voidGoToPosition>
	HLCD_voidSendData(CGRam_index);
    1b94:	8d 81       	ldd	r24, Y+5	; 0x05
    1b96:	0e 94 0e 0b 	call	0x161c	; 0x161c <HLCD_voidSendData>
	u8 Local_u8address;
	u8 Local_u8Index;
	if (CGRam_index < 8)
    1b9a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9c:	88 30       	cpi	r24, 0x08	; 8
    1b9e:	18 f5       	brcc	.+70     	; 0x1be6 <HLCD_voidDisplaySpecialChar+0x78>
	{
		Local_u8address= CGRam_index * 8;
    1ba0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba2:	88 2f       	mov	r24, r24
    1ba4:	90 e0       	ldi	r25, 0x00	; 0
    1ba6:	88 0f       	add	r24, r24
    1ba8:	99 1f       	adc	r25, r25
    1baa:	88 0f       	add	r24, r24
    1bac:	99 1f       	adc	r25, r25
    1bae:	88 0f       	add	r24, r24
    1bb0:	99 1f       	adc	r25, r25
    1bb2:	8a 83       	std	Y+2, r24	; 0x02
		Local_u8address=SET_BIT(Local_u8address,6);
    1bb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb6:	80 64       	ori	r24, 0x40	; 64
    1bb8:	8a 83       	std	Y+2, r24	; 0x02
		HLCD_voidSendCommand(Local_u8address);
    1bba:	8a 81       	ldd	r24, Y+2	; 0x02
    1bbc:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>
		for(Local_u8Index = 0;Local_u8Index < 8;Local_u8Index++)
    1bc0:	19 82       	std	Y+1, r1	; 0x01
    1bc2:	0e c0       	rjmp	.+28     	; 0x1be0 <HLCD_voidDisplaySpecialChar+0x72>
		{
			HLCD_voidSendData(Ptr_u8PtrChar[Local_u8Index]);
    1bc4:	89 81       	ldd	r24, Y+1	; 0x01
    1bc6:	28 2f       	mov	r18, r24
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	8b 81       	ldd	r24, Y+3	; 0x03
    1bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bce:	fc 01       	movw	r30, r24
    1bd0:	e2 0f       	add	r30, r18
    1bd2:	f3 1f       	adc	r31, r19
    1bd4:	80 81       	ld	r24, Z
    1bd6:	0e 94 0e 0b 	call	0x161c	; 0x161c <HLCD_voidSendData>
	if (CGRam_index < 8)
	{
		Local_u8address= CGRam_index * 8;
		Local_u8address=SET_BIT(Local_u8address,6);
		HLCD_voidSendCommand(Local_u8address);
		for(Local_u8Index = 0;Local_u8Index < 8;Local_u8Index++)
    1bda:	89 81       	ldd	r24, Y+1	; 0x01
    1bdc:	8f 5f       	subi	r24, 0xFF	; 255
    1bde:	89 83       	std	Y+1, r24	; 0x01
    1be0:	89 81       	ldd	r24, Y+1	; 0x01
    1be2:	88 30       	cpi	r24, 0x08	; 8
    1be4:	78 f3       	brcs	.-34     	; 0x1bc4 <HLCD_voidDisplaySpecialChar+0x56>
		{
			HLCD_voidSendData(Ptr_u8PtrChar[Local_u8Index]);
		}
	}
	HLCD_voidSendCommand(0x02);
    1be6:	82 e0       	ldi	r24, 0x02	; 2
    1be8:	0e 94 3a 09 	call	0x1274	; 0x1274 <HLCD_voidSendCommand>

}
    1bec:	27 96       	adiw	r28, 0x07	; 7
    1bee:	0f b6       	in	r0, 0x3f	; 63
    1bf0:	f8 94       	cli
    1bf2:	de bf       	out	0x3e, r29	; 62
    1bf4:	0f be       	out	0x3f, r0	; 63
    1bf6:	cd bf       	out	0x3d, r28	; 61
    1bf8:	cf 91       	pop	r28
    1bfa:	df 91       	pop	r29
    1bfc:	08 95       	ret

00001bfe <HSSD_voidInitSSD>:
#include "SSD_CONFIG.h"
#include "SSD_PRIVATE.h"
#include "SSD_INTERFACE.h"

void HSSD_voidInitSSD(void)
{
    1bfe:	df 93       	push	r29
    1c00:	cf 93       	push	r28
    1c02:	cd b7       	in	r28, 0x3d	; 61
    1c04:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinDirection(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_OUTPUT);
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	60 e0       	ldi	r22, 0x00	; 0
    1c0a:	41 e0       	ldi	r20, 0x01	; 1
    1c0c:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_OUTPUT);
    1c10:	81 e0       	ldi	r24, 0x01	; 1
    1c12:	61 e0       	ldi	r22, 0x01	; 1
    1c14:	41 e0       	ldi	r20, 0x01	; 1
    1c16:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_OUTPUT);
    1c1a:	81 e0       	ldi	r24, 0x01	; 1
    1c1c:	62 e0       	ldi	r22, 0x02	; 2
    1c1e:	41 e0       	ldi	r20, 0x01	; 1
    1c20:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_OUTPUT);
    1c24:	81 e0       	ldi	r24, 0x01	; 1
    1c26:	64 e0       	ldi	r22, 0x04	; 4
    1c28:	41 e0       	ldi	r20, 0x01	; 1
    1c2a:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>

	MDIO_voidSetPinDirection(DIO_u8_PORTB ,DIO_u8_PIN6, DIO_u8_OUTPUT);
    1c2e:	81 e0       	ldi	r24, 0x01	; 1
    1c30:	66 e0       	ldi	r22, 0x06	; 6
    1c32:	41 e0       	ldi	r20, 0x01	; 1
    1c34:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(DIO_u8_PORTB ,DIO_u8_PIN5, DIO_u8_OUTPUT);
    1c38:	81 e0       	ldi	r24, 0x01	; 1
    1c3a:	65 e0       	ldi	r22, 0x05	; 5
    1c3c:	41 e0       	ldi	r20, 0x01	; 1
    1c3e:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(DIO_u8_PORTA ,DIO_u8_PIN2, DIO_u8_OUTPUT);
    1c42:	80 e0       	ldi	r24, 0x00	; 0
    1c44:	62 e0       	ldi	r22, 0x02	; 2
    1c46:	41 e0       	ldi	r20, 0x01	; 1
    1c48:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_OUTPUT);
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	63 e0       	ldi	r22, 0x03	; 3
    1c50:	41 e0       	ldi	r20, 0x01	; 1
    1c52:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>

}
    1c56:	cf 91       	pop	r28
    1c58:	df 91       	pop	r29
    1c5a:	08 95       	ret

00001c5c <HSSD_voidDisplayDigitSSD>:
void HSSD_voidDisplayDigitSSD(u8 Copy_u8Number,u8 Copy_u8SSD)
{
    1c5c:	df 93       	push	r29
    1c5e:	cf 93       	push	r28
    1c60:	cd b7       	in	r28, 0x3d	; 61
    1c62:	de b7       	in	r29, 0x3e	; 62
    1c64:	2c 97       	sbiw	r28, 0x0c	; 12
    1c66:	0f b6       	in	r0, 0x3f	; 63
    1c68:	f8 94       	cli
    1c6a:	de bf       	out	0x3e, r29	; 62
    1c6c:	0f be       	out	0x3f, r0	; 63
    1c6e:	cd bf       	out	0x3d, r28	; 61
    1c70:	89 83       	std	Y+1, r24	; 0x01
    1c72:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8SSD)
    1c74:	8a 81       	ldd	r24, Y+2	; 0x02
    1c76:	28 2f       	mov	r18, r24
    1c78:	30 e0       	ldi	r19, 0x00	; 0
    1c7a:	3c 87       	std	Y+12, r19	; 0x0c
    1c7c:	2b 87       	std	Y+11, r18	; 0x0b
    1c7e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c80:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c82:	82 30       	cpi	r24, 0x02	; 2
    1c84:	91 05       	cpc	r25, r1
    1c86:	09 f4       	brne	.+2      	; 0x1c8a <HSSD_voidDisplayDigitSSD+0x2e>
    1c88:	50 c1       	rjmp	.+672    	; 0x1f2a <HSSD_voidDisplayDigitSSD+0x2ce>
    1c8a:	2b 85       	ldd	r18, Y+11	; 0x0b
    1c8c:	3c 85       	ldd	r19, Y+12	; 0x0c
    1c8e:	23 30       	cpi	r18, 0x03	; 3
    1c90:	31 05       	cpc	r19, r1
    1c92:	34 f4       	brge	.+12     	; 0x1ca0 <HSSD_voidDisplayDigitSSD+0x44>
    1c94:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c96:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c98:	81 30       	cpi	r24, 0x01	; 1
    1c9a:	91 05       	cpc	r25, r1
    1c9c:	71 f0       	breq	.+28     	; 0x1cba <HSSD_voidDisplayDigitSSD+0x5e>
    1c9e:	ec c4       	rjmp	.+2520   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1ca0:	2b 85       	ldd	r18, Y+11	; 0x0b
    1ca2:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ca4:	23 30       	cpi	r18, 0x03	; 3
    1ca6:	31 05       	cpc	r19, r1
    1ca8:	09 f4       	brne	.+2      	; 0x1cac <HSSD_voidDisplayDigitSSD+0x50>
    1caa:	77 c2       	rjmp	.+1262   	; 0x219a <HSSD_voidDisplayDigitSSD+0x53e>
    1cac:	8b 85       	ldd	r24, Y+11	; 0x0b
    1cae:	9c 85       	ldd	r25, Y+12	; 0x0c
    1cb0:	84 30       	cpi	r24, 0x04	; 4
    1cb2:	91 05       	cpc	r25, r1
    1cb4:	09 f4       	brne	.+2      	; 0x1cb8 <HSSD_voidDisplayDigitSSD+0x5c>
    1cb6:	a9 c3       	rjmp	.+1874   	; 0x240a <HSSD_voidDisplayDigitSSD+0x7ae>
    1cb8:	df c4       	rjmp	.+2494   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
	{
	case ONES_T:
		MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN6, DIO_u8_LOW);
    1cba:	81 e0       	ldi	r24, 0x01	; 1
    1cbc:	66 e0       	ldi	r22, 0x06	; 6
    1cbe:	40 e0       	ldi	r20, 0x00	; 0
    1cc0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN5, DIO_u8_LOW);
    1cc4:	81 e0       	ldi	r24, 0x01	; 1
    1cc6:	65 e0       	ldi	r22, 0x05	; 5
    1cc8:	40 e0       	ldi	r20, 0x00	; 0
    1cca:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN2, DIO_u8_LOW);
    1cce:	80 e0       	ldi	r24, 0x00	; 0
    1cd0:	62 e0       	ldi	r22, 0x02	; 2
    1cd2:	40 e0       	ldi	r20, 0x00	; 0
    1cd4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_HIGH);
    1cd8:	80 e0       	ldi	r24, 0x00	; 0
    1cda:	63 e0       	ldi	r22, 0x03	; 3
    1cdc:	41 e0       	ldi	r20, 0x01	; 1
    1cde:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
		switch(Copy_u8Number)
    1ce2:	89 81       	ldd	r24, Y+1	; 0x01
    1ce4:	28 2f       	mov	r18, r24
    1ce6:	30 e0       	ldi	r19, 0x00	; 0
    1ce8:	3a 87       	std	Y+10, r19	; 0x0a
    1cea:	29 87       	std	Y+9, r18	; 0x09
    1cec:	89 85       	ldd	r24, Y+9	; 0x09
    1cee:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cf0:	84 30       	cpi	r24, 0x04	; 4
    1cf2:	91 05       	cpc	r25, r1
    1cf4:	09 f4       	brne	.+2      	; 0x1cf8 <HSSD_voidDisplayDigitSSD+0x9c>
    1cf6:	9b c0       	rjmp	.+310    	; 0x1e2e <HSSD_voidDisplayDigitSSD+0x1d2>
    1cf8:	29 85       	ldd	r18, Y+9	; 0x09
    1cfa:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cfc:	25 30       	cpi	r18, 0x05	; 5
    1cfe:	31 05       	cpc	r19, r1
    1d00:	ec f4       	brge	.+58     	; 0x1d3c <HSSD_voidDisplayDigitSSD+0xe0>
    1d02:	89 85       	ldd	r24, Y+9	; 0x09
    1d04:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d06:	81 30       	cpi	r24, 0x01	; 1
    1d08:	91 05       	cpc	r25, r1
    1d0a:	09 f4       	brne	.+2      	; 0x1d0e <HSSD_voidDisplayDigitSSD+0xb2>
    1d0c:	51 c0       	rjmp	.+162    	; 0x1db0 <HSSD_voidDisplayDigitSSD+0x154>
    1d0e:	29 85       	ldd	r18, Y+9	; 0x09
    1d10:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d12:	22 30       	cpi	r18, 0x02	; 2
    1d14:	31 05       	cpc	r19, r1
    1d16:	2c f4       	brge	.+10     	; 0x1d22 <HSSD_voidDisplayDigitSSD+0xc6>
    1d18:	89 85       	ldd	r24, Y+9	; 0x09
    1d1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d1c:	00 97       	sbiw	r24, 0x00	; 0
    1d1e:	99 f1       	breq	.+102    	; 0x1d86 <HSSD_voidDisplayDigitSSD+0x12a>
    1d20:	ab c4       	rjmp	.+2390   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1d22:	29 85       	ldd	r18, Y+9	; 0x09
    1d24:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d26:	22 30       	cpi	r18, 0x02	; 2
    1d28:	31 05       	cpc	r19, r1
    1d2a:	09 f4       	brne	.+2      	; 0x1d2e <HSSD_voidDisplayDigitSSD+0xd2>
    1d2c:	56 c0       	rjmp	.+172    	; 0x1dda <HSSD_voidDisplayDigitSSD+0x17e>
    1d2e:	89 85       	ldd	r24, Y+9	; 0x09
    1d30:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d32:	83 30       	cpi	r24, 0x03	; 3
    1d34:	91 05       	cpc	r25, r1
    1d36:	09 f4       	brne	.+2      	; 0x1d3a <HSSD_voidDisplayDigitSSD+0xde>
    1d38:	65 c0       	rjmp	.+202    	; 0x1e04 <HSSD_voidDisplayDigitSSD+0x1a8>
    1d3a:	9e c4       	rjmp	.+2364   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1d3c:	29 85       	ldd	r18, Y+9	; 0x09
    1d3e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d40:	27 30       	cpi	r18, 0x07	; 7
    1d42:	31 05       	cpc	r19, r1
    1d44:	09 f4       	brne	.+2      	; 0x1d48 <HSSD_voidDisplayDigitSSD+0xec>
    1d46:	b2 c0       	rjmp	.+356    	; 0x1eac <HSSD_voidDisplayDigitSSD+0x250>
    1d48:	89 85       	ldd	r24, Y+9	; 0x09
    1d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d4c:	88 30       	cpi	r24, 0x08	; 8
    1d4e:	91 05       	cpc	r25, r1
    1d50:	6c f4       	brge	.+26     	; 0x1d6c <HSSD_voidDisplayDigitSSD+0x110>
    1d52:	29 85       	ldd	r18, Y+9	; 0x09
    1d54:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d56:	25 30       	cpi	r18, 0x05	; 5
    1d58:	31 05       	cpc	r19, r1
    1d5a:	09 f4       	brne	.+2      	; 0x1d5e <HSSD_voidDisplayDigitSSD+0x102>
    1d5c:	7d c0       	rjmp	.+250    	; 0x1e58 <HSSD_voidDisplayDigitSSD+0x1fc>
    1d5e:	89 85       	ldd	r24, Y+9	; 0x09
    1d60:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d62:	86 30       	cpi	r24, 0x06	; 6
    1d64:	91 05       	cpc	r25, r1
    1d66:	09 f4       	brne	.+2      	; 0x1d6a <HSSD_voidDisplayDigitSSD+0x10e>
    1d68:	8c c0       	rjmp	.+280    	; 0x1e82 <HSSD_voidDisplayDigitSSD+0x226>
    1d6a:	86 c4       	rjmp	.+2316   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1d6c:	29 85       	ldd	r18, Y+9	; 0x09
    1d6e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d70:	28 30       	cpi	r18, 0x08	; 8
    1d72:	31 05       	cpc	r19, r1
    1d74:	09 f4       	brne	.+2      	; 0x1d78 <HSSD_voidDisplayDigitSSD+0x11c>
    1d76:	af c0       	rjmp	.+350    	; 0x1ed6 <HSSD_voidDisplayDigitSSD+0x27a>
    1d78:	89 85       	ldd	r24, Y+9	; 0x09
    1d7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d7c:	89 30       	cpi	r24, 0x09	; 9
    1d7e:	91 05       	cpc	r25, r1
    1d80:	09 f4       	brne	.+2      	; 0x1d84 <HSSD_voidDisplayDigitSSD+0x128>
    1d82:	be c0       	rjmp	.+380    	; 0x1f00 <HSSD_voidDisplayDigitSSD+0x2a4>
    1d84:	79 c4       	rjmp	.+2290   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
		{
		case 0:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	60 e0       	ldi	r22, 0x00	; 0
    1d8a:	40 e0       	ldi	r20, 0x00	; 0
    1d8c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	61 e0       	ldi	r22, 0x01	; 1
    1d94:	40 e0       	ldi	r20, 0x00	; 0
    1d96:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    1d9a:	81 e0       	ldi	r24, 0x01	; 1
    1d9c:	62 e0       	ldi	r22, 0x02	; 2
    1d9e:	40 e0       	ldi	r20, 0x00	; 0
    1da0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1da4:	81 e0       	ldi	r24, 0x01	; 1
    1da6:	64 e0       	ldi	r22, 0x04	; 4
    1da8:	40 e0       	ldi	r20, 0x00	; 0
    1daa:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1dae:	64 c4       	rjmp	.+2248   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						 
		case 1:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    1db0:	81 e0       	ldi	r24, 0x01	; 1
    1db2:	60 e0       	ldi	r22, 0x00	; 0
    1db4:	41 e0       	ldi	r20, 0x01	; 1
    1db6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    1dba:	81 e0       	ldi	r24, 0x01	; 1
    1dbc:	61 e0       	ldi	r22, 0x01	; 1
    1dbe:	40 e0       	ldi	r20, 0x00	; 0
    1dc0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    1dc4:	81 e0       	ldi	r24, 0x01	; 1
    1dc6:	62 e0       	ldi	r22, 0x02	; 2
    1dc8:	40 e0       	ldi	r20, 0x00	; 0
    1dca:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1dce:	81 e0       	ldi	r24, 0x01	; 1
    1dd0:	64 e0       	ldi	r22, 0x04	; 4
    1dd2:	40 e0       	ldi	r20, 0x00	; 0
    1dd4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1dd8:	4f c4       	rjmp	.+2206   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						  
		case 2:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    1dda:	81 e0       	ldi	r24, 0x01	; 1
    1ddc:	60 e0       	ldi	r22, 0x00	; 0
    1dde:	40 e0       	ldi	r20, 0x00	; 0
    1de0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    1de4:	81 e0       	ldi	r24, 0x01	; 1
    1de6:	61 e0       	ldi	r22, 0x01	; 1
    1de8:	41 e0       	ldi	r20, 0x01	; 1
    1dea:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    1dee:	81 e0       	ldi	r24, 0x01	; 1
    1df0:	62 e0       	ldi	r22, 0x02	; 2
    1df2:	40 e0       	ldi	r20, 0x00	; 0
    1df4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	64 e0       	ldi	r22, 0x04	; 4
    1dfc:	40 e0       	ldi	r20, 0x00	; 0
    1dfe:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1e02:	3a c4       	rjmp	.+2164   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						 
		case 3:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    1e04:	81 e0       	ldi	r24, 0x01	; 1
    1e06:	60 e0       	ldi	r22, 0x00	; 0
    1e08:	41 e0       	ldi	r20, 0x01	; 1
    1e0a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    1e0e:	81 e0       	ldi	r24, 0x01	; 1
    1e10:	61 e0       	ldi	r22, 0x01	; 1
    1e12:	41 e0       	ldi	r20, 0x01	; 1
    1e14:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	62 e0       	ldi	r22, 0x02	; 2
    1e1c:	40 e0       	ldi	r20, 0x00	; 0
    1e1e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1e22:	81 e0       	ldi	r24, 0x01	; 1
    1e24:	64 e0       	ldi	r22, 0x04	; 4
    1e26:	40 e0       	ldi	r20, 0x00	; 0
    1e28:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1e2c:	25 c4       	rjmp	.+2122   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						  
		case 4:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	40 e0       	ldi	r20, 0x00	; 0
    1e34:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    1e38:	81 e0       	ldi	r24, 0x01	; 1
    1e3a:	61 e0       	ldi	r22, 0x01	; 1
    1e3c:	40 e0       	ldi	r20, 0x00	; 0
    1e3e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    1e42:	81 e0       	ldi	r24, 0x01	; 1
    1e44:	62 e0       	ldi	r22, 0x02	; 2
    1e46:	41 e0       	ldi	r20, 0x01	; 1
    1e48:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1e4c:	81 e0       	ldi	r24, 0x01	; 1
    1e4e:	64 e0       	ldi	r22, 0x04	; 4
    1e50:	40 e0       	ldi	r20, 0x00	; 0
    1e52:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1e56:	10 c4       	rjmp	.+2080   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						 
		case 5:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    1e58:	81 e0       	ldi	r24, 0x01	; 1
    1e5a:	60 e0       	ldi	r22, 0x00	; 0
    1e5c:	41 e0       	ldi	r20, 0x01	; 1
    1e5e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    1e62:	81 e0       	ldi	r24, 0x01	; 1
    1e64:	61 e0       	ldi	r22, 0x01	; 1
    1e66:	40 e0       	ldi	r20, 0x00	; 0
    1e68:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    1e6c:	81 e0       	ldi	r24, 0x01	; 1
    1e6e:	62 e0       	ldi	r22, 0x02	; 2
    1e70:	41 e0       	ldi	r20, 0x01	; 1
    1e72:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1e76:	81 e0       	ldi	r24, 0x01	; 1
    1e78:	64 e0       	ldi	r22, 0x04	; 4
    1e7a:	40 e0       	ldi	r20, 0x00	; 0
    1e7c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1e80:	fb c3       	rjmp	.+2038   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						  
		case 6:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    1e82:	81 e0       	ldi	r24, 0x01	; 1
    1e84:	60 e0       	ldi	r22, 0x00	; 0
    1e86:	40 e0       	ldi	r20, 0x00	; 0
    1e88:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	61 e0       	ldi	r22, 0x01	; 1
    1e90:	41 e0       	ldi	r20, 0x01	; 1
    1e92:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    1e96:	81 e0       	ldi	r24, 0x01	; 1
    1e98:	62 e0       	ldi	r22, 0x02	; 2
    1e9a:	41 e0       	ldi	r20, 0x01	; 1
    1e9c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1ea0:	81 e0       	ldi	r24, 0x01	; 1
    1ea2:	64 e0       	ldi	r22, 0x04	; 4
    1ea4:	40 e0       	ldi	r20, 0x00	; 0
    1ea6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1eaa:	e6 c3       	rjmp	.+1996   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						  
		case 7:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    1eac:	81 e0       	ldi	r24, 0x01	; 1
    1eae:	60 e0       	ldi	r22, 0x00	; 0
    1eb0:	41 e0       	ldi	r20, 0x01	; 1
    1eb2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    1eb6:	81 e0       	ldi	r24, 0x01	; 1
    1eb8:	61 e0       	ldi	r22, 0x01	; 1
    1eba:	41 e0       	ldi	r20, 0x01	; 1
    1ebc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    1ec0:	81 e0       	ldi	r24, 0x01	; 1
    1ec2:	62 e0       	ldi	r22, 0x02	; 2
    1ec4:	41 e0       	ldi	r20, 0x01	; 1
    1ec6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    1eca:	81 e0       	ldi	r24, 0x01	; 1
    1ecc:	64 e0       	ldi	r22, 0x04	; 4
    1ece:	40 e0       	ldi	r20, 0x00	; 0
    1ed0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1ed4:	d1 c3       	rjmp	.+1954   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						  
		case 8:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	60 e0       	ldi	r22, 0x00	; 0
    1eda:	40 e0       	ldi	r20, 0x00	; 0
    1edc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    1ee0:	81 e0       	ldi	r24, 0x01	; 1
    1ee2:	61 e0       	ldi	r22, 0x01	; 1
    1ee4:	40 e0       	ldi	r20, 0x00	; 0
    1ee6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	62 e0       	ldi	r22, 0x02	; 2
    1eee:	40 e0       	ldi	r20, 0x00	; 0
    1ef0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	64 e0       	ldi	r22, 0x04	; 4
    1ef8:	41 e0       	ldi	r20, 0x01	; 1
    1efa:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1efe:	bc c3       	rjmp	.+1912   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			break;						  
		case 9:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    1f00:	81 e0       	ldi	r24, 0x01	; 1
    1f02:	60 e0       	ldi	r22, 0x00	; 0
    1f04:	41 e0       	ldi	r20, 0x01	; 1
    1f06:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    1f0a:	81 e0       	ldi	r24, 0x01	; 1
    1f0c:	61 e0       	ldi	r22, 0x01	; 1
    1f0e:	40 e0       	ldi	r20, 0x00	; 0
    1f10:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	62 e0       	ldi	r22, 0x02	; 2
    1f18:	40 e0       	ldi	r20, 0x00	; 0
    1f1a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    1f1e:	81 e0       	ldi	r24, 0x01	; 1
    1f20:	64 e0       	ldi	r22, 0x04	; 4
    1f22:	41 e0       	ldi	r20, 0x01	; 1
    1f24:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    1f28:	a7 c3       	rjmp	.+1870   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
		default:
			break;
		}
		break;
		case TENS_T:
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN6, DIO_u8_LOW);
    1f2a:	81 e0       	ldi	r24, 0x01	; 1
    1f2c:	66 e0       	ldi	r22, 0x06	; 6
    1f2e:	40 e0       	ldi	r20, 0x00	; 0
    1f30:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN5, DIO_u8_LOW);
    1f34:	81 e0       	ldi	r24, 0x01	; 1
    1f36:	65 e0       	ldi	r22, 0x05	; 5
    1f38:	40 e0       	ldi	r20, 0x00	; 0
    1f3a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN2, DIO_u8_HIGH);
    1f3e:	80 e0       	ldi	r24, 0x00	; 0
    1f40:	62 e0       	ldi	r22, 0x02	; 2
    1f42:	41 e0       	ldi	r20, 0x01	; 1
    1f44:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_LOW);
    1f48:	80 e0       	ldi	r24, 0x00	; 0
    1f4a:	63 e0       	ldi	r22, 0x03	; 3
    1f4c:	40 e0       	ldi	r20, 0x00	; 0
    1f4e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			switch(Copy_u8Number)
    1f52:	89 81       	ldd	r24, Y+1	; 0x01
    1f54:	28 2f       	mov	r18, r24
    1f56:	30 e0       	ldi	r19, 0x00	; 0
    1f58:	38 87       	std	Y+8, r19	; 0x08
    1f5a:	2f 83       	std	Y+7, r18	; 0x07
    1f5c:	8f 81       	ldd	r24, Y+7	; 0x07
    1f5e:	98 85       	ldd	r25, Y+8	; 0x08
    1f60:	84 30       	cpi	r24, 0x04	; 4
    1f62:	91 05       	cpc	r25, r1
    1f64:	09 f4       	brne	.+2      	; 0x1f68 <HSSD_voidDisplayDigitSSD+0x30c>
    1f66:	9b c0       	rjmp	.+310    	; 0x209e <HSSD_voidDisplayDigitSSD+0x442>
    1f68:	2f 81       	ldd	r18, Y+7	; 0x07
    1f6a:	38 85       	ldd	r19, Y+8	; 0x08
    1f6c:	25 30       	cpi	r18, 0x05	; 5
    1f6e:	31 05       	cpc	r19, r1
    1f70:	ec f4       	brge	.+58     	; 0x1fac <HSSD_voidDisplayDigitSSD+0x350>
    1f72:	8f 81       	ldd	r24, Y+7	; 0x07
    1f74:	98 85       	ldd	r25, Y+8	; 0x08
    1f76:	81 30       	cpi	r24, 0x01	; 1
    1f78:	91 05       	cpc	r25, r1
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <HSSD_voidDisplayDigitSSD+0x322>
    1f7c:	51 c0       	rjmp	.+162    	; 0x2020 <HSSD_voidDisplayDigitSSD+0x3c4>
    1f7e:	2f 81       	ldd	r18, Y+7	; 0x07
    1f80:	38 85       	ldd	r19, Y+8	; 0x08
    1f82:	22 30       	cpi	r18, 0x02	; 2
    1f84:	31 05       	cpc	r19, r1
    1f86:	2c f4       	brge	.+10     	; 0x1f92 <HSSD_voidDisplayDigitSSD+0x336>
    1f88:	8f 81       	ldd	r24, Y+7	; 0x07
    1f8a:	98 85       	ldd	r25, Y+8	; 0x08
    1f8c:	00 97       	sbiw	r24, 0x00	; 0
    1f8e:	99 f1       	breq	.+102    	; 0x1ff6 <HSSD_voidDisplayDigitSSD+0x39a>
    1f90:	73 c3       	rjmp	.+1766   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1f92:	2f 81       	ldd	r18, Y+7	; 0x07
    1f94:	38 85       	ldd	r19, Y+8	; 0x08
    1f96:	22 30       	cpi	r18, 0x02	; 2
    1f98:	31 05       	cpc	r19, r1
    1f9a:	09 f4       	brne	.+2      	; 0x1f9e <HSSD_voidDisplayDigitSSD+0x342>
    1f9c:	56 c0       	rjmp	.+172    	; 0x204a <HSSD_voidDisplayDigitSSD+0x3ee>
    1f9e:	8f 81       	ldd	r24, Y+7	; 0x07
    1fa0:	98 85       	ldd	r25, Y+8	; 0x08
    1fa2:	83 30       	cpi	r24, 0x03	; 3
    1fa4:	91 05       	cpc	r25, r1
    1fa6:	09 f4       	brne	.+2      	; 0x1faa <HSSD_voidDisplayDigitSSD+0x34e>
    1fa8:	65 c0       	rjmp	.+202    	; 0x2074 <HSSD_voidDisplayDigitSSD+0x418>
    1faa:	66 c3       	rjmp	.+1740   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1fac:	2f 81       	ldd	r18, Y+7	; 0x07
    1fae:	38 85       	ldd	r19, Y+8	; 0x08
    1fb0:	27 30       	cpi	r18, 0x07	; 7
    1fb2:	31 05       	cpc	r19, r1
    1fb4:	09 f4       	brne	.+2      	; 0x1fb8 <HSSD_voidDisplayDigitSSD+0x35c>
    1fb6:	b2 c0       	rjmp	.+356    	; 0x211c <HSSD_voidDisplayDigitSSD+0x4c0>
    1fb8:	8f 81       	ldd	r24, Y+7	; 0x07
    1fba:	98 85       	ldd	r25, Y+8	; 0x08
    1fbc:	88 30       	cpi	r24, 0x08	; 8
    1fbe:	91 05       	cpc	r25, r1
    1fc0:	6c f4       	brge	.+26     	; 0x1fdc <HSSD_voidDisplayDigitSSD+0x380>
    1fc2:	2f 81       	ldd	r18, Y+7	; 0x07
    1fc4:	38 85       	ldd	r19, Y+8	; 0x08
    1fc6:	25 30       	cpi	r18, 0x05	; 5
    1fc8:	31 05       	cpc	r19, r1
    1fca:	09 f4       	brne	.+2      	; 0x1fce <HSSD_voidDisplayDigitSSD+0x372>
    1fcc:	7d c0       	rjmp	.+250    	; 0x20c8 <HSSD_voidDisplayDigitSSD+0x46c>
    1fce:	8f 81       	ldd	r24, Y+7	; 0x07
    1fd0:	98 85       	ldd	r25, Y+8	; 0x08
    1fd2:	86 30       	cpi	r24, 0x06	; 6
    1fd4:	91 05       	cpc	r25, r1
    1fd6:	09 f4       	brne	.+2      	; 0x1fda <HSSD_voidDisplayDigitSSD+0x37e>
    1fd8:	8c c0       	rjmp	.+280    	; 0x20f2 <HSSD_voidDisplayDigitSSD+0x496>
    1fda:	4e c3       	rjmp	.+1692   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    1fdc:	2f 81       	ldd	r18, Y+7	; 0x07
    1fde:	38 85       	ldd	r19, Y+8	; 0x08
    1fe0:	28 30       	cpi	r18, 0x08	; 8
    1fe2:	31 05       	cpc	r19, r1
    1fe4:	09 f4       	brne	.+2      	; 0x1fe8 <HSSD_voidDisplayDigitSSD+0x38c>
    1fe6:	af c0       	rjmp	.+350    	; 0x2146 <HSSD_voidDisplayDigitSSD+0x4ea>
    1fe8:	8f 81       	ldd	r24, Y+7	; 0x07
    1fea:	98 85       	ldd	r25, Y+8	; 0x08
    1fec:	89 30       	cpi	r24, 0x09	; 9
    1fee:	91 05       	cpc	r25, r1
    1ff0:	09 f4       	brne	.+2      	; 0x1ff4 <HSSD_voidDisplayDigitSSD+0x398>
    1ff2:	be c0       	rjmp	.+380    	; 0x2170 <HSSD_voidDisplayDigitSSD+0x514>
    1ff4:	41 c3       	rjmp	.+1666   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			{
			case 0:
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	60 e0       	ldi	r22, 0x00	; 0
    1ffa:	40 e0       	ldi	r20, 0x00	; 0
    1ffc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	61 e0       	ldi	r22, 0x01	; 1
    2004:	40 e0       	ldi	r20, 0x00	; 0
    2006:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    200a:	81 e0       	ldi	r24, 0x01	; 1
    200c:	62 e0       	ldi	r22, 0x02	; 2
    200e:	40 e0       	ldi	r20, 0x00	; 0
    2010:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2014:	81 e0       	ldi	r24, 0x01	; 1
    2016:	64 e0       	ldi	r22, 0x04	; 4
    2018:	40 e0       	ldi	r20, 0x00	; 0
    201a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    201e:	2c c3       	rjmp	.+1624   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 1:						 
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	60 e0       	ldi	r22, 0x00	; 0
    2024:	41 e0       	ldi	r20, 0x01	; 1
    2026:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    202a:	81 e0       	ldi	r24, 0x01	; 1
    202c:	61 e0       	ldi	r22, 0x01	; 1
    202e:	40 e0       	ldi	r20, 0x00	; 0
    2030:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    2034:	81 e0       	ldi	r24, 0x01	; 1
    2036:	62 e0       	ldi	r22, 0x02	; 2
    2038:	40 e0       	ldi	r20, 0x00	; 0
    203a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    203e:	81 e0       	ldi	r24, 0x01	; 1
    2040:	64 e0       	ldi	r22, 0x04	; 4
    2042:	40 e0       	ldi	r20, 0x00	; 0
    2044:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2048:	17 c3       	rjmp	.+1582   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 2:						  
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    204a:	81 e0       	ldi	r24, 0x01	; 1
    204c:	60 e0       	ldi	r22, 0x00	; 0
    204e:	40 e0       	ldi	r20, 0x00	; 0
    2050:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	61 e0       	ldi	r22, 0x01	; 1
    2058:	41 e0       	ldi	r20, 0x01	; 1
    205a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    205e:	81 e0       	ldi	r24, 0x01	; 1
    2060:	62 e0       	ldi	r22, 0x02	; 2
    2062:	40 e0       	ldi	r20, 0x00	; 0
    2064:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2068:	81 e0       	ldi	r24, 0x01	; 1
    206a:	64 e0       	ldi	r22, 0x04	; 4
    206c:	40 e0       	ldi	r20, 0x00	; 0
    206e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2072:	02 c3       	rjmp	.+1540   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 3:						 
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2074:	81 e0       	ldi	r24, 0x01	; 1
    2076:	60 e0       	ldi	r22, 0x00	; 0
    2078:	41 e0       	ldi	r20, 0x01	; 1
    207a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    207e:	81 e0       	ldi	r24, 0x01	; 1
    2080:	61 e0       	ldi	r22, 0x01	; 1
    2082:	41 e0       	ldi	r20, 0x01	; 1
    2084:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    2088:	81 e0       	ldi	r24, 0x01	; 1
    208a:	62 e0       	ldi	r22, 0x02	; 2
    208c:	40 e0       	ldi	r20, 0x00	; 0
    208e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2092:	81 e0       	ldi	r24, 0x01	; 1
    2094:	64 e0       	ldi	r22, 0x04	; 4
    2096:	40 e0       	ldi	r20, 0x00	; 0
    2098:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    209c:	ed c2       	rjmp	.+1498   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 4:						  
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    209e:	81 e0       	ldi	r24, 0x01	; 1
    20a0:	60 e0       	ldi	r22, 0x00	; 0
    20a2:	40 e0       	ldi	r20, 0x00	; 0
    20a4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	61 e0       	ldi	r22, 0x01	; 1
    20ac:	40 e0       	ldi	r20, 0x00	; 0
    20ae:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    20b2:	81 e0       	ldi	r24, 0x01	; 1
    20b4:	62 e0       	ldi	r22, 0x02	; 2
    20b6:	41 e0       	ldi	r20, 0x01	; 1
    20b8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    20bc:	81 e0       	ldi	r24, 0x01	; 1
    20be:	64 e0       	ldi	r22, 0x04	; 4
    20c0:	40 e0       	ldi	r20, 0x00	; 0
    20c2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    20c6:	d8 c2       	rjmp	.+1456   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 5:						 
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    20c8:	81 e0       	ldi	r24, 0x01	; 1
    20ca:	60 e0       	ldi	r22, 0x00	; 0
    20cc:	41 e0       	ldi	r20, 0x01	; 1
    20ce:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    20d2:	81 e0       	ldi	r24, 0x01	; 1
    20d4:	61 e0       	ldi	r22, 0x01	; 1
    20d6:	40 e0       	ldi	r20, 0x00	; 0
    20d8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    20dc:	81 e0       	ldi	r24, 0x01	; 1
    20de:	62 e0       	ldi	r22, 0x02	; 2
    20e0:	41 e0       	ldi	r20, 0x01	; 1
    20e2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    20e6:	81 e0       	ldi	r24, 0x01	; 1
    20e8:	64 e0       	ldi	r22, 0x04	; 4
    20ea:	40 e0       	ldi	r20, 0x00	; 0
    20ec:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    20f0:	c3 c2       	rjmp	.+1414   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 6:						  
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    20f2:	81 e0       	ldi	r24, 0x01	; 1
    20f4:	60 e0       	ldi	r22, 0x00	; 0
    20f6:	40 e0       	ldi	r20, 0x00	; 0
    20f8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    20fc:	81 e0       	ldi	r24, 0x01	; 1
    20fe:	61 e0       	ldi	r22, 0x01	; 1
    2100:	41 e0       	ldi	r20, 0x01	; 1
    2102:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    2106:	81 e0       	ldi	r24, 0x01	; 1
    2108:	62 e0       	ldi	r22, 0x02	; 2
    210a:	41 e0       	ldi	r20, 0x01	; 1
    210c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2110:	81 e0       	ldi	r24, 0x01	; 1
    2112:	64 e0       	ldi	r22, 0x04	; 4
    2114:	40 e0       	ldi	r20, 0x00	; 0
    2116:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    211a:	ae c2       	rjmp	.+1372   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 7:						  
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    211c:	81 e0       	ldi	r24, 0x01	; 1
    211e:	60 e0       	ldi	r22, 0x00	; 0
    2120:	41 e0       	ldi	r20, 0x01	; 1
    2122:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	61 e0       	ldi	r22, 0x01	; 1
    212a:	41 e0       	ldi	r20, 0x01	; 1
    212c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    2130:	81 e0       	ldi	r24, 0x01	; 1
    2132:	62 e0       	ldi	r22, 0x02	; 2
    2134:	41 e0       	ldi	r20, 0x01	; 1
    2136:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    213a:	81 e0       	ldi	r24, 0x01	; 1
    213c:	64 e0       	ldi	r22, 0x04	; 4
    213e:	40 e0       	ldi	r20, 0x00	; 0
    2140:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2144:	99 c2       	rjmp	.+1330   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 8:						  
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    2146:	81 e0       	ldi	r24, 0x01	; 1
    2148:	60 e0       	ldi	r22, 0x00	; 0
    214a:	40 e0       	ldi	r20, 0x00	; 0
    214c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2150:	81 e0       	ldi	r24, 0x01	; 1
    2152:	61 e0       	ldi	r22, 0x01	; 1
    2154:	40 e0       	ldi	r20, 0x00	; 0
    2156:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    215a:	81 e0       	ldi	r24, 0x01	; 1
    215c:	62 e0       	ldi	r22, 0x02	; 2
    215e:	40 e0       	ldi	r20, 0x00	; 0
    2160:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    2164:	81 e0       	ldi	r24, 0x01	; 1
    2166:	64 e0       	ldi	r22, 0x04	; 4
    2168:	41 e0       	ldi	r20, 0x01	; 1
    216a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    216e:	84 c2       	rjmp	.+1288   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				break;
			case 9:						  
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2170:	81 e0       	ldi	r24, 0x01	; 1
    2172:	60 e0       	ldi	r22, 0x00	; 0
    2174:	41 e0       	ldi	r20, 0x01	; 1
    2176:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	61 e0       	ldi	r22, 0x01	; 1
    217e:	40 e0       	ldi	r20, 0x00	; 0
    2180:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    2184:	81 e0       	ldi	r24, 0x01	; 1
    2186:	62 e0       	ldi	r22, 0x02	; 2
    2188:	40 e0       	ldi	r20, 0x00	; 0
    218a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    218e:	81 e0       	ldi	r24, 0x01	; 1
    2190:	64 e0       	ldi	r22, 0x04	; 4
    2192:	41 e0       	ldi	r20, 0x01	; 1
    2194:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2198:	6f c2       	rjmp	.+1246   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
			default:
				break;
			}
			break;
			case HUNDREDS_T:
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN6, DIO_u8_LOW);
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	66 e0       	ldi	r22, 0x06	; 6
    219e:	40 e0       	ldi	r20, 0x00	; 0
    21a0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN5, DIO_u8_HIGH);
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	65 e0       	ldi	r22, 0x05	; 5
    21a8:	41 e0       	ldi	r20, 0x01	; 1
    21aa:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN2, DIO_u8_LOW);
    21ae:	80 e0       	ldi	r24, 0x00	; 0
    21b0:	62 e0       	ldi	r22, 0x02	; 2
    21b2:	40 e0       	ldi	r20, 0x00	; 0
    21b4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_LOW);
    21b8:	80 e0       	ldi	r24, 0x00	; 0
    21ba:	63 e0       	ldi	r22, 0x03	; 3
    21bc:	40 e0       	ldi	r20, 0x00	; 0
    21be:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				switch(Copy_u8Number)
    21c2:	89 81       	ldd	r24, Y+1	; 0x01
    21c4:	28 2f       	mov	r18, r24
    21c6:	30 e0       	ldi	r19, 0x00	; 0
    21c8:	3e 83       	std	Y+6, r19	; 0x06
    21ca:	2d 83       	std	Y+5, r18	; 0x05
    21cc:	8d 81       	ldd	r24, Y+5	; 0x05
    21ce:	9e 81       	ldd	r25, Y+6	; 0x06
    21d0:	84 30       	cpi	r24, 0x04	; 4
    21d2:	91 05       	cpc	r25, r1
    21d4:	09 f4       	brne	.+2      	; 0x21d8 <HSSD_voidDisplayDigitSSD+0x57c>
    21d6:	9b c0       	rjmp	.+310    	; 0x230e <HSSD_voidDisplayDigitSSD+0x6b2>
    21d8:	2d 81       	ldd	r18, Y+5	; 0x05
    21da:	3e 81       	ldd	r19, Y+6	; 0x06
    21dc:	25 30       	cpi	r18, 0x05	; 5
    21de:	31 05       	cpc	r19, r1
    21e0:	ec f4       	brge	.+58     	; 0x221c <HSSD_voidDisplayDigitSSD+0x5c0>
    21e2:	8d 81       	ldd	r24, Y+5	; 0x05
    21e4:	9e 81       	ldd	r25, Y+6	; 0x06
    21e6:	81 30       	cpi	r24, 0x01	; 1
    21e8:	91 05       	cpc	r25, r1
    21ea:	09 f4       	brne	.+2      	; 0x21ee <HSSD_voidDisplayDigitSSD+0x592>
    21ec:	51 c0       	rjmp	.+162    	; 0x2290 <HSSD_voidDisplayDigitSSD+0x634>
    21ee:	2d 81       	ldd	r18, Y+5	; 0x05
    21f0:	3e 81       	ldd	r19, Y+6	; 0x06
    21f2:	22 30       	cpi	r18, 0x02	; 2
    21f4:	31 05       	cpc	r19, r1
    21f6:	2c f4       	brge	.+10     	; 0x2202 <HSSD_voidDisplayDigitSSD+0x5a6>
    21f8:	8d 81       	ldd	r24, Y+5	; 0x05
    21fa:	9e 81       	ldd	r25, Y+6	; 0x06
    21fc:	00 97       	sbiw	r24, 0x00	; 0
    21fe:	99 f1       	breq	.+102    	; 0x2266 <HSSD_voidDisplayDigitSSD+0x60a>
    2200:	3b c2       	rjmp	.+1142   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    2202:	2d 81       	ldd	r18, Y+5	; 0x05
    2204:	3e 81       	ldd	r19, Y+6	; 0x06
    2206:	22 30       	cpi	r18, 0x02	; 2
    2208:	31 05       	cpc	r19, r1
    220a:	09 f4       	brne	.+2      	; 0x220e <HSSD_voidDisplayDigitSSD+0x5b2>
    220c:	56 c0       	rjmp	.+172    	; 0x22ba <HSSD_voidDisplayDigitSSD+0x65e>
    220e:	8d 81       	ldd	r24, Y+5	; 0x05
    2210:	9e 81       	ldd	r25, Y+6	; 0x06
    2212:	83 30       	cpi	r24, 0x03	; 3
    2214:	91 05       	cpc	r25, r1
    2216:	09 f4       	brne	.+2      	; 0x221a <HSSD_voidDisplayDigitSSD+0x5be>
    2218:	65 c0       	rjmp	.+202    	; 0x22e4 <HSSD_voidDisplayDigitSSD+0x688>
    221a:	2e c2       	rjmp	.+1116   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    221c:	2d 81       	ldd	r18, Y+5	; 0x05
    221e:	3e 81       	ldd	r19, Y+6	; 0x06
    2220:	27 30       	cpi	r18, 0x07	; 7
    2222:	31 05       	cpc	r19, r1
    2224:	09 f4       	brne	.+2      	; 0x2228 <HSSD_voidDisplayDigitSSD+0x5cc>
    2226:	b2 c0       	rjmp	.+356    	; 0x238c <HSSD_voidDisplayDigitSSD+0x730>
    2228:	8d 81       	ldd	r24, Y+5	; 0x05
    222a:	9e 81       	ldd	r25, Y+6	; 0x06
    222c:	88 30       	cpi	r24, 0x08	; 8
    222e:	91 05       	cpc	r25, r1
    2230:	6c f4       	brge	.+26     	; 0x224c <HSSD_voidDisplayDigitSSD+0x5f0>
    2232:	2d 81       	ldd	r18, Y+5	; 0x05
    2234:	3e 81       	ldd	r19, Y+6	; 0x06
    2236:	25 30       	cpi	r18, 0x05	; 5
    2238:	31 05       	cpc	r19, r1
    223a:	09 f4       	brne	.+2      	; 0x223e <HSSD_voidDisplayDigitSSD+0x5e2>
    223c:	7d c0       	rjmp	.+250    	; 0x2338 <HSSD_voidDisplayDigitSSD+0x6dc>
    223e:	8d 81       	ldd	r24, Y+5	; 0x05
    2240:	9e 81       	ldd	r25, Y+6	; 0x06
    2242:	86 30       	cpi	r24, 0x06	; 6
    2244:	91 05       	cpc	r25, r1
    2246:	09 f4       	brne	.+2      	; 0x224a <HSSD_voidDisplayDigitSSD+0x5ee>
    2248:	8c c0       	rjmp	.+280    	; 0x2362 <HSSD_voidDisplayDigitSSD+0x706>
    224a:	16 c2       	rjmp	.+1068   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    224c:	2d 81       	ldd	r18, Y+5	; 0x05
    224e:	3e 81       	ldd	r19, Y+6	; 0x06
    2250:	28 30       	cpi	r18, 0x08	; 8
    2252:	31 05       	cpc	r19, r1
    2254:	09 f4       	brne	.+2      	; 0x2258 <HSSD_voidDisplayDigitSSD+0x5fc>
    2256:	af c0       	rjmp	.+350    	; 0x23b6 <HSSD_voidDisplayDigitSSD+0x75a>
    2258:	8d 81       	ldd	r24, Y+5	; 0x05
    225a:	9e 81       	ldd	r25, Y+6	; 0x06
    225c:	89 30       	cpi	r24, 0x09	; 9
    225e:	91 05       	cpc	r25, r1
    2260:	09 f4       	brne	.+2      	; 0x2264 <HSSD_voidDisplayDigitSSD+0x608>
    2262:	be c0       	rjmp	.+380    	; 0x23e0 <HSSD_voidDisplayDigitSSD+0x784>
    2264:	09 c2       	rjmp	.+1042   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				{
				case 0:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    2266:	81 e0       	ldi	r24, 0x01	; 1
    2268:	60 e0       	ldi	r22, 0x00	; 0
    226a:	40 e0       	ldi	r20, 0x00	; 0
    226c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2270:	81 e0       	ldi	r24, 0x01	; 1
    2272:	61 e0       	ldi	r22, 0x01	; 1
    2274:	40 e0       	ldi	r20, 0x00	; 0
    2276:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    227a:	81 e0       	ldi	r24, 0x01	; 1
    227c:	62 e0       	ldi	r22, 0x02	; 2
    227e:	40 e0       	ldi	r20, 0x00	; 0
    2280:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2284:	81 e0       	ldi	r24, 0x01	; 1
    2286:	64 e0       	ldi	r22, 0x04	; 4
    2288:	40 e0       	ldi	r20, 0x00	; 0
    228a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    228e:	f4 c1       	rjmp	.+1000   	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 1:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2290:	81 e0       	ldi	r24, 0x01	; 1
    2292:	60 e0       	ldi	r22, 0x00	; 0
    2294:	41 e0       	ldi	r20, 0x01	; 1
    2296:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    229a:	81 e0       	ldi	r24, 0x01	; 1
    229c:	61 e0       	ldi	r22, 0x01	; 1
    229e:	40 e0       	ldi	r20, 0x00	; 0
    22a0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    22a4:	81 e0       	ldi	r24, 0x01	; 1
    22a6:	62 e0       	ldi	r22, 0x02	; 2
    22a8:	40 e0       	ldi	r20, 0x00	; 0
    22aa:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    22ae:	81 e0       	ldi	r24, 0x01	; 1
    22b0:	64 e0       	ldi	r22, 0x04	; 4
    22b2:	40 e0       	ldi	r20, 0x00	; 0
    22b4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    22b8:	df c1       	rjmp	.+958    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 2:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    22ba:	81 e0       	ldi	r24, 0x01	; 1
    22bc:	60 e0       	ldi	r22, 0x00	; 0
    22be:	40 e0       	ldi	r20, 0x00	; 0
    22c0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	61 e0       	ldi	r22, 0x01	; 1
    22c8:	41 e0       	ldi	r20, 0x01	; 1
    22ca:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    22ce:	81 e0       	ldi	r24, 0x01	; 1
    22d0:	62 e0       	ldi	r22, 0x02	; 2
    22d2:	40 e0       	ldi	r20, 0x00	; 0
    22d4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    22d8:	81 e0       	ldi	r24, 0x01	; 1
    22da:	64 e0       	ldi	r22, 0x04	; 4
    22dc:	40 e0       	ldi	r20, 0x00	; 0
    22de:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    22e2:	ca c1       	rjmp	.+916    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 3:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	60 e0       	ldi	r22, 0x00	; 0
    22e8:	41 e0       	ldi	r20, 0x01	; 1
    22ea:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    22ee:	81 e0       	ldi	r24, 0x01	; 1
    22f0:	61 e0       	ldi	r22, 0x01	; 1
    22f2:	41 e0       	ldi	r20, 0x01	; 1
    22f4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	62 e0       	ldi	r22, 0x02	; 2
    22fc:	40 e0       	ldi	r20, 0x00	; 0
    22fe:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2302:	81 e0       	ldi	r24, 0x01	; 1
    2304:	64 e0       	ldi	r22, 0x04	; 4
    2306:	40 e0       	ldi	r20, 0x00	; 0
    2308:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    230c:	b5 c1       	rjmp	.+874    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 4:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    230e:	81 e0       	ldi	r24, 0x01	; 1
    2310:	60 e0       	ldi	r22, 0x00	; 0
    2312:	40 e0       	ldi	r20, 0x00	; 0
    2314:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2318:	81 e0       	ldi	r24, 0x01	; 1
    231a:	61 e0       	ldi	r22, 0x01	; 1
    231c:	40 e0       	ldi	r20, 0x00	; 0
    231e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    2322:	81 e0       	ldi	r24, 0x01	; 1
    2324:	62 e0       	ldi	r22, 0x02	; 2
    2326:	41 e0       	ldi	r20, 0x01	; 1
    2328:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    232c:	81 e0       	ldi	r24, 0x01	; 1
    232e:	64 e0       	ldi	r22, 0x04	; 4
    2330:	40 e0       	ldi	r20, 0x00	; 0
    2332:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2336:	a0 c1       	rjmp	.+832    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 5:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2338:	81 e0       	ldi	r24, 0x01	; 1
    233a:	60 e0       	ldi	r22, 0x00	; 0
    233c:	41 e0       	ldi	r20, 0x01	; 1
    233e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2342:	81 e0       	ldi	r24, 0x01	; 1
    2344:	61 e0       	ldi	r22, 0x01	; 1
    2346:	40 e0       	ldi	r20, 0x00	; 0
    2348:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    234c:	81 e0       	ldi	r24, 0x01	; 1
    234e:	62 e0       	ldi	r22, 0x02	; 2
    2350:	41 e0       	ldi	r20, 0x01	; 1
    2352:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2356:	81 e0       	ldi	r24, 0x01	; 1
    2358:	64 e0       	ldi	r22, 0x04	; 4
    235a:	40 e0       	ldi	r20, 0x00	; 0
    235c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2360:	8b c1       	rjmp	.+790    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 6:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    2362:	81 e0       	ldi	r24, 0x01	; 1
    2364:	60 e0       	ldi	r22, 0x00	; 0
    2366:	40 e0       	ldi	r20, 0x00	; 0
    2368:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	61 e0       	ldi	r22, 0x01	; 1
    2370:	41 e0       	ldi	r20, 0x01	; 1
    2372:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    2376:	81 e0       	ldi	r24, 0x01	; 1
    2378:	62 e0       	ldi	r22, 0x02	; 2
    237a:	41 e0       	ldi	r20, 0x01	; 1
    237c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2380:	81 e0       	ldi	r24, 0x01	; 1
    2382:	64 e0       	ldi	r22, 0x04	; 4
    2384:	40 e0       	ldi	r20, 0x00	; 0
    2386:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    238a:	76 c1       	rjmp	.+748    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 7:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    238c:	81 e0       	ldi	r24, 0x01	; 1
    238e:	60 e0       	ldi	r22, 0x00	; 0
    2390:	41 e0       	ldi	r20, 0x01	; 1
    2392:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    2396:	81 e0       	ldi	r24, 0x01	; 1
    2398:	61 e0       	ldi	r22, 0x01	; 1
    239a:	41 e0       	ldi	r20, 0x01	; 1
    239c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    23a0:	81 e0       	ldi	r24, 0x01	; 1
    23a2:	62 e0       	ldi	r22, 0x02	; 2
    23a4:	41 e0       	ldi	r20, 0x01	; 1
    23a6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	64 e0       	ldi	r22, 0x04	; 4
    23ae:	40 e0       	ldi	r20, 0x00	; 0
    23b0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    23b4:	61 c1       	rjmp	.+706    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 8:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    23b6:	81 e0       	ldi	r24, 0x01	; 1
    23b8:	60 e0       	ldi	r22, 0x00	; 0
    23ba:	40 e0       	ldi	r20, 0x00	; 0
    23bc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    23c0:	81 e0       	ldi	r24, 0x01	; 1
    23c2:	61 e0       	ldi	r22, 0x01	; 1
    23c4:	40 e0       	ldi	r20, 0x00	; 0
    23c6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    23ca:	81 e0       	ldi	r24, 0x01	; 1
    23cc:	62 e0       	ldi	r22, 0x02	; 2
    23ce:	40 e0       	ldi	r20, 0x00	; 0
    23d0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    23d4:	81 e0       	ldi	r24, 0x01	; 1
    23d6:	64 e0       	ldi	r22, 0x04	; 4
    23d8:	41 e0       	ldi	r20, 0x01	; 1
    23da:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    23de:	4c c1       	rjmp	.+664    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					break;
				case 9:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    23e0:	81 e0       	ldi	r24, 0x01	; 1
    23e2:	60 e0       	ldi	r22, 0x00	; 0
    23e4:	41 e0       	ldi	r20, 0x01	; 1
    23e6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    23ea:	81 e0       	ldi	r24, 0x01	; 1
    23ec:	61 e0       	ldi	r22, 0x01	; 1
    23ee:	40 e0       	ldi	r20, 0x00	; 0
    23f0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    23f4:	81 e0       	ldi	r24, 0x01	; 1
    23f6:	62 e0       	ldi	r22, 0x02	; 2
    23f8:	40 e0       	ldi	r20, 0x00	; 0
    23fa:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    23fe:	81 e0       	ldi	r24, 0x01	; 1
    2400:	64 e0       	ldi	r22, 0x04	; 4
    2402:	41 e0       	ldi	r20, 0x01	; 1
    2404:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2408:	37 c1       	rjmp	.+622    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
				default:
					break;
				}
				break;
				case THOUSANDS_T:
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN6, DIO_u8_HIGH);
    240a:	81 e0       	ldi	r24, 0x01	; 1
    240c:	66 e0       	ldi	r22, 0x06	; 6
    240e:	41 e0       	ldi	r20, 0x01	; 1
    2410:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN5, DIO_u8_LOW);
    2414:	81 e0       	ldi	r24, 0x01	; 1
    2416:	65 e0       	ldi	r22, 0x05	; 5
    2418:	40 e0       	ldi	r20, 0x00	; 0
    241a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN2, DIO_u8_LOW);
    241e:	80 e0       	ldi	r24, 0x00	; 0
    2420:	62 e0       	ldi	r22, 0x02	; 2
    2422:	40 e0       	ldi	r20, 0x00	; 0
    2424:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_LOW);
    2428:	80 e0       	ldi	r24, 0x00	; 0
    242a:	63 e0       	ldi	r22, 0x03	; 3
    242c:	40 e0       	ldi	r20, 0x00	; 0
    242e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					switch(Copy_u8Number)
    2432:	89 81       	ldd	r24, Y+1	; 0x01
    2434:	28 2f       	mov	r18, r24
    2436:	30 e0       	ldi	r19, 0x00	; 0
    2438:	3c 83       	std	Y+4, r19	; 0x04
    243a:	2b 83       	std	Y+3, r18	; 0x03
    243c:	8b 81       	ldd	r24, Y+3	; 0x03
    243e:	9c 81       	ldd	r25, Y+4	; 0x04
    2440:	84 30       	cpi	r24, 0x04	; 4
    2442:	91 05       	cpc	r25, r1
    2444:	09 f4       	brne	.+2      	; 0x2448 <HSSD_voidDisplayDigitSSD+0x7ec>
    2446:	9b c0       	rjmp	.+310    	; 0x257e <HSSD_voidDisplayDigitSSD+0x922>
    2448:	2b 81       	ldd	r18, Y+3	; 0x03
    244a:	3c 81       	ldd	r19, Y+4	; 0x04
    244c:	25 30       	cpi	r18, 0x05	; 5
    244e:	31 05       	cpc	r19, r1
    2450:	ec f4       	brge	.+58     	; 0x248c <HSSD_voidDisplayDigitSSD+0x830>
    2452:	8b 81       	ldd	r24, Y+3	; 0x03
    2454:	9c 81       	ldd	r25, Y+4	; 0x04
    2456:	81 30       	cpi	r24, 0x01	; 1
    2458:	91 05       	cpc	r25, r1
    245a:	09 f4       	brne	.+2      	; 0x245e <HSSD_voidDisplayDigitSSD+0x802>
    245c:	51 c0       	rjmp	.+162    	; 0x2500 <HSSD_voidDisplayDigitSSD+0x8a4>
    245e:	2b 81       	ldd	r18, Y+3	; 0x03
    2460:	3c 81       	ldd	r19, Y+4	; 0x04
    2462:	22 30       	cpi	r18, 0x02	; 2
    2464:	31 05       	cpc	r19, r1
    2466:	2c f4       	brge	.+10     	; 0x2472 <HSSD_voidDisplayDigitSSD+0x816>
    2468:	8b 81       	ldd	r24, Y+3	; 0x03
    246a:	9c 81       	ldd	r25, Y+4	; 0x04
    246c:	00 97       	sbiw	r24, 0x00	; 0
    246e:	99 f1       	breq	.+102    	; 0x24d6 <HSSD_voidDisplayDigitSSD+0x87a>
    2470:	03 c1       	rjmp	.+518    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    2472:	2b 81       	ldd	r18, Y+3	; 0x03
    2474:	3c 81       	ldd	r19, Y+4	; 0x04
    2476:	22 30       	cpi	r18, 0x02	; 2
    2478:	31 05       	cpc	r19, r1
    247a:	09 f4       	brne	.+2      	; 0x247e <HSSD_voidDisplayDigitSSD+0x822>
    247c:	56 c0       	rjmp	.+172    	; 0x252a <HSSD_voidDisplayDigitSSD+0x8ce>
    247e:	8b 81       	ldd	r24, Y+3	; 0x03
    2480:	9c 81       	ldd	r25, Y+4	; 0x04
    2482:	83 30       	cpi	r24, 0x03	; 3
    2484:	91 05       	cpc	r25, r1
    2486:	09 f4       	brne	.+2      	; 0x248a <HSSD_voidDisplayDigitSSD+0x82e>
    2488:	65 c0       	rjmp	.+202    	; 0x2554 <HSSD_voidDisplayDigitSSD+0x8f8>
    248a:	f6 c0       	rjmp	.+492    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    248c:	2b 81       	ldd	r18, Y+3	; 0x03
    248e:	3c 81       	ldd	r19, Y+4	; 0x04
    2490:	27 30       	cpi	r18, 0x07	; 7
    2492:	31 05       	cpc	r19, r1
    2494:	09 f4       	brne	.+2      	; 0x2498 <HSSD_voidDisplayDigitSSD+0x83c>
    2496:	b2 c0       	rjmp	.+356    	; 0x25fc <HSSD_voidDisplayDigitSSD+0x9a0>
    2498:	8b 81       	ldd	r24, Y+3	; 0x03
    249a:	9c 81       	ldd	r25, Y+4	; 0x04
    249c:	88 30       	cpi	r24, 0x08	; 8
    249e:	91 05       	cpc	r25, r1
    24a0:	6c f4       	brge	.+26     	; 0x24bc <HSSD_voidDisplayDigitSSD+0x860>
    24a2:	2b 81       	ldd	r18, Y+3	; 0x03
    24a4:	3c 81       	ldd	r19, Y+4	; 0x04
    24a6:	25 30       	cpi	r18, 0x05	; 5
    24a8:	31 05       	cpc	r19, r1
    24aa:	09 f4       	brne	.+2      	; 0x24ae <HSSD_voidDisplayDigitSSD+0x852>
    24ac:	7d c0       	rjmp	.+250    	; 0x25a8 <HSSD_voidDisplayDigitSSD+0x94c>
    24ae:	8b 81       	ldd	r24, Y+3	; 0x03
    24b0:	9c 81       	ldd	r25, Y+4	; 0x04
    24b2:	86 30       	cpi	r24, 0x06	; 6
    24b4:	91 05       	cpc	r25, r1
    24b6:	09 f4       	brne	.+2      	; 0x24ba <HSSD_voidDisplayDigitSSD+0x85e>
    24b8:	8c c0       	rjmp	.+280    	; 0x25d2 <HSSD_voidDisplayDigitSSD+0x976>
    24ba:	de c0       	rjmp	.+444    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
    24bc:	2b 81       	ldd	r18, Y+3	; 0x03
    24be:	3c 81       	ldd	r19, Y+4	; 0x04
    24c0:	28 30       	cpi	r18, 0x08	; 8
    24c2:	31 05       	cpc	r19, r1
    24c4:	09 f4       	brne	.+2      	; 0x24c8 <HSSD_voidDisplayDigitSSD+0x86c>
    24c6:	af c0       	rjmp	.+350    	; 0x2626 <HSSD_voidDisplayDigitSSD+0x9ca>
    24c8:	8b 81       	ldd	r24, Y+3	; 0x03
    24ca:	9c 81       	ldd	r25, Y+4	; 0x04
    24cc:	89 30       	cpi	r24, 0x09	; 9
    24ce:	91 05       	cpc	r25, r1
    24d0:	09 f4       	brne	.+2      	; 0x24d4 <HSSD_voidDisplayDigitSSD+0x878>
    24d2:	be c0       	rjmp	.+380    	; 0x2650 <HSSD_voidDisplayDigitSSD+0x9f4>
    24d4:	d1 c0       	rjmp	.+418    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
					{
					case 0:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    24d6:	81 e0       	ldi	r24, 0x01	; 1
    24d8:	60 e0       	ldi	r22, 0x00	; 0
    24da:	40 e0       	ldi	r20, 0x00	; 0
    24dc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    24e0:	81 e0       	ldi	r24, 0x01	; 1
    24e2:	61 e0       	ldi	r22, 0x01	; 1
    24e4:	40 e0       	ldi	r20, 0x00	; 0
    24e6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    24ea:	81 e0       	ldi	r24, 0x01	; 1
    24ec:	62 e0       	ldi	r22, 0x02	; 2
    24ee:	40 e0       	ldi	r20, 0x00	; 0
    24f0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    24f4:	81 e0       	ldi	r24, 0x01	; 1
    24f6:	64 e0       	ldi	r22, 0x04	; 4
    24f8:	40 e0       	ldi	r20, 0x00	; 0
    24fa:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    24fe:	bc c0       	rjmp	.+376    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 1:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2500:	81 e0       	ldi	r24, 0x01	; 1
    2502:	60 e0       	ldi	r22, 0x00	; 0
    2504:	41 e0       	ldi	r20, 0x01	; 1
    2506:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    250a:	81 e0       	ldi	r24, 0x01	; 1
    250c:	61 e0       	ldi	r22, 0x01	; 1
    250e:	40 e0       	ldi	r20, 0x00	; 0
    2510:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    2514:	81 e0       	ldi	r24, 0x01	; 1
    2516:	62 e0       	ldi	r22, 0x02	; 2
    2518:	40 e0       	ldi	r20, 0x00	; 0
    251a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    251e:	81 e0       	ldi	r24, 0x01	; 1
    2520:	64 e0       	ldi	r22, 0x04	; 4
    2522:	40 e0       	ldi	r20, 0x00	; 0
    2524:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2528:	a7 c0       	rjmp	.+334    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 2:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    252a:	81 e0       	ldi	r24, 0x01	; 1
    252c:	60 e0       	ldi	r22, 0x00	; 0
    252e:	40 e0       	ldi	r20, 0x00	; 0
    2530:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    2534:	81 e0       	ldi	r24, 0x01	; 1
    2536:	61 e0       	ldi	r22, 0x01	; 1
    2538:	41 e0       	ldi	r20, 0x01	; 1
    253a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    253e:	81 e0       	ldi	r24, 0x01	; 1
    2540:	62 e0       	ldi	r22, 0x02	; 2
    2542:	40 e0       	ldi	r20, 0x00	; 0
    2544:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2548:	81 e0       	ldi	r24, 0x01	; 1
    254a:	64 e0       	ldi	r22, 0x04	; 4
    254c:	40 e0       	ldi	r20, 0x00	; 0
    254e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2552:	92 c0       	rjmp	.+292    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 3:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2554:	81 e0       	ldi	r24, 0x01	; 1
    2556:	60 e0       	ldi	r22, 0x00	; 0
    2558:	41 e0       	ldi	r20, 0x01	; 1
    255a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    255e:	81 e0       	ldi	r24, 0x01	; 1
    2560:	61 e0       	ldi	r22, 0x01	; 1
    2562:	41 e0       	ldi	r20, 0x01	; 1
    2564:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    2568:	81 e0       	ldi	r24, 0x01	; 1
    256a:	62 e0       	ldi	r22, 0x02	; 2
    256c:	40 e0       	ldi	r20, 0x00	; 0
    256e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    2572:	81 e0       	ldi	r24, 0x01	; 1
    2574:	64 e0       	ldi	r22, 0x04	; 4
    2576:	40 e0       	ldi	r20, 0x00	; 0
    2578:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    257c:	7d c0       	rjmp	.+250    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 4:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    257e:	81 e0       	ldi	r24, 0x01	; 1
    2580:	60 e0       	ldi	r22, 0x00	; 0
    2582:	40 e0       	ldi	r20, 0x00	; 0
    2584:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2588:	81 e0       	ldi	r24, 0x01	; 1
    258a:	61 e0       	ldi	r22, 0x01	; 1
    258c:	40 e0       	ldi	r20, 0x00	; 0
    258e:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    2592:	81 e0       	ldi	r24, 0x01	; 1
    2594:	62 e0       	ldi	r22, 0x02	; 2
    2596:	41 e0       	ldi	r20, 0x01	; 1
    2598:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	64 e0       	ldi	r22, 0x04	; 4
    25a0:	40 e0       	ldi	r20, 0x00	; 0
    25a2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    25a6:	68 c0       	rjmp	.+208    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 5:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    25a8:	81 e0       	ldi	r24, 0x01	; 1
    25aa:	60 e0       	ldi	r22, 0x00	; 0
    25ac:	41 e0       	ldi	r20, 0x01	; 1
    25ae:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    25b2:	81 e0       	ldi	r24, 0x01	; 1
    25b4:	61 e0       	ldi	r22, 0x01	; 1
    25b6:	40 e0       	ldi	r20, 0x00	; 0
    25b8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    25bc:	81 e0       	ldi	r24, 0x01	; 1
    25be:	62 e0       	ldi	r22, 0x02	; 2
    25c0:	41 e0       	ldi	r20, 0x01	; 1
    25c2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    25c6:	81 e0       	ldi	r24, 0x01	; 1
    25c8:	64 e0       	ldi	r22, 0x04	; 4
    25ca:	40 e0       	ldi	r20, 0x00	; 0
    25cc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    25d0:	53 c0       	rjmp	.+166    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 6:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    25d2:	81 e0       	ldi	r24, 0x01	; 1
    25d4:	60 e0       	ldi	r22, 0x00	; 0
    25d6:	40 e0       	ldi	r20, 0x00	; 0
    25d8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    25dc:	81 e0       	ldi	r24, 0x01	; 1
    25de:	61 e0       	ldi	r22, 0x01	; 1
    25e0:	41 e0       	ldi	r20, 0x01	; 1
    25e2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    25e6:	81 e0       	ldi	r24, 0x01	; 1
    25e8:	62 e0       	ldi	r22, 0x02	; 2
    25ea:	41 e0       	ldi	r20, 0x01	; 1
    25ec:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    25f0:	81 e0       	ldi	r24, 0x01	; 1
    25f2:	64 e0       	ldi	r22, 0x04	; 4
    25f4:	40 e0       	ldi	r20, 0x00	; 0
    25f6:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    25fa:	3e c0       	rjmp	.+124    	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 7:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    25fc:	81 e0       	ldi	r24, 0x01	; 1
    25fe:	60 e0       	ldi	r22, 0x00	; 0
    2600:	41 e0       	ldi	r20, 0x01	; 1
    2602:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_HIGH);
    2606:	81 e0       	ldi	r24, 0x01	; 1
    2608:	61 e0       	ldi	r22, 0x01	; 1
    260a:	41 e0       	ldi	r20, 0x01	; 1
    260c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_HIGH);
    2610:	81 e0       	ldi	r24, 0x01	; 1
    2612:	62 e0       	ldi	r22, 0x02	; 2
    2614:	41 e0       	ldi	r20, 0x01	; 1
    2616:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_LOW);
    261a:	81 e0       	ldi	r24, 0x01	; 1
    261c:	64 e0       	ldi	r22, 0x04	; 4
    261e:	40 e0       	ldi	r20, 0x00	; 0
    2620:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2624:	29 c0       	rjmp	.+82     	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 8:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_LOW);
    2626:	81 e0       	ldi	r24, 0x01	; 1
    2628:	60 e0       	ldi	r22, 0x00	; 0
    262a:	40 e0       	ldi	r20, 0x00	; 0
    262c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    2630:	81 e0       	ldi	r24, 0x01	; 1
    2632:	61 e0       	ldi	r22, 0x01	; 1
    2634:	40 e0       	ldi	r20, 0x00	; 0
    2636:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    263a:	81 e0       	ldi	r24, 0x01	; 1
    263c:	62 e0       	ldi	r22, 0x02	; 2
    263e:	40 e0       	ldi	r20, 0x00	; 0
    2640:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    2644:	81 e0       	ldi	r24, 0x01	; 1
    2646:	64 e0       	ldi	r22, 0x04	; 4
    2648:	41 e0       	ldi	r20, 0x01	; 1
    264a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    264e:	14 c0       	rjmp	.+40     	; 0x2678 <HSSD_voidDisplayDigitSSD+0xa1c>
						break;
					case 9:
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN0, DIO_u8_HIGH);
    2650:	81 e0       	ldi	r24, 0x01	; 1
    2652:	60 e0       	ldi	r22, 0x00	; 0
    2654:	41 e0       	ldi	r20, 0x01	; 1
    2656:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN1, DIO_u8_LOW);
    265a:	81 e0       	ldi	r24, 0x01	; 1
    265c:	61 e0       	ldi	r22, 0x01	; 1
    265e:	40 e0       	ldi	r20, 0x00	; 0
    2660:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN2, DIO_u8_LOW);
    2664:	81 e0       	ldi	r24, 0x01	; 1
    2666:	62 e0       	ldi	r22, 0x02	; 2
    2668:	40 e0       	ldi	r20, 0x00	; 0
    266a:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
						MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN4, DIO_u8_HIGH);
    266e:	81 e0       	ldi	r24, 0x01	; 1
    2670:	64 e0       	ldi	r22, 0x04	; 4
    2672:	41 e0       	ldi	r20, 0x01	; 1
    2674:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
					}
					break;
					default:
						break;
	}
}
    2678:	2c 96       	adiw	r28, 0x0c	; 12
    267a:	0f b6       	in	r0, 0x3f	; 63
    267c:	f8 94       	cli
    267e:	de bf       	out	0x3e, r29	; 62
    2680:	0f be       	out	0x3f, r0	; 63
    2682:	cd bf       	out	0x3d, r28	; 61
    2684:	cf 91       	pop	r28
    2686:	df 91       	pop	r29
    2688:	08 95       	ret

0000268a <HSSD_voidDisplaySSD>:

void HSSD_voidDisplaySSD(u16 Copy_u16FullNumber)
{
    268a:	df 93       	push	r29
    268c:	cf 93       	push	r28
    268e:	cd b7       	in	r28, 0x3d	; 61
    2690:	de b7       	in	r29, 0x3e	; 62
    2692:	a1 97       	sbiw	r28, 0x21	; 33
    2694:	0f b6       	in	r0, 0x3f	; 63
    2696:	f8 94       	cli
    2698:	de bf       	out	0x3e, r29	; 62
    269a:	0f be       	out	0x3f, r0	; 63
    269c:	cd bf       	out	0x3d, r28	; 61
    269e:	99 a3       	std	Y+33, r25	; 0x21
    26a0:	88 a3       	std	Y+32, r24	; 0x20
	for(u8 Local_u8Counter = 0 ; Local_u8Counter < 5 ; Local_u8Counter++)
    26a2:	1f 8e       	std	Y+31, r1	; 0x1f
    26a4:	05 c1       	rjmp	.+522    	; 0x28b0 <HSSD_voidDisplaySSD+0x226>
	{
		//		u8 Local_u8NumberThousands= Copy_u16FullNumber / 1000;
		//		u8 Local_u8NumberHundreds= (Copy_u16FullNumber / 100) % 10;
		u8 Local_u8NumberTens= (Copy_u16FullNumber / 10) % 10;
    26a6:	88 a1       	ldd	r24, Y+32	; 0x20
    26a8:	99 a1       	ldd	r25, Y+33	; 0x21
    26aa:	2a e0       	ldi	r18, 0x0A	; 10
    26ac:	30 e0       	ldi	r19, 0x00	; 0
    26ae:	b9 01       	movw	r22, r18
    26b0:	0e 94 8f 17 	call	0x2f1e	; 0x2f1e <__udivmodhi4>
    26b4:	cb 01       	movw	r24, r22
    26b6:	2a e0       	ldi	r18, 0x0A	; 10
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	b9 01       	movw	r22, r18
    26bc:	0e 94 8f 17 	call	0x2f1e	; 0x2f1e <__udivmodhi4>
    26c0:	8e 8f       	std	Y+30, r24	; 0x1e
		u8 Local_u8NumberOnes= Copy_u16FullNumber % 10;
    26c2:	88 a1       	ldd	r24, Y+32	; 0x20
    26c4:	99 a1       	ldd	r25, Y+33	; 0x21
    26c6:	2a e0       	ldi	r18, 0x0A	; 10
    26c8:	30 e0       	ldi	r19, 0x00	; 0
    26ca:	b9 01       	movw	r22, r18
    26cc:	0e 94 8f 17 	call	0x2f1e	; 0x2f1e <__udivmodhi4>
    26d0:	8d 8f       	std	Y+29, r24	; 0x1d

		//		HSSD_voidDisplayDigitSSD(Local_u8NumberThousands,THOUSANDS_T);
		//		_delay_ms(1);
		//		HSSD_voidDisplayDigitSSD(Local_u8NumberHundreds,HUNDREDS_T);
		//		_delay_ms(1);
		HSSD_voidDisplayDigitSSD(Local_u8NumberTens,TENS_T);
    26d2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    26d4:	62 e0       	ldi	r22, 0x02	; 2
    26d6:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <HSSD_voidDisplayDigitSSD>
    26da:	80 e0       	ldi	r24, 0x00	; 0
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	a0 e8       	ldi	r26, 0x80	; 128
    26e0:	bf e3       	ldi	r27, 0x3F	; 63
    26e2:	89 8f       	std	Y+25, r24	; 0x19
    26e4:	9a 8f       	std	Y+26, r25	; 0x1a
    26e6:	ab 8f       	std	Y+27, r26	; 0x1b
    26e8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26ea:	69 8d       	ldd	r22, Y+25	; 0x19
    26ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26f2:	20 e0       	ldi	r18, 0x00	; 0
    26f4:	30 e0       	ldi	r19, 0x00	; 0
    26f6:	4a ef       	ldi	r20, 0xFA	; 250
    26f8:	54 e4       	ldi	r21, 0x44	; 68
    26fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26fe:	dc 01       	movw	r26, r24
    2700:	cb 01       	movw	r24, r22
    2702:	8d 8b       	std	Y+21, r24	; 0x15
    2704:	9e 8b       	std	Y+22, r25	; 0x16
    2706:	af 8b       	std	Y+23, r26	; 0x17
    2708:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    270a:	6d 89       	ldd	r22, Y+21	; 0x15
    270c:	7e 89       	ldd	r23, Y+22	; 0x16
    270e:	8f 89       	ldd	r24, Y+23	; 0x17
    2710:	98 8d       	ldd	r25, Y+24	; 0x18
    2712:	20 e0       	ldi	r18, 0x00	; 0
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	40 e8       	ldi	r20, 0x80	; 128
    2718:	5f e3       	ldi	r21, 0x3F	; 63
    271a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    271e:	88 23       	and	r24, r24
    2720:	2c f4       	brge	.+10     	; 0x272c <HSSD_voidDisplaySSD+0xa2>
		__ticks = 1;
    2722:	81 e0       	ldi	r24, 0x01	; 1
    2724:	90 e0       	ldi	r25, 0x00	; 0
    2726:	9c 8b       	std	Y+20, r25	; 0x14
    2728:	8b 8b       	std	Y+19, r24	; 0x13
    272a:	3f c0       	rjmp	.+126    	; 0x27aa <HSSD_voidDisplaySSD+0x120>
	else if (__tmp > 65535)
    272c:	6d 89       	ldd	r22, Y+21	; 0x15
    272e:	7e 89       	ldd	r23, Y+22	; 0x16
    2730:	8f 89       	ldd	r24, Y+23	; 0x17
    2732:	98 8d       	ldd	r25, Y+24	; 0x18
    2734:	20 e0       	ldi	r18, 0x00	; 0
    2736:	3f ef       	ldi	r19, 0xFF	; 255
    2738:	4f e7       	ldi	r20, 0x7F	; 127
    273a:	57 e4       	ldi	r21, 0x47	; 71
    273c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2740:	18 16       	cp	r1, r24
    2742:	4c f5       	brge	.+82     	; 0x2796 <HSSD_voidDisplaySSD+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2744:	69 8d       	ldd	r22, Y+25	; 0x19
    2746:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2748:	8b 8d       	ldd	r24, Y+27	; 0x1b
    274a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    274c:	20 e0       	ldi	r18, 0x00	; 0
    274e:	30 e0       	ldi	r19, 0x00	; 0
    2750:	40 e2       	ldi	r20, 0x20	; 32
    2752:	51 e4       	ldi	r21, 0x41	; 65
    2754:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2758:	dc 01       	movw	r26, r24
    275a:	cb 01       	movw	r24, r22
    275c:	bc 01       	movw	r22, r24
    275e:	cd 01       	movw	r24, r26
    2760:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2764:	dc 01       	movw	r26, r24
    2766:	cb 01       	movw	r24, r22
    2768:	9c 8b       	std	Y+20, r25	; 0x14
    276a:	8b 8b       	std	Y+19, r24	; 0x13
    276c:	0f c0       	rjmp	.+30     	; 0x278c <HSSD_voidDisplaySSD+0x102>
    276e:	88 ec       	ldi	r24, 0xC8	; 200
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	9a 8b       	std	Y+18, r25	; 0x12
    2774:	89 8b       	std	Y+17, r24	; 0x11
    2776:	89 89       	ldd	r24, Y+17	; 0x11
    2778:	9a 89       	ldd	r25, Y+18	; 0x12
    277a:	01 97       	sbiw	r24, 0x01	; 1
    277c:	f1 f7       	brne	.-4      	; 0x277a <HSSD_voidDisplaySSD+0xf0>
    277e:	9a 8b       	std	Y+18, r25	; 0x12
    2780:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2782:	8b 89       	ldd	r24, Y+19	; 0x13
    2784:	9c 89       	ldd	r25, Y+20	; 0x14
    2786:	01 97       	sbiw	r24, 0x01	; 1
    2788:	9c 8b       	std	Y+20, r25	; 0x14
    278a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    278c:	8b 89       	ldd	r24, Y+19	; 0x13
    278e:	9c 89       	ldd	r25, Y+20	; 0x14
    2790:	00 97       	sbiw	r24, 0x00	; 0
    2792:	69 f7       	brne	.-38     	; 0x276e <HSSD_voidDisplaySSD+0xe4>
    2794:	14 c0       	rjmp	.+40     	; 0x27be <HSSD_voidDisplaySSD+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2796:	6d 89       	ldd	r22, Y+21	; 0x15
    2798:	7e 89       	ldd	r23, Y+22	; 0x16
    279a:	8f 89       	ldd	r24, Y+23	; 0x17
    279c:	98 8d       	ldd	r25, Y+24	; 0x18
    279e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27a2:	dc 01       	movw	r26, r24
    27a4:	cb 01       	movw	r24, r22
    27a6:	9c 8b       	std	Y+20, r25	; 0x14
    27a8:	8b 8b       	std	Y+19, r24	; 0x13
    27aa:	8b 89       	ldd	r24, Y+19	; 0x13
    27ac:	9c 89       	ldd	r25, Y+20	; 0x14
    27ae:	98 8b       	std	Y+16, r25	; 0x10
    27b0:	8f 87       	std	Y+15, r24	; 0x0f
    27b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    27b4:	98 89       	ldd	r25, Y+16	; 0x10
    27b6:	01 97       	sbiw	r24, 0x01	; 1
    27b8:	f1 f7       	brne	.-4      	; 0x27b6 <HSSD_voidDisplaySSD+0x12c>
    27ba:	98 8b       	std	Y+16, r25	; 0x10
    27bc:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		HSSD_voidDisplayDigitSSD(Local_u8NumberOnes,ONES_T);
    27be:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27c0:	61 e0       	ldi	r22, 0x01	; 1
    27c2:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <HSSD_voidDisplayDigitSSD>
    27c6:	80 e0       	ldi	r24, 0x00	; 0
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	a0 e8       	ldi	r26, 0x80	; 128
    27cc:	bf e3       	ldi	r27, 0x3F	; 63
    27ce:	8b 87       	std	Y+11, r24	; 0x0b
    27d0:	9c 87       	std	Y+12, r25	; 0x0c
    27d2:	ad 87       	std	Y+13, r26	; 0x0d
    27d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    27d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    27da:	8d 85       	ldd	r24, Y+13	; 0x0d
    27dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    27de:	20 e0       	ldi	r18, 0x00	; 0
    27e0:	30 e0       	ldi	r19, 0x00	; 0
    27e2:	4a ef       	ldi	r20, 0xFA	; 250
    27e4:	54 e4       	ldi	r21, 0x44	; 68
    27e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27ea:	dc 01       	movw	r26, r24
    27ec:	cb 01       	movw	r24, r22
    27ee:	8f 83       	std	Y+7, r24	; 0x07
    27f0:	98 87       	std	Y+8, r25	; 0x08
    27f2:	a9 87       	std	Y+9, r26	; 0x09
    27f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27f6:	6f 81       	ldd	r22, Y+7	; 0x07
    27f8:	78 85       	ldd	r23, Y+8	; 0x08
    27fa:	89 85       	ldd	r24, Y+9	; 0x09
    27fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    27fe:	20 e0       	ldi	r18, 0x00	; 0
    2800:	30 e0       	ldi	r19, 0x00	; 0
    2802:	40 e8       	ldi	r20, 0x80	; 128
    2804:	5f e3       	ldi	r21, 0x3F	; 63
    2806:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    280a:	88 23       	and	r24, r24
    280c:	2c f4       	brge	.+10     	; 0x2818 <HSSD_voidDisplaySSD+0x18e>
		__ticks = 1;
    280e:	81 e0       	ldi	r24, 0x01	; 1
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	9e 83       	std	Y+6, r25	; 0x06
    2814:	8d 83       	std	Y+5, r24	; 0x05
    2816:	3f c0       	rjmp	.+126    	; 0x2896 <HSSD_voidDisplaySSD+0x20c>
	else if (__tmp > 65535)
    2818:	6f 81       	ldd	r22, Y+7	; 0x07
    281a:	78 85       	ldd	r23, Y+8	; 0x08
    281c:	89 85       	ldd	r24, Y+9	; 0x09
    281e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2820:	20 e0       	ldi	r18, 0x00	; 0
    2822:	3f ef       	ldi	r19, 0xFF	; 255
    2824:	4f e7       	ldi	r20, 0x7F	; 127
    2826:	57 e4       	ldi	r21, 0x47	; 71
    2828:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    282c:	18 16       	cp	r1, r24
    282e:	4c f5       	brge	.+82     	; 0x2882 <HSSD_voidDisplaySSD+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2830:	6b 85       	ldd	r22, Y+11	; 0x0b
    2832:	7c 85       	ldd	r23, Y+12	; 0x0c
    2834:	8d 85       	ldd	r24, Y+13	; 0x0d
    2836:	9e 85       	ldd	r25, Y+14	; 0x0e
    2838:	20 e0       	ldi	r18, 0x00	; 0
    283a:	30 e0       	ldi	r19, 0x00	; 0
    283c:	40 e2       	ldi	r20, 0x20	; 32
    283e:	51 e4       	ldi	r21, 0x41	; 65
    2840:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2844:	dc 01       	movw	r26, r24
    2846:	cb 01       	movw	r24, r22
    2848:	bc 01       	movw	r22, r24
    284a:	cd 01       	movw	r24, r26
    284c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2850:	dc 01       	movw	r26, r24
    2852:	cb 01       	movw	r24, r22
    2854:	9e 83       	std	Y+6, r25	; 0x06
    2856:	8d 83       	std	Y+5, r24	; 0x05
    2858:	0f c0       	rjmp	.+30     	; 0x2878 <HSSD_voidDisplaySSD+0x1ee>
    285a:	88 ec       	ldi	r24, 0xC8	; 200
    285c:	90 e0       	ldi	r25, 0x00	; 0
    285e:	9c 83       	std	Y+4, r25	; 0x04
    2860:	8b 83       	std	Y+3, r24	; 0x03
    2862:	8b 81       	ldd	r24, Y+3	; 0x03
    2864:	9c 81       	ldd	r25, Y+4	; 0x04
    2866:	01 97       	sbiw	r24, 0x01	; 1
    2868:	f1 f7       	brne	.-4      	; 0x2866 <HSSD_voidDisplaySSD+0x1dc>
    286a:	9c 83       	std	Y+4, r25	; 0x04
    286c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    286e:	8d 81       	ldd	r24, Y+5	; 0x05
    2870:	9e 81       	ldd	r25, Y+6	; 0x06
    2872:	01 97       	sbiw	r24, 0x01	; 1
    2874:	9e 83       	std	Y+6, r25	; 0x06
    2876:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2878:	8d 81       	ldd	r24, Y+5	; 0x05
    287a:	9e 81       	ldd	r25, Y+6	; 0x06
    287c:	00 97       	sbiw	r24, 0x00	; 0
    287e:	69 f7       	brne	.-38     	; 0x285a <HSSD_voidDisplaySSD+0x1d0>
    2880:	14 c0       	rjmp	.+40     	; 0x28aa <HSSD_voidDisplaySSD+0x220>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2882:	6f 81       	ldd	r22, Y+7	; 0x07
    2884:	78 85       	ldd	r23, Y+8	; 0x08
    2886:	89 85       	ldd	r24, Y+9	; 0x09
    2888:	9a 85       	ldd	r25, Y+10	; 0x0a
    288a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    288e:	dc 01       	movw	r26, r24
    2890:	cb 01       	movw	r24, r22
    2892:	9e 83       	std	Y+6, r25	; 0x06
    2894:	8d 83       	std	Y+5, r24	; 0x05
    2896:	8d 81       	ldd	r24, Y+5	; 0x05
    2898:	9e 81       	ldd	r25, Y+6	; 0x06
    289a:	9a 83       	std	Y+2, r25	; 0x02
    289c:	89 83       	std	Y+1, r24	; 0x01
    289e:	89 81       	ldd	r24, Y+1	; 0x01
    28a0:	9a 81       	ldd	r25, Y+2	; 0x02
    28a2:	01 97       	sbiw	r24, 0x01	; 1
    28a4:	f1 f7       	brne	.-4      	; 0x28a2 <HSSD_voidDisplaySSD+0x218>
    28a6:	9a 83       	std	Y+2, r25	; 0x02
    28a8:	89 83       	std	Y+1, r24	; 0x01
	}
}

void HSSD_voidDisplaySSD(u16 Copy_u16FullNumber)
{
	for(u8 Local_u8Counter = 0 ; Local_u8Counter < 5 ; Local_u8Counter++)
    28aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    28ac:	8f 5f       	subi	r24, 0xFF	; 255
    28ae:	8f 8f       	std	Y+31, r24	; 0x1f
    28b0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    28b2:	85 30       	cpi	r24, 0x05	; 5
    28b4:	08 f4       	brcc	.+2      	; 0x28b8 <HSSD_voidDisplaySSD+0x22e>
    28b6:	f7 ce       	rjmp	.-530    	; 0x26a6 <HSSD_voidDisplaySSD+0x1c>
		_delay_ms(1);
		HSSD_voidDisplayDigitSSD(Local_u8NumberOnes,ONES_T);
		_delay_ms(1);
		//_delay_ms(500);
	}
	MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN6, DIO_u8_LOW);
    28b8:	81 e0       	ldi	r24, 0x01	; 1
    28ba:	66 e0       	ldi	r22, 0x06	; 6
    28bc:	40 e0       	ldi	r20, 0x00	; 0
    28be:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_u8_PORTB ,DIO_u8_PIN5, DIO_u8_LOW);
    28c2:	81 e0       	ldi	r24, 0x01	; 1
    28c4:	65 e0       	ldi	r22, 0x05	; 5
    28c6:	40 e0       	ldi	r20, 0x00	; 0
    28c8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN2, DIO_u8_LOW);
    28cc:	80 e0       	ldi	r24, 0x00	; 0
    28ce:	62 e0       	ldi	r22, 0x02	; 2
    28d0:	40 e0       	ldi	r20, 0x00	; 0
    28d2:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_LOW);
    28d6:	80 e0       	ldi	r24, 0x00	; 0
    28d8:	63 e0       	ldi	r22, 0x03	; 3
    28da:	40 e0       	ldi	r20, 0x00	; 0
    28dc:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
}
    28e0:	a1 96       	adiw	r28, 0x21	; 33
    28e2:	0f b6       	in	r0, 0x3f	; 63
    28e4:	f8 94       	cli
    28e6:	de bf       	out	0x3e, r29	; 62
    28e8:	0f be       	out	0x3f, r0	; 63
    28ea:	cd bf       	out	0x3d, r28	; 61
    28ec:	cf 91       	pop	r28
    28ee:	df 91       	pop	r29
    28f0:	08 95       	ret

000028f2 <HSSD_voidCountDownSSD>:

void HSSD_voidCountDownSSD(u16 Copy_u16FullNumber)
{
    28f2:	df 93       	push	r29
    28f4:	cf 93       	push	r28
    28f6:	00 d0       	rcall	.+0      	; 0x28f8 <HSSD_voidCountDownSSD+0x6>
    28f8:	00 d0       	rcall	.+0      	; 0x28fa <HSSD_voidCountDownSSD+0x8>
    28fa:	cd b7       	in	r28, 0x3d	; 61
    28fc:	de b7       	in	r29, 0x3e	; 62
    28fe:	9c 83       	std	Y+4, r25	; 0x04
    2900:	8b 83       	std	Y+3, r24	; 0x03
	for(u16 Local_u16Counter = Copy_u16FullNumber ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2902:	8b 81       	ldd	r24, Y+3	; 0x03
    2904:	9c 81       	ldd	r25, Y+4	; 0x04
    2906:	9a 83       	std	Y+2, r25	; 0x02
    2908:	89 83       	std	Y+1, r24	; 0x01
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
    290a:	89 81       	ldd	r24, Y+1	; 0x01
    290c:	9a 81       	ldd	r25, Y+2	; 0x02
    290e:	0e 94 45 13 	call	0x268a	; 0x268a <HSSD_voidDisplaySSD>
		if(Local_u16Counter == 0)
    2912:	89 81       	ldd	r24, Y+1	; 0x01
    2914:	9a 81       	ldd	r25, Y+2	; 0x02
    2916:	00 97       	sbiw	r24, 0x00	; 0
    2918:	31 f0       	breq	.+12     	; 0x2926 <HSSD_voidCountDownSSD+0x34>
	MDIO_voidSetPinValue(DIO_u8_PORTA ,DIO_u8_PIN3, DIO_u8_LOW);
}

void HSSD_voidCountDownSSD(u16 Copy_u16FullNumber)
{
	for(u16 Local_u16Counter = Copy_u16FullNumber ; Local_u16Counter >= 0 ; Local_u16Counter--)
    291a:	89 81       	ldd	r24, Y+1	; 0x01
    291c:	9a 81       	ldd	r25, Y+2	; 0x02
    291e:	01 97       	sbiw	r24, 0x01	; 1
    2920:	9a 83       	std	Y+2, r25	; 0x02
    2922:	89 83       	std	Y+1, r24	; 0x01
    2924:	f2 cf       	rjmp	.-28     	; 0x290a <HSSD_voidCountDownSSD+0x18>
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
		if(Local_u16Counter == 0)
			break;
	}
}
    2926:	0f 90       	pop	r0
    2928:	0f 90       	pop	r0
    292a:	0f 90       	pop	r0
    292c:	0f 90       	pop	r0
    292e:	cf 91       	pop	r28
    2930:	df 91       	pop	r29
    2932:	08 95       	ret

00002934 <HSSD_voidCountUpSSD>:
void HSSD_voidCountUpSSD(u16 Copy_u16FullNumber)
{
    2934:	df 93       	push	r29
    2936:	cf 93       	push	r28
    2938:	00 d0       	rcall	.+0      	; 0x293a <HSSD_voidCountUpSSD+0x6>
    293a:	00 d0       	rcall	.+0      	; 0x293c <HSSD_voidCountUpSSD+0x8>
    293c:	cd b7       	in	r28, 0x3d	; 61
    293e:	de b7       	in	r29, 0x3e	; 62
    2940:	9c 83       	std	Y+4, r25	; 0x04
    2942:	8b 83       	std	Y+3, r24	; 0x03
	for(u16 Local_u16Counter = Copy_u16FullNumber ; Local_u16Counter <= 9999 ; Local_u16Counter++)
    2944:	8b 81       	ldd	r24, Y+3	; 0x03
    2946:	9c 81       	ldd	r25, Y+4	; 0x04
    2948:	9a 83       	std	Y+2, r25	; 0x02
    294a:	89 83       	std	Y+1, r24	; 0x01
    294c:	0f c0       	rjmp	.+30     	; 0x296c <HSSD_voidCountUpSSD+0x38>
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
    294e:	89 81       	ldd	r24, Y+1	; 0x01
    2950:	9a 81       	ldd	r25, Y+2	; 0x02
    2952:	0e 94 45 13 	call	0x268a	; 0x268a <HSSD_voidDisplaySSD>
		if(Local_u16Counter == 9999)
    2956:	89 81       	ldd	r24, Y+1	; 0x01
    2958:	9a 81       	ldd	r25, Y+2	; 0x02
    295a:	27 e2       	ldi	r18, 0x27	; 39
    295c:	8f 30       	cpi	r24, 0x0F	; 15
    295e:	92 07       	cpc	r25, r18
    2960:	59 f0       	breq	.+22     	; 0x2978 <HSSD_voidCountUpSSD+0x44>
			break;
	}
}
void HSSD_voidCountUpSSD(u16 Copy_u16FullNumber)
{
	for(u16 Local_u16Counter = Copy_u16FullNumber ; Local_u16Counter <= 9999 ; Local_u16Counter++)
    2962:	89 81       	ldd	r24, Y+1	; 0x01
    2964:	9a 81       	ldd	r25, Y+2	; 0x02
    2966:	01 96       	adiw	r24, 0x01	; 1
    2968:	9a 83       	std	Y+2, r25	; 0x02
    296a:	89 83       	std	Y+1, r24	; 0x01
    296c:	89 81       	ldd	r24, Y+1	; 0x01
    296e:	9a 81       	ldd	r25, Y+2	; 0x02
    2970:	27 e2       	ldi	r18, 0x27	; 39
    2972:	80 31       	cpi	r24, 0x10	; 16
    2974:	92 07       	cpc	r25, r18
    2976:	58 f3       	brcs	.-42     	; 0x294e <HSSD_voidCountUpSSD+0x1a>
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
		if(Local_u16Counter == 9999)
			break;
	}
}
    2978:	0f 90       	pop	r0
    297a:	0f 90       	pop	r0
    297c:	0f 90       	pop	r0
    297e:	0f 90       	pop	r0
    2980:	cf 91       	pop	r28
    2982:	df 91       	pop	r29
    2984:	08 95       	ret

00002986 <HSWITCH_voidInit>:
#include "DIP_CONFIG.h"
#include "DIP_PRIVATE.h"
#include "DIP_INTERFACE.h"

void HSWITCH_voidInit  (void)
{
    2986:	df 93       	push	r29
    2988:	cf 93       	push	r28
    298a:	cd b7       	in	r28, 0x3d	; 61
    298c:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinDirection (DIO_u8_PORTD , SWITCH_1 ,DIO_u8_INPUT);
    298e:	83 e0       	ldi	r24, 0x03	; 3
    2990:	67 e0       	ldi	r22, 0x07	; 7
    2992:	40 e0       	ldi	r20, 0x00	; 0
    2994:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection (DIO_u8_PORTD , SWITCH_2 ,DIO_u8_INPUT);
    2998:	83 e0       	ldi	r24, 0x03	; 3
    299a:	66 e0       	ldi	r22, 0x06	; 6
    299c:	40 e0       	ldi	r20, 0x00	; 0
    299e:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection (DIO_u8_PORTD , SWITCH_3 ,DIO_u8_INPUT);
    29a2:	83 e0       	ldi	r24, 0x03	; 3
    29a4:	65 e0       	ldi	r22, 0x05	; 5
    29a6:	40 e0       	ldi	r20, 0x00	; 0
    29a8:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection (DIO_u8_PORTD , SWITCH_4 ,DIO_u8_INPUT);
    29ac:	83 e0       	ldi	r24, 0x03	; 3
    29ae:	63 e0       	ldi	r22, 0x03	; 3
    29b0:	40 e0       	ldi	r20, 0x00	; 0
    29b2:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
}
    29b6:	cf 91       	pop	r28
    29b8:	df 91       	pop	r29
    29ba:	08 95       	ret

000029bc <HDIP_u8GetPressedKey>:

u8 HDIP_u8GetPressedKey  (u8 Copy_u8SwitchPinId)
{
    29bc:	df 93       	push	r29
    29be:	cf 93       	push	r28
    29c0:	00 d0       	rcall	.+0      	; 0x29c2 <HDIP_u8GetPressedKey+0x6>
    29c2:	00 d0       	rcall	.+0      	; 0x29c4 <HDIP_u8GetPressedKey+0x8>
    29c4:	cd b7       	in	r28, 0x3d	; 61
    29c6:	de b7       	in	r29, 0x3e	; 62
    29c8:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8VALUE  = 0;
    29ca:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8SwitchPinId)
    29cc:	8a 81       	ldd	r24, Y+2	; 0x02
    29ce:	28 2f       	mov	r18, r24
    29d0:	30 e0       	ldi	r19, 0x00	; 0
    29d2:	3c 83       	std	Y+4, r19	; 0x04
    29d4:	2b 83       	std	Y+3, r18	; 0x03
    29d6:	8b 81       	ldd	r24, Y+3	; 0x03
    29d8:	9c 81       	ldd	r25, Y+4	; 0x04
    29da:	82 30       	cpi	r24, 0x02	; 2
    29dc:	91 05       	cpc	r25, r1
    29de:	e1 f0       	breq	.+56     	; 0x2a18 <HDIP_u8GetPressedKey+0x5c>
    29e0:	2b 81       	ldd	r18, Y+3	; 0x03
    29e2:	3c 81       	ldd	r19, Y+4	; 0x04
    29e4:	23 30       	cpi	r18, 0x03	; 3
    29e6:	31 05       	cpc	r19, r1
    29e8:	34 f4       	brge	.+12     	; 0x29f6 <HDIP_u8GetPressedKey+0x3a>
    29ea:	8b 81       	ldd	r24, Y+3	; 0x03
    29ec:	9c 81       	ldd	r25, Y+4	; 0x04
    29ee:	81 30       	cpi	r24, 0x01	; 1
    29f0:	91 05       	cpc	r25, r1
    29f2:	61 f0       	breq	.+24     	; 0x2a0c <HDIP_u8GetPressedKey+0x50>
    29f4:	22 c0       	rjmp	.+68     	; 0x2a3a <HDIP_u8GetPressedKey+0x7e>
    29f6:	2b 81       	ldd	r18, Y+3	; 0x03
    29f8:	3c 81       	ldd	r19, Y+4	; 0x04
    29fa:	23 30       	cpi	r18, 0x03	; 3
    29fc:	31 05       	cpc	r19, r1
    29fe:	91 f0       	breq	.+36     	; 0x2a24 <HDIP_u8GetPressedKey+0x68>
    2a00:	8b 81       	ldd	r24, Y+3	; 0x03
    2a02:	9c 81       	ldd	r25, Y+4	; 0x04
    2a04:	84 30       	cpi	r24, 0x04	; 4
    2a06:	91 05       	cpc	r25, r1
    2a08:	99 f0       	breq	.+38     	; 0x2a30 <HDIP_u8GetPressedKey+0x74>
    2a0a:	17 c0       	rjmp	.+46     	; 0x2a3a <HDIP_u8GetPressedKey+0x7e>
	{
		case SWITCH_1_t:
			Local_u8VALUE = MDIO_u8GetPinValue(DIO_u8_PORTD , SWITCH_1);
    2a0c:	83 e0       	ldi	r24, 0x03	; 3
    2a0e:	67 e0       	ldi	r22, 0x07	; 7
    2a10:	0e 94 09 08 	call	0x1012	; 0x1012 <MDIO_u8GetPinValue>
    2a14:	89 83       	std	Y+1, r24	; 0x01
    2a16:	11 c0       	rjmp	.+34     	; 0x2a3a <HDIP_u8GetPressedKey+0x7e>
			break;
		case SWITCH_2_t:
			Local_u8VALUE = MDIO_u8GetPinValue(DIO_u8_PORTD , SWITCH_2);			
    2a18:	83 e0       	ldi	r24, 0x03	; 3
    2a1a:	66 e0       	ldi	r22, 0x06	; 6
    2a1c:	0e 94 09 08 	call	0x1012	; 0x1012 <MDIO_u8GetPinValue>
    2a20:	89 83       	std	Y+1, r24	; 0x01
    2a22:	0b c0       	rjmp	.+22     	; 0x2a3a <HDIP_u8GetPressedKey+0x7e>
			break;
		case SWITCH_3_t:
			Local_u8VALUE = MDIO_u8GetPinValue(DIO_u8_PORTD , SWITCH_3);			
    2a24:	83 e0       	ldi	r24, 0x03	; 3
    2a26:	65 e0       	ldi	r22, 0x05	; 5
    2a28:	0e 94 09 08 	call	0x1012	; 0x1012 <MDIO_u8GetPinValue>
    2a2c:	89 83       	std	Y+1, r24	; 0x01
    2a2e:	05 c0       	rjmp	.+10     	; 0x2a3a <HDIP_u8GetPressedKey+0x7e>
			break;
		case SWITCH_4_t:
			Local_u8VALUE = MDIO_u8GetPinValue(DIO_u8_PORTD , SWITCH_4);			
    2a30:	83 e0       	ldi	r24, 0x03	; 3
    2a32:	63 e0       	ldi	r22, 0x03	; 3
    2a34:	0e 94 09 08 	call	0x1012	; 0x1012 <MDIO_u8GetPinValue>
    2a38:	89 83       	std	Y+1, r24	; 0x01
			break;
		default :
			break;
	}
	return Local_u8VALUE;
    2a3a:	89 81       	ldd	r24, Y+1	; 0x01
}
    2a3c:	0f 90       	pop	r0
    2a3e:	0f 90       	pop	r0
    2a40:	0f 90       	pop	r0
    2a42:	0f 90       	pop	r0
    2a44:	cf 91       	pop	r28
    2a46:	df 91       	pop	r29
    2a48:	08 95       	ret

00002a4a <HLED_voidInit>:
#include "LED_CONFIG.h"
#include "LED_PRIVATE.h"
#include "LED_INTERFACE.h"

void HLED_voidInit  (void)
{
    2a4a:	df 93       	push	r29
    2a4c:	cf 93       	push	r28
    2a4e:	cd b7       	in	r28, 0x3d	; 61
    2a50:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinDirection (DIO_u8_PORTA , LED_GREEN ,DIO_u8_OUTPUT);
    2a52:	80 e0       	ldi	r24, 0x00	; 0
    2a54:	64 e0       	ldi	r22, 0x04	; 4
    2a56:	41 e0       	ldi	r20, 0x01	; 1
    2a58:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection (DIO_u8_PORTA , LED_BLUE ,DIO_u8_OUTPUT);
    2a5c:	80 e0       	ldi	r24, 0x00	; 0
    2a5e:	65 e0       	ldi	r22, 0x05	; 5
    2a60:	41 e0       	ldi	r20, 0x01	; 1
    2a62:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection (DIO_u8_PORTA , LED_YELLOW ,DIO_u8_OUTPUT);
    2a66:	80 e0       	ldi	r24, 0x00	; 0
    2a68:	66 e0       	ldi	r22, 0x06	; 6
    2a6a:	41 e0       	ldi	r20, 0x01	; 1
    2a6c:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection (DIO_u8_PORTB , LED_RED ,DIO_u8_OUTPUT);
    2a70:	81 e0       	ldi	r24, 0x01	; 1
    2a72:	67 e0       	ldi	r22, 0x07	; 7
    2a74:	41 e0       	ldi	r20, 0x01	; 1
    2a76:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPinDirection>
}
    2a7a:	cf 91       	pop	r28
    2a7c:	df 91       	pop	r29
    2a7e:	08 95       	ret

00002a80 <HLED_voidTurnOn>:

void HLED_voidTurnOn ( u8 Copy_u8LedPinId)
{
    2a80:	df 93       	push	r29
    2a82:	cf 93       	push	r28
    2a84:	00 d0       	rcall	.+0      	; 0x2a86 <HLED_voidTurnOn+0x6>
    2a86:	0f 92       	push	r0
    2a88:	cd b7       	in	r28, 0x3d	; 61
    2a8a:	de b7       	in	r29, 0x3e	; 62
    2a8c:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8LedPinId)
    2a8e:	89 81       	ldd	r24, Y+1	; 0x01
    2a90:	28 2f       	mov	r18, r24
    2a92:	30 e0       	ldi	r19, 0x00	; 0
    2a94:	3b 83       	std	Y+3, r19	; 0x03
    2a96:	2a 83       	std	Y+2, r18	; 0x02
    2a98:	8a 81       	ldd	r24, Y+2	; 0x02
    2a9a:	9b 81       	ldd	r25, Y+3	; 0x03
    2a9c:	82 30       	cpi	r24, 0x02	; 2
    2a9e:	91 05       	cpc	r25, r1
    2aa0:	e1 f0       	breq	.+56     	; 0x2ada <HLED_voidTurnOn+0x5a>
    2aa2:	2a 81       	ldd	r18, Y+2	; 0x02
    2aa4:	3b 81       	ldd	r19, Y+3	; 0x03
    2aa6:	23 30       	cpi	r18, 0x03	; 3
    2aa8:	31 05       	cpc	r19, r1
    2aaa:	34 f4       	brge	.+12     	; 0x2ab8 <HLED_voidTurnOn+0x38>
    2aac:	8a 81       	ldd	r24, Y+2	; 0x02
    2aae:	9b 81       	ldd	r25, Y+3	; 0x03
    2ab0:	81 30       	cpi	r24, 0x01	; 1
    2ab2:	91 05       	cpc	r25, r1
    2ab4:	61 f0       	breq	.+24     	; 0x2ace <HLED_voidTurnOn+0x4e>
    2ab6:	22 c0       	rjmp	.+68     	; 0x2afc <HLED_voidTurnOn+0x7c>
    2ab8:	2a 81       	ldd	r18, Y+2	; 0x02
    2aba:	3b 81       	ldd	r19, Y+3	; 0x03
    2abc:	23 30       	cpi	r18, 0x03	; 3
    2abe:	31 05       	cpc	r19, r1
    2ac0:	91 f0       	breq	.+36     	; 0x2ae6 <HLED_voidTurnOn+0x66>
    2ac2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ac4:	9b 81       	ldd	r25, Y+3	; 0x03
    2ac6:	84 30       	cpi	r24, 0x04	; 4
    2ac8:	91 05       	cpc	r25, r1
    2aca:	99 f0       	breq	.+38     	; 0x2af2 <HLED_voidTurnOn+0x72>
    2acc:	17 c0       	rjmp	.+46     	; 0x2afc <HLED_voidTurnOn+0x7c>
	{
		case LED_GREEN_t:
			MDIO_voidSetPinValue(DIO_u8_PORTA , LED_GREEN ,DIO_u8_HIGH);
    2ace:	80 e0       	ldi	r24, 0x00	; 0
    2ad0:	64 e0       	ldi	r22, 0x04	; 4
    2ad2:	41 e0       	ldi	r20, 0x01	; 1
    2ad4:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2ad8:	11 c0       	rjmp	.+34     	; 0x2afc <HLED_voidTurnOn+0x7c>
			break;
		case LED_BLUE_t:
			MDIO_voidSetPinValue(DIO_u8_PORTA , LED_BLUE ,DIO_u8_HIGH);
    2ada:	80 e0       	ldi	r24, 0x00	; 0
    2adc:	65 e0       	ldi	r22, 0x05	; 5
    2ade:	41 e0       	ldi	r20, 0x01	; 1
    2ae0:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2ae4:	0b c0       	rjmp	.+22     	; 0x2afc <HLED_voidTurnOn+0x7c>
			break;
		case LED_YELLOW_t:
			MDIO_voidSetPinValue(DIO_u8_PORTA , LED_YELLOW ,DIO_u8_HIGH);
    2ae6:	80 e0       	ldi	r24, 0x00	; 0
    2ae8:	66 e0       	ldi	r22, 0x06	; 6
    2aea:	41 e0       	ldi	r20, 0x01	; 1
    2aec:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2af0:	05 c0       	rjmp	.+10     	; 0x2afc <HLED_voidTurnOn+0x7c>
			break;
		case LED_RED_t:
			MDIO_voidSetPinValue(DIO_u8_PORTB , LED_RED ,DIO_u8_HIGH);
    2af2:	81 e0       	ldi	r24, 0x01	; 1
    2af4:	67 e0       	ldi	r22, 0x07	; 7
    2af6:	41 e0       	ldi	r20, 0x01	; 1
    2af8:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
			break;
		default :
			break;
	}
}
    2afc:	0f 90       	pop	r0
    2afe:	0f 90       	pop	r0
    2b00:	0f 90       	pop	r0
    2b02:	cf 91       	pop	r28
    2b04:	df 91       	pop	r29
    2b06:	08 95       	ret

00002b08 <HLED_voidTurnOff>:

void HLED_voidTurnOff ( u8 Copy_u8LedPinId)
{
    2b08:	df 93       	push	r29
    2b0a:	cf 93       	push	r28
    2b0c:	00 d0       	rcall	.+0      	; 0x2b0e <HLED_voidTurnOff+0x6>
    2b0e:	0f 92       	push	r0
    2b10:	cd b7       	in	r28, 0x3d	; 61
    2b12:	de b7       	in	r29, 0x3e	; 62
    2b14:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8LedPinId)
    2b16:	89 81       	ldd	r24, Y+1	; 0x01
    2b18:	28 2f       	mov	r18, r24
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	3b 83       	std	Y+3, r19	; 0x03
    2b1e:	2a 83       	std	Y+2, r18	; 0x02
    2b20:	8a 81       	ldd	r24, Y+2	; 0x02
    2b22:	9b 81       	ldd	r25, Y+3	; 0x03
    2b24:	82 30       	cpi	r24, 0x02	; 2
    2b26:	91 05       	cpc	r25, r1
    2b28:	e1 f0       	breq	.+56     	; 0x2b62 <HLED_voidTurnOff+0x5a>
    2b2a:	2a 81       	ldd	r18, Y+2	; 0x02
    2b2c:	3b 81       	ldd	r19, Y+3	; 0x03
    2b2e:	23 30       	cpi	r18, 0x03	; 3
    2b30:	31 05       	cpc	r19, r1
    2b32:	34 f4       	brge	.+12     	; 0x2b40 <HLED_voidTurnOff+0x38>
    2b34:	8a 81       	ldd	r24, Y+2	; 0x02
    2b36:	9b 81       	ldd	r25, Y+3	; 0x03
    2b38:	81 30       	cpi	r24, 0x01	; 1
    2b3a:	91 05       	cpc	r25, r1
    2b3c:	61 f0       	breq	.+24     	; 0x2b56 <HLED_voidTurnOff+0x4e>
    2b3e:	22 c0       	rjmp	.+68     	; 0x2b84 <HLED_voidTurnOff+0x7c>
    2b40:	2a 81       	ldd	r18, Y+2	; 0x02
    2b42:	3b 81       	ldd	r19, Y+3	; 0x03
    2b44:	23 30       	cpi	r18, 0x03	; 3
    2b46:	31 05       	cpc	r19, r1
    2b48:	91 f0       	breq	.+36     	; 0x2b6e <HLED_voidTurnOff+0x66>
    2b4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b4c:	9b 81       	ldd	r25, Y+3	; 0x03
    2b4e:	84 30       	cpi	r24, 0x04	; 4
    2b50:	91 05       	cpc	r25, r1
    2b52:	99 f0       	breq	.+38     	; 0x2b7a <HLED_voidTurnOff+0x72>
    2b54:	17 c0       	rjmp	.+46     	; 0x2b84 <HLED_voidTurnOff+0x7c>
		{
			case LED_GREEN_t:
				MDIO_voidSetPinValue(DIO_u8_PORTA , LED_GREEN ,DIO_u8_LOW);
    2b56:	80 e0       	ldi	r24, 0x00	; 0
    2b58:	64 e0       	ldi	r22, 0x04	; 4
    2b5a:	40 e0       	ldi	r20, 0x00	; 0
    2b5c:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2b60:	11 c0       	rjmp	.+34     	; 0x2b84 <HLED_voidTurnOff+0x7c>
				break;
			case LED_BLUE_t:
				MDIO_voidSetPinValue(DIO_u8_PORTA , LED_BLUE ,DIO_u8_LOW);
    2b62:	80 e0       	ldi	r24, 0x00	; 0
    2b64:	65 e0       	ldi	r22, 0x05	; 5
    2b66:	40 e0       	ldi	r20, 0x00	; 0
    2b68:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2b6c:	0b c0       	rjmp	.+22     	; 0x2b84 <HLED_voidTurnOff+0x7c>
				break;
			case LED_YELLOW_t:
				MDIO_voidSetPinValue(DIO_u8_PORTA , LED_YELLOW ,DIO_u8_LOW);
    2b6e:	80 e0       	ldi	r24, 0x00	; 0
    2b70:	66 e0       	ldi	r22, 0x06	; 6
    2b72:	40 e0       	ldi	r20, 0x00	; 0
    2b74:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
    2b78:	05 c0       	rjmp	.+10     	; 0x2b84 <HLED_voidTurnOff+0x7c>
				break;
			case LED_RED_t:
				MDIO_voidSetPinValue(DIO_u8_PORTB , LED_RED ,DIO_u8_LOW);
    2b7a:	81 e0       	ldi	r24, 0x01	; 1
    2b7c:	67 e0       	ldi	r22, 0x07	; 7
    2b7e:	40 e0       	ldi	r20, 0x00	; 0
    2b80:	0e 94 95 06 	call	0xd2a	; 0xd2a <MDIO_voidSetPinValue>
				break;
			default :
				break;
		}
}
    2b84:	0f 90       	pop	r0
    2b86:	0f 90       	pop	r0
    2b88:	0f 90       	pop	r0
    2b8a:	cf 91       	pop	r28
    2b8c:	df 91       	pop	r29
    2b8e:	08 95       	ret

00002b90 <main>:
}
#elif   APP   ==		5
void Traffic_Light(void);
void Count(void);
int main (void)
{
    2b90:	df 93       	push	r29
    2b92:	cf 93       	push	r28
    2b94:	cd b7       	in	r28, 0x3d	; 61
    2b96:	de b7       	in	r29, 0x3e	; 62
	Traffic_Light();
    2b98:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <Traffic_Light>
	return 0;
    2b9c:	80 e0       	ldi	r24, 0x00	; 0
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
}
    2ba0:	cf 91       	pop	r28
    2ba2:	df 91       	pop	r29
    2ba4:	08 95       	ret

00002ba6 <Traffic_Light>:

void Traffic_Light(void)
{
    2ba6:	df 93       	push	r29
    2ba8:	cf 93       	push	r28
    2baa:	cd b7       	in	r28, 0x3d	; 61
    2bac:	de b7       	in	r29, 0x3e	; 62
	HSSD_voidInitSSD();
    2bae:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <HSSD_voidInitSSD>
	HLED_voidInit();
    2bb2:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <HLED_voidInit>

	while(1)
	{
		Count();
    2bb6:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <Count>
    2bba:	fd cf       	rjmp	.-6      	; 0x2bb6 <Traffic_Light+0x10>

00002bbc <Count>:
	}
}
void Count(void)
{
    2bbc:	df 93       	push	r29
    2bbe:	cf 93       	push	r28
    2bc0:	cd b7       	in	r28, 0x3d	; 61
    2bc2:	de b7       	in	r29, 0x3e	; 62
    2bc4:	e0 97       	sbiw	r28, 0x30	; 48
    2bc6:	0f b6       	in	r0, 0x3f	; 63
    2bc8:	f8 94       	cli
    2bca:	de bf       	out	0x3e, r29	; 62
    2bcc:	0f be       	out	0x3f, r0	; 63
    2bce:	cd bf       	out	0x3d, r28	; 61
	for(u16 Local_u16Counter = 10 ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2bd0:	8a e0       	ldi	r24, 0x0A	; 10
    2bd2:	90 e0       	ldi	r25, 0x00	; 0
    2bd4:	98 ab       	std	Y+48, r25	; 0x30
    2bd6:	8f a7       	std	Y+47, r24	; 0x2f
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
    2bd8:	8f a5       	ldd	r24, Y+47	; 0x2f
    2bda:	98 a9       	ldd	r25, Y+48	; 0x30
    2bdc:	0e 94 45 13 	call	0x268a	; 0x268a <HSSD_voidDisplaySSD>
		HLED_voidTurnOn(LED_RED_t);
    2be0:	84 e0       	ldi	r24, 0x04	; 4
    2be2:	0e 94 40 15 	call	0x2a80	; 0x2a80 <HLED_voidTurnOn>
    2be6:	80 e0       	ldi	r24, 0x00	; 0
    2be8:	90 e0       	ldi	r25, 0x00	; 0
    2bea:	a8 ec       	ldi	r26, 0xC8	; 200
    2bec:	b2 e4       	ldi	r27, 0x42	; 66
    2bee:	8f a3       	std	Y+39, r24	; 0x27
    2bf0:	98 a7       	std	Y+40, r25	; 0x28
    2bf2:	a9 a7       	std	Y+41, r26	; 0x29
    2bf4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bf6:	6f a1       	ldd	r22, Y+39	; 0x27
    2bf8:	78 a5       	ldd	r23, Y+40	; 0x28
    2bfa:	89 a5       	ldd	r24, Y+41	; 0x29
    2bfc:	9a a5       	ldd	r25, Y+42	; 0x2a
    2bfe:	20 e0       	ldi	r18, 0x00	; 0
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	4a ef       	ldi	r20, 0xFA	; 250
    2c04:	54 e4       	ldi	r21, 0x44	; 68
    2c06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c0a:	dc 01       	movw	r26, r24
    2c0c:	cb 01       	movw	r24, r22
    2c0e:	8b a3       	std	Y+35, r24	; 0x23
    2c10:	9c a3       	std	Y+36, r25	; 0x24
    2c12:	ad a3       	std	Y+37, r26	; 0x25
    2c14:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2c16:	6b a1       	ldd	r22, Y+35	; 0x23
    2c18:	7c a1       	ldd	r23, Y+36	; 0x24
    2c1a:	8d a1       	ldd	r24, Y+37	; 0x25
    2c1c:	9e a1       	ldd	r25, Y+38	; 0x26
    2c1e:	20 e0       	ldi	r18, 0x00	; 0
    2c20:	30 e0       	ldi	r19, 0x00	; 0
    2c22:	40 e8       	ldi	r20, 0x80	; 128
    2c24:	5f e3       	ldi	r21, 0x3F	; 63
    2c26:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2c2a:	88 23       	and	r24, r24
    2c2c:	2c f4       	brge	.+10     	; 0x2c38 <Count+0x7c>
		__ticks = 1;
    2c2e:	81 e0       	ldi	r24, 0x01	; 1
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	9a a3       	std	Y+34, r25	; 0x22
    2c34:	89 a3       	std	Y+33, r24	; 0x21
    2c36:	3f c0       	rjmp	.+126    	; 0x2cb6 <Count+0xfa>
	else if (__tmp > 65535)
    2c38:	6b a1       	ldd	r22, Y+35	; 0x23
    2c3a:	7c a1       	ldd	r23, Y+36	; 0x24
    2c3c:	8d a1       	ldd	r24, Y+37	; 0x25
    2c3e:	9e a1       	ldd	r25, Y+38	; 0x26
    2c40:	20 e0       	ldi	r18, 0x00	; 0
    2c42:	3f ef       	ldi	r19, 0xFF	; 255
    2c44:	4f e7       	ldi	r20, 0x7F	; 127
    2c46:	57 e4       	ldi	r21, 0x47	; 71
    2c48:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2c4c:	18 16       	cp	r1, r24
    2c4e:	4c f5       	brge	.+82     	; 0x2ca2 <Count+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c50:	6f a1       	ldd	r22, Y+39	; 0x27
    2c52:	78 a5       	ldd	r23, Y+40	; 0x28
    2c54:	89 a5       	ldd	r24, Y+41	; 0x29
    2c56:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c58:	20 e0       	ldi	r18, 0x00	; 0
    2c5a:	30 e0       	ldi	r19, 0x00	; 0
    2c5c:	40 e2       	ldi	r20, 0x20	; 32
    2c5e:	51 e4       	ldi	r21, 0x41	; 65
    2c60:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c64:	dc 01       	movw	r26, r24
    2c66:	cb 01       	movw	r24, r22
    2c68:	bc 01       	movw	r22, r24
    2c6a:	cd 01       	movw	r24, r26
    2c6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c70:	dc 01       	movw	r26, r24
    2c72:	cb 01       	movw	r24, r22
    2c74:	9a a3       	std	Y+34, r25	; 0x22
    2c76:	89 a3       	std	Y+33, r24	; 0x21
    2c78:	0f c0       	rjmp	.+30     	; 0x2c98 <Count+0xdc>
    2c7a:	88 ec       	ldi	r24, 0xC8	; 200
    2c7c:	90 e0       	ldi	r25, 0x00	; 0
    2c7e:	98 a3       	std	Y+32, r25	; 0x20
    2c80:	8f 8f       	std	Y+31, r24	; 0x1f
    2c82:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c84:	98 a1       	ldd	r25, Y+32	; 0x20
    2c86:	01 97       	sbiw	r24, 0x01	; 1
    2c88:	f1 f7       	brne	.-4      	; 0x2c86 <Count+0xca>
    2c8a:	98 a3       	std	Y+32, r25	; 0x20
    2c8c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c8e:	89 a1       	ldd	r24, Y+33	; 0x21
    2c90:	9a a1       	ldd	r25, Y+34	; 0x22
    2c92:	01 97       	sbiw	r24, 0x01	; 1
    2c94:	9a a3       	std	Y+34, r25	; 0x22
    2c96:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c98:	89 a1       	ldd	r24, Y+33	; 0x21
    2c9a:	9a a1       	ldd	r25, Y+34	; 0x22
    2c9c:	00 97       	sbiw	r24, 0x00	; 0
    2c9e:	69 f7       	brne	.-38     	; 0x2c7a <Count+0xbe>
    2ca0:	14 c0       	rjmp	.+40     	; 0x2cca <Count+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ca2:	6b a1       	ldd	r22, Y+35	; 0x23
    2ca4:	7c a1       	ldd	r23, Y+36	; 0x24
    2ca6:	8d a1       	ldd	r24, Y+37	; 0x25
    2ca8:	9e a1       	ldd	r25, Y+38	; 0x26
    2caa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2cae:	dc 01       	movw	r26, r24
    2cb0:	cb 01       	movw	r24, r22
    2cb2:	9a a3       	std	Y+34, r25	; 0x22
    2cb4:	89 a3       	std	Y+33, r24	; 0x21
    2cb6:	89 a1       	ldd	r24, Y+33	; 0x21
    2cb8:	9a a1       	ldd	r25, Y+34	; 0x22
    2cba:	9e 8f       	std	Y+30, r25	; 0x1e
    2cbc:	8d 8f       	std	Y+29, r24	; 0x1d
    2cbe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2cc0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2cc2:	01 97       	sbiw	r24, 0x01	; 1
    2cc4:	f1 f7       	brne	.-4      	; 0x2cc2 <Count+0x106>
    2cc6:	9e 8f       	std	Y+30, r25	; 0x1e
    2cc8:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(100);
		if(Local_u16Counter == 0)
    2cca:	8f a5       	ldd	r24, Y+47	; 0x2f
    2ccc:	98 a9       	ldd	r25, Y+48	; 0x30
    2cce:	00 97       	sbiw	r24, 0x00	; 0
    2cd0:	31 f0       	breq	.+12     	; 0x2cde <Count+0x122>
		Count();
	}
}
void Count(void)
{
	for(u16 Local_u16Counter = 10 ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2cd2:	8f a5       	ldd	r24, Y+47	; 0x2f
    2cd4:	98 a9       	ldd	r25, Y+48	; 0x30
    2cd6:	01 97       	sbiw	r24, 0x01	; 1
    2cd8:	98 ab       	std	Y+48, r25	; 0x30
    2cda:	8f a7       	std	Y+47, r24	; 0x2f
    2cdc:	7d cf       	rjmp	.-262    	; 0x2bd8 <Count+0x1c>
		HLED_voidTurnOn(LED_RED_t);
		_delay_ms(100);
		if(Local_u16Counter == 0)
			break;
	}
	HLED_voidTurnOff(LED_RED_t);
    2cde:	84 e0       	ldi	r24, 0x04	; 4
    2ce0:	0e 94 84 15 	call	0x2b08	; 0x2b08 <HLED_voidTurnOff>

	for(u16 Local_u16Counter = 5 ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2ce4:	85 e0       	ldi	r24, 0x05	; 5
    2ce6:	90 e0       	ldi	r25, 0x00	; 0
    2ce8:	9e a7       	std	Y+46, r25	; 0x2e
    2cea:	8d a7       	std	Y+45, r24	; 0x2d
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
    2cec:	8d a5       	ldd	r24, Y+45	; 0x2d
    2cee:	9e a5       	ldd	r25, Y+46	; 0x2e
    2cf0:	0e 94 45 13 	call	0x268a	; 0x268a <HSSD_voidDisplaySSD>
		HLED_voidTurnOn(LED_YELLOW_t);
    2cf4:	83 e0       	ldi	r24, 0x03	; 3
    2cf6:	0e 94 40 15 	call	0x2a80	; 0x2a80 <HLED_voidTurnOn>
    2cfa:	80 e0       	ldi	r24, 0x00	; 0
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	a8 ec       	ldi	r26, 0xC8	; 200
    2d00:	b2 e4       	ldi	r27, 0x42	; 66
    2d02:	89 8f       	std	Y+25, r24	; 0x19
    2d04:	9a 8f       	std	Y+26, r25	; 0x1a
    2d06:	ab 8f       	std	Y+27, r26	; 0x1b
    2d08:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d0a:	69 8d       	ldd	r22, Y+25	; 0x19
    2d0c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d0e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d10:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d12:	20 e0       	ldi	r18, 0x00	; 0
    2d14:	30 e0       	ldi	r19, 0x00	; 0
    2d16:	4a ef       	ldi	r20, 0xFA	; 250
    2d18:	54 e4       	ldi	r21, 0x44	; 68
    2d1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d1e:	dc 01       	movw	r26, r24
    2d20:	cb 01       	movw	r24, r22
    2d22:	8d 8b       	std	Y+21, r24	; 0x15
    2d24:	9e 8b       	std	Y+22, r25	; 0x16
    2d26:	af 8b       	std	Y+23, r26	; 0x17
    2d28:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2d2a:	6d 89       	ldd	r22, Y+21	; 0x15
    2d2c:	7e 89       	ldd	r23, Y+22	; 0x16
    2d2e:	8f 89       	ldd	r24, Y+23	; 0x17
    2d30:	98 8d       	ldd	r25, Y+24	; 0x18
    2d32:	20 e0       	ldi	r18, 0x00	; 0
    2d34:	30 e0       	ldi	r19, 0x00	; 0
    2d36:	40 e8       	ldi	r20, 0x80	; 128
    2d38:	5f e3       	ldi	r21, 0x3F	; 63
    2d3a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2d3e:	88 23       	and	r24, r24
    2d40:	2c f4       	brge	.+10     	; 0x2d4c <Count+0x190>
		__ticks = 1;
    2d42:	81 e0       	ldi	r24, 0x01	; 1
    2d44:	90 e0       	ldi	r25, 0x00	; 0
    2d46:	9c 8b       	std	Y+20, r25	; 0x14
    2d48:	8b 8b       	std	Y+19, r24	; 0x13
    2d4a:	3f c0       	rjmp	.+126    	; 0x2dca <Count+0x20e>
	else if (__tmp > 65535)
    2d4c:	6d 89       	ldd	r22, Y+21	; 0x15
    2d4e:	7e 89       	ldd	r23, Y+22	; 0x16
    2d50:	8f 89       	ldd	r24, Y+23	; 0x17
    2d52:	98 8d       	ldd	r25, Y+24	; 0x18
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	3f ef       	ldi	r19, 0xFF	; 255
    2d58:	4f e7       	ldi	r20, 0x7F	; 127
    2d5a:	57 e4       	ldi	r21, 0x47	; 71
    2d5c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d60:	18 16       	cp	r1, r24
    2d62:	4c f5       	brge	.+82     	; 0x2db6 <Count+0x1fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d64:	69 8d       	ldd	r22, Y+25	; 0x19
    2d66:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d6c:	20 e0       	ldi	r18, 0x00	; 0
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	40 e2       	ldi	r20, 0x20	; 32
    2d72:	51 e4       	ldi	r21, 0x41	; 65
    2d74:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d78:	dc 01       	movw	r26, r24
    2d7a:	cb 01       	movw	r24, r22
    2d7c:	bc 01       	movw	r22, r24
    2d7e:	cd 01       	movw	r24, r26
    2d80:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d84:	dc 01       	movw	r26, r24
    2d86:	cb 01       	movw	r24, r22
    2d88:	9c 8b       	std	Y+20, r25	; 0x14
    2d8a:	8b 8b       	std	Y+19, r24	; 0x13
    2d8c:	0f c0       	rjmp	.+30     	; 0x2dac <Count+0x1f0>
    2d8e:	88 ec       	ldi	r24, 0xC8	; 200
    2d90:	90 e0       	ldi	r25, 0x00	; 0
    2d92:	9a 8b       	std	Y+18, r25	; 0x12
    2d94:	89 8b       	std	Y+17, r24	; 0x11
    2d96:	89 89       	ldd	r24, Y+17	; 0x11
    2d98:	9a 89       	ldd	r25, Y+18	; 0x12
    2d9a:	01 97       	sbiw	r24, 0x01	; 1
    2d9c:	f1 f7       	brne	.-4      	; 0x2d9a <Count+0x1de>
    2d9e:	9a 8b       	std	Y+18, r25	; 0x12
    2da0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2da2:	8b 89       	ldd	r24, Y+19	; 0x13
    2da4:	9c 89       	ldd	r25, Y+20	; 0x14
    2da6:	01 97       	sbiw	r24, 0x01	; 1
    2da8:	9c 8b       	std	Y+20, r25	; 0x14
    2daa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dac:	8b 89       	ldd	r24, Y+19	; 0x13
    2dae:	9c 89       	ldd	r25, Y+20	; 0x14
    2db0:	00 97       	sbiw	r24, 0x00	; 0
    2db2:	69 f7       	brne	.-38     	; 0x2d8e <Count+0x1d2>
    2db4:	14 c0       	rjmp	.+40     	; 0x2dde <Count+0x222>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2db6:	6d 89       	ldd	r22, Y+21	; 0x15
    2db8:	7e 89       	ldd	r23, Y+22	; 0x16
    2dba:	8f 89       	ldd	r24, Y+23	; 0x17
    2dbc:	98 8d       	ldd	r25, Y+24	; 0x18
    2dbe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2dc2:	dc 01       	movw	r26, r24
    2dc4:	cb 01       	movw	r24, r22
    2dc6:	9c 8b       	std	Y+20, r25	; 0x14
    2dc8:	8b 8b       	std	Y+19, r24	; 0x13
    2dca:	8b 89       	ldd	r24, Y+19	; 0x13
    2dcc:	9c 89       	ldd	r25, Y+20	; 0x14
    2dce:	98 8b       	std	Y+16, r25	; 0x10
    2dd0:	8f 87       	std	Y+15, r24	; 0x0f
    2dd2:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dd4:	98 89       	ldd	r25, Y+16	; 0x10
    2dd6:	01 97       	sbiw	r24, 0x01	; 1
    2dd8:	f1 f7       	brne	.-4      	; 0x2dd6 <Count+0x21a>
    2dda:	98 8b       	std	Y+16, r25	; 0x10
    2ddc:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(100);
		if(Local_u16Counter == 0)
    2dde:	8d a5       	ldd	r24, Y+45	; 0x2d
    2de0:	9e a5       	ldd	r25, Y+46	; 0x2e
    2de2:	00 97       	sbiw	r24, 0x00	; 0
    2de4:	31 f0       	breq	.+12     	; 0x2df2 <Count+0x236>
		if(Local_u16Counter == 0)
			break;
	}
	HLED_voidTurnOff(LED_RED_t);

	for(u16 Local_u16Counter = 5 ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2de6:	8d a5       	ldd	r24, Y+45	; 0x2d
    2de8:	9e a5       	ldd	r25, Y+46	; 0x2e
    2dea:	01 97       	sbiw	r24, 0x01	; 1
    2dec:	9e a7       	std	Y+46, r25	; 0x2e
    2dee:	8d a7       	std	Y+45, r24	; 0x2d
    2df0:	7d cf       	rjmp	.-262    	; 0x2cec <Count+0x130>
		HLED_voidTurnOn(LED_YELLOW_t);
		_delay_ms(100);
		if(Local_u16Counter == 0)
			break;
	}
	HLED_voidTurnOff(LED_YELLOW_t);
    2df2:	83 e0       	ldi	r24, 0x03	; 3
    2df4:	0e 94 84 15 	call	0x2b08	; 0x2b08 <HLED_voidTurnOff>

	for(u16 Local_u16Counter = 15 ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2df8:	8f e0       	ldi	r24, 0x0F	; 15
    2dfa:	90 e0       	ldi	r25, 0x00	; 0
    2dfc:	9c a7       	std	Y+44, r25	; 0x2c
    2dfe:	8b a7       	std	Y+43, r24	; 0x2b
	{
		HSSD_voidDisplaySSD(Local_u16Counter);
    2e00:	8b a5       	ldd	r24, Y+43	; 0x2b
    2e02:	9c a5       	ldd	r25, Y+44	; 0x2c
    2e04:	0e 94 45 13 	call	0x268a	; 0x268a <HSSD_voidDisplaySSD>
		HLED_voidTurnOn(LED_GREEN_t);
    2e08:	81 e0       	ldi	r24, 0x01	; 1
    2e0a:	0e 94 40 15 	call	0x2a80	; 0x2a80 <HLED_voidTurnOn>
    2e0e:	80 e0       	ldi	r24, 0x00	; 0
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	a8 ec       	ldi	r26, 0xC8	; 200
    2e14:	b2 e4       	ldi	r27, 0x42	; 66
    2e16:	8b 87       	std	Y+11, r24	; 0x0b
    2e18:	9c 87       	std	Y+12, r25	; 0x0c
    2e1a:	ad 87       	std	Y+13, r26	; 0x0d
    2e1c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e1e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e20:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e22:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e24:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e26:	20 e0       	ldi	r18, 0x00	; 0
    2e28:	30 e0       	ldi	r19, 0x00	; 0
    2e2a:	4a ef       	ldi	r20, 0xFA	; 250
    2e2c:	54 e4       	ldi	r21, 0x44	; 68
    2e2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e32:	dc 01       	movw	r26, r24
    2e34:	cb 01       	movw	r24, r22
    2e36:	8f 83       	std	Y+7, r24	; 0x07
    2e38:	98 87       	std	Y+8, r25	; 0x08
    2e3a:	a9 87       	std	Y+9, r26	; 0x09
    2e3c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2e3e:	6f 81       	ldd	r22, Y+7	; 0x07
    2e40:	78 85       	ldd	r23, Y+8	; 0x08
    2e42:	89 85       	ldd	r24, Y+9	; 0x09
    2e44:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e46:	20 e0       	ldi	r18, 0x00	; 0
    2e48:	30 e0       	ldi	r19, 0x00	; 0
    2e4a:	40 e8       	ldi	r20, 0x80	; 128
    2e4c:	5f e3       	ldi	r21, 0x3F	; 63
    2e4e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2e52:	88 23       	and	r24, r24
    2e54:	2c f4       	brge	.+10     	; 0x2e60 <Count+0x2a4>
		__ticks = 1;
    2e56:	81 e0       	ldi	r24, 0x01	; 1
    2e58:	90 e0       	ldi	r25, 0x00	; 0
    2e5a:	9e 83       	std	Y+6, r25	; 0x06
    2e5c:	8d 83       	std	Y+5, r24	; 0x05
    2e5e:	3f c0       	rjmp	.+126    	; 0x2ede <Count+0x322>
	else if (__tmp > 65535)
    2e60:	6f 81       	ldd	r22, Y+7	; 0x07
    2e62:	78 85       	ldd	r23, Y+8	; 0x08
    2e64:	89 85       	ldd	r24, Y+9	; 0x09
    2e66:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e68:	20 e0       	ldi	r18, 0x00	; 0
    2e6a:	3f ef       	ldi	r19, 0xFF	; 255
    2e6c:	4f e7       	ldi	r20, 0x7F	; 127
    2e6e:	57 e4       	ldi	r21, 0x47	; 71
    2e70:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2e74:	18 16       	cp	r1, r24
    2e76:	4c f5       	brge	.+82     	; 0x2eca <Count+0x30e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e78:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e7a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e7e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e80:	20 e0       	ldi	r18, 0x00	; 0
    2e82:	30 e0       	ldi	r19, 0x00	; 0
    2e84:	40 e2       	ldi	r20, 0x20	; 32
    2e86:	51 e4       	ldi	r21, 0x41	; 65
    2e88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e8c:	dc 01       	movw	r26, r24
    2e8e:	cb 01       	movw	r24, r22
    2e90:	bc 01       	movw	r22, r24
    2e92:	cd 01       	movw	r24, r26
    2e94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e98:	dc 01       	movw	r26, r24
    2e9a:	cb 01       	movw	r24, r22
    2e9c:	9e 83       	std	Y+6, r25	; 0x06
    2e9e:	8d 83       	std	Y+5, r24	; 0x05
    2ea0:	0f c0       	rjmp	.+30     	; 0x2ec0 <Count+0x304>
    2ea2:	88 ec       	ldi	r24, 0xC8	; 200
    2ea4:	90 e0       	ldi	r25, 0x00	; 0
    2ea6:	9c 83       	std	Y+4, r25	; 0x04
    2ea8:	8b 83       	std	Y+3, r24	; 0x03
    2eaa:	8b 81       	ldd	r24, Y+3	; 0x03
    2eac:	9c 81       	ldd	r25, Y+4	; 0x04
    2eae:	01 97       	sbiw	r24, 0x01	; 1
    2eb0:	f1 f7       	brne	.-4      	; 0x2eae <Count+0x2f2>
    2eb2:	9c 83       	std	Y+4, r25	; 0x04
    2eb4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2eb6:	8d 81       	ldd	r24, Y+5	; 0x05
    2eb8:	9e 81       	ldd	r25, Y+6	; 0x06
    2eba:	01 97       	sbiw	r24, 0x01	; 1
    2ebc:	9e 83       	std	Y+6, r25	; 0x06
    2ebe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ec0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ec2:	9e 81       	ldd	r25, Y+6	; 0x06
    2ec4:	00 97       	sbiw	r24, 0x00	; 0
    2ec6:	69 f7       	brne	.-38     	; 0x2ea2 <Count+0x2e6>
    2ec8:	14 c0       	rjmp	.+40     	; 0x2ef2 <Count+0x336>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2eca:	6f 81       	ldd	r22, Y+7	; 0x07
    2ecc:	78 85       	ldd	r23, Y+8	; 0x08
    2ece:	89 85       	ldd	r24, Y+9	; 0x09
    2ed0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ed2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ed6:	dc 01       	movw	r26, r24
    2ed8:	cb 01       	movw	r24, r22
    2eda:	9e 83       	std	Y+6, r25	; 0x06
    2edc:	8d 83       	std	Y+5, r24	; 0x05
    2ede:	8d 81       	ldd	r24, Y+5	; 0x05
    2ee0:	9e 81       	ldd	r25, Y+6	; 0x06
    2ee2:	9a 83       	std	Y+2, r25	; 0x02
    2ee4:	89 83       	std	Y+1, r24	; 0x01
    2ee6:	89 81       	ldd	r24, Y+1	; 0x01
    2ee8:	9a 81       	ldd	r25, Y+2	; 0x02
    2eea:	01 97       	sbiw	r24, 0x01	; 1
    2eec:	f1 f7       	brne	.-4      	; 0x2eea <Count+0x32e>
    2eee:	9a 83       	std	Y+2, r25	; 0x02
    2ef0:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(100);
		if(Local_u16Counter == 0)
    2ef2:	8b a5       	ldd	r24, Y+43	; 0x2b
    2ef4:	9c a5       	ldd	r25, Y+44	; 0x2c
    2ef6:	00 97       	sbiw	r24, 0x00	; 0
    2ef8:	31 f0       	breq	.+12     	; 0x2f06 <Count+0x34a>
		if(Local_u16Counter == 0)
			break;
	}
	HLED_voidTurnOff(LED_YELLOW_t);

	for(u16 Local_u16Counter = 15 ; Local_u16Counter >= 0 ; Local_u16Counter--)
    2efa:	8b a5       	ldd	r24, Y+43	; 0x2b
    2efc:	9c a5       	ldd	r25, Y+44	; 0x2c
    2efe:	01 97       	sbiw	r24, 0x01	; 1
    2f00:	9c a7       	std	Y+44, r25	; 0x2c
    2f02:	8b a7       	std	Y+43, r24	; 0x2b
    2f04:	7d cf       	rjmp	.-262    	; 0x2e00 <Count+0x244>
		HLED_voidTurnOn(LED_GREEN_t);
		_delay_ms(100);
		if(Local_u16Counter == 0)
			break;
	}
	HLED_voidTurnOff(LED_GREEN_t);
    2f06:	81 e0       	ldi	r24, 0x01	; 1
    2f08:	0e 94 84 15 	call	0x2b08	; 0x2b08 <HLED_voidTurnOff>
}
    2f0c:	e0 96       	adiw	r28, 0x30	; 48
    2f0e:	0f b6       	in	r0, 0x3f	; 63
    2f10:	f8 94       	cli
    2f12:	de bf       	out	0x3e, r29	; 62
    2f14:	0f be       	out	0x3f, r0	; 63
    2f16:	cd bf       	out	0x3d, r28	; 61
    2f18:	cf 91       	pop	r28
    2f1a:	df 91       	pop	r29
    2f1c:	08 95       	ret

00002f1e <__udivmodhi4>:
    2f1e:	aa 1b       	sub	r26, r26
    2f20:	bb 1b       	sub	r27, r27
    2f22:	51 e1       	ldi	r21, 0x11	; 17
    2f24:	07 c0       	rjmp	.+14     	; 0x2f34 <__udivmodhi4_ep>

00002f26 <__udivmodhi4_loop>:
    2f26:	aa 1f       	adc	r26, r26
    2f28:	bb 1f       	adc	r27, r27
    2f2a:	a6 17       	cp	r26, r22
    2f2c:	b7 07       	cpc	r27, r23
    2f2e:	10 f0       	brcs	.+4      	; 0x2f34 <__udivmodhi4_ep>
    2f30:	a6 1b       	sub	r26, r22
    2f32:	b7 0b       	sbc	r27, r23

00002f34 <__udivmodhi4_ep>:
    2f34:	88 1f       	adc	r24, r24
    2f36:	99 1f       	adc	r25, r25
    2f38:	5a 95       	dec	r21
    2f3a:	a9 f7       	brne	.-22     	; 0x2f26 <__udivmodhi4_loop>
    2f3c:	80 95       	com	r24
    2f3e:	90 95       	com	r25
    2f40:	bc 01       	movw	r22, r24
    2f42:	cd 01       	movw	r24, r26
    2f44:	08 95       	ret

00002f46 <__divmodsi4>:
    2f46:	97 fb       	bst	r25, 7
    2f48:	09 2e       	mov	r0, r25
    2f4a:	05 26       	eor	r0, r21
    2f4c:	0e d0       	rcall	.+28     	; 0x2f6a <__divmodsi4_neg1>
    2f4e:	57 fd       	sbrc	r21, 7
    2f50:	04 d0       	rcall	.+8      	; 0x2f5a <__divmodsi4_neg2>
    2f52:	14 d0       	rcall	.+40     	; 0x2f7c <__udivmodsi4>
    2f54:	0a d0       	rcall	.+20     	; 0x2f6a <__divmodsi4_neg1>
    2f56:	00 1c       	adc	r0, r0
    2f58:	38 f4       	brcc	.+14     	; 0x2f68 <__divmodsi4_exit>

00002f5a <__divmodsi4_neg2>:
    2f5a:	50 95       	com	r21
    2f5c:	40 95       	com	r20
    2f5e:	30 95       	com	r19
    2f60:	21 95       	neg	r18
    2f62:	3f 4f       	sbci	r19, 0xFF	; 255
    2f64:	4f 4f       	sbci	r20, 0xFF	; 255
    2f66:	5f 4f       	sbci	r21, 0xFF	; 255

00002f68 <__divmodsi4_exit>:
    2f68:	08 95       	ret

00002f6a <__divmodsi4_neg1>:
    2f6a:	f6 f7       	brtc	.-4      	; 0x2f68 <__divmodsi4_exit>
    2f6c:	90 95       	com	r25
    2f6e:	80 95       	com	r24
    2f70:	70 95       	com	r23
    2f72:	61 95       	neg	r22
    2f74:	7f 4f       	sbci	r23, 0xFF	; 255
    2f76:	8f 4f       	sbci	r24, 0xFF	; 255
    2f78:	9f 4f       	sbci	r25, 0xFF	; 255
    2f7a:	08 95       	ret

00002f7c <__udivmodsi4>:
    2f7c:	a1 e2       	ldi	r26, 0x21	; 33
    2f7e:	1a 2e       	mov	r1, r26
    2f80:	aa 1b       	sub	r26, r26
    2f82:	bb 1b       	sub	r27, r27
    2f84:	fd 01       	movw	r30, r26
    2f86:	0d c0       	rjmp	.+26     	; 0x2fa2 <__udivmodsi4_ep>

00002f88 <__udivmodsi4_loop>:
    2f88:	aa 1f       	adc	r26, r26
    2f8a:	bb 1f       	adc	r27, r27
    2f8c:	ee 1f       	adc	r30, r30
    2f8e:	ff 1f       	adc	r31, r31
    2f90:	a2 17       	cp	r26, r18
    2f92:	b3 07       	cpc	r27, r19
    2f94:	e4 07       	cpc	r30, r20
    2f96:	f5 07       	cpc	r31, r21
    2f98:	20 f0       	brcs	.+8      	; 0x2fa2 <__udivmodsi4_ep>
    2f9a:	a2 1b       	sub	r26, r18
    2f9c:	b3 0b       	sbc	r27, r19
    2f9e:	e4 0b       	sbc	r30, r20
    2fa0:	f5 0b       	sbc	r31, r21

00002fa2 <__udivmodsi4_ep>:
    2fa2:	66 1f       	adc	r22, r22
    2fa4:	77 1f       	adc	r23, r23
    2fa6:	88 1f       	adc	r24, r24
    2fa8:	99 1f       	adc	r25, r25
    2faa:	1a 94       	dec	r1
    2fac:	69 f7       	brne	.-38     	; 0x2f88 <__udivmodsi4_loop>
    2fae:	60 95       	com	r22
    2fb0:	70 95       	com	r23
    2fb2:	80 95       	com	r24
    2fb4:	90 95       	com	r25
    2fb6:	9b 01       	movw	r18, r22
    2fb8:	ac 01       	movw	r20, r24
    2fba:	bd 01       	movw	r22, r26
    2fbc:	cf 01       	movw	r24, r30
    2fbe:	08 95       	ret

00002fc0 <__prologue_saves__>:
    2fc0:	2f 92       	push	r2
    2fc2:	3f 92       	push	r3
    2fc4:	4f 92       	push	r4
    2fc6:	5f 92       	push	r5
    2fc8:	6f 92       	push	r6
    2fca:	7f 92       	push	r7
    2fcc:	8f 92       	push	r8
    2fce:	9f 92       	push	r9
    2fd0:	af 92       	push	r10
    2fd2:	bf 92       	push	r11
    2fd4:	cf 92       	push	r12
    2fd6:	df 92       	push	r13
    2fd8:	ef 92       	push	r14
    2fda:	ff 92       	push	r15
    2fdc:	0f 93       	push	r16
    2fde:	1f 93       	push	r17
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
    2fe4:	cd b7       	in	r28, 0x3d	; 61
    2fe6:	de b7       	in	r29, 0x3e	; 62
    2fe8:	ca 1b       	sub	r28, r26
    2fea:	db 0b       	sbc	r29, r27
    2fec:	0f b6       	in	r0, 0x3f	; 63
    2fee:	f8 94       	cli
    2ff0:	de bf       	out	0x3e, r29	; 62
    2ff2:	0f be       	out	0x3f, r0	; 63
    2ff4:	cd bf       	out	0x3d, r28	; 61
    2ff6:	09 94       	ijmp

00002ff8 <__epilogue_restores__>:
    2ff8:	2a 88       	ldd	r2, Y+18	; 0x12
    2ffa:	39 88       	ldd	r3, Y+17	; 0x11
    2ffc:	48 88       	ldd	r4, Y+16	; 0x10
    2ffe:	5f 84       	ldd	r5, Y+15	; 0x0f
    3000:	6e 84       	ldd	r6, Y+14	; 0x0e
    3002:	7d 84       	ldd	r7, Y+13	; 0x0d
    3004:	8c 84       	ldd	r8, Y+12	; 0x0c
    3006:	9b 84       	ldd	r9, Y+11	; 0x0b
    3008:	aa 84       	ldd	r10, Y+10	; 0x0a
    300a:	b9 84       	ldd	r11, Y+9	; 0x09
    300c:	c8 84       	ldd	r12, Y+8	; 0x08
    300e:	df 80       	ldd	r13, Y+7	; 0x07
    3010:	ee 80       	ldd	r14, Y+6	; 0x06
    3012:	fd 80       	ldd	r15, Y+5	; 0x05
    3014:	0c 81       	ldd	r16, Y+4	; 0x04
    3016:	1b 81       	ldd	r17, Y+3	; 0x03
    3018:	aa 81       	ldd	r26, Y+2	; 0x02
    301a:	b9 81       	ldd	r27, Y+1	; 0x01
    301c:	ce 0f       	add	r28, r30
    301e:	d1 1d       	adc	r29, r1
    3020:	0f b6       	in	r0, 0x3f	; 63
    3022:	f8 94       	cli
    3024:	de bf       	out	0x3e, r29	; 62
    3026:	0f be       	out	0x3f, r0	; 63
    3028:	cd bf       	out	0x3d, r28	; 61
    302a:	ed 01       	movw	r28, r26
    302c:	08 95       	ret

0000302e <_exit>:
    302e:	f8 94       	cli

00003030 <__stop_program>:
    3030:	ff cf       	rjmp	.-2      	; 0x3030 <__stop_program>
